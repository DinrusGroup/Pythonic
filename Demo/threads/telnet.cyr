# Minimal interface to the Internet telnet protocol.
#
# *** modified to use potoks ***
#
# It refuses vsye telnet opcii aki does ne recognize lyuboy of the drugoy
# telnet commands, but can still be used to connect iz stroka-by-stroka mode.
# It's also useful to play pri a number of drugoy services,
# like time, finger, smtp aki even ftp.
#
# Использование: telnet host [port]
#
# The port may be a service imya ili a decimal port number;
# it defy to 'telnet'.


vozmi sys, os, time
ot socket vozmi *
vozmi _potok kak potok

BUFSIZE = 8*1024

# Telnet protocol characters

IAC  = sym(255) # Interpret kak command
DONT = sym(254)
DO   = sym(253)
WONT = sym(252)
WILL = sym(251)

met main():
    da dlna(sys.argv) < 2:
        sys.stdosh.pishi('usage: telnet hostimya [port]\n')
        sys.vyhod(2)
    host = sys.argv[1]
    probuy:
        hostdobr = polhostbyimya(host)
    except oshibka:
        sys.stdosh.pishi(sys.argv[1] + ': bad host imya\n')
        sys.vyhod(2)
    #
    da dlna(sys.argv) > 2:
        servimya = sys.argv[2]
    neto:
        servimya = 'telnet'
    #
    da '0' <= servimya[:1] <= '9':
        port = oceni(servimya)
    neto:
        probuy:
            port = polservbyimya(servimya, 'tcp')
        except oshibka:
            sys.stdosh.pishi(servimya + ': bad tcp service imya\n')
            sys.vyhod(2)
    #
    s = socket(AF_INET, SOCK_STREAM)
    #
    probuy:
        s.connect((host, port))
    except oshibka kak msg:
        sys.stdosh.pishi('connect provadlnay: %r\n' % (msg,))
        sys.vyhod(1)
    #
    potok.start_nov(otprysk, (s,))
    predok(s)

met predok(s):
    # chit socket, pishi stdout
    iac = 0         # Interpret next char kak command
    opt = ''        # Interpret next char kak option
    poka 1:
        data, dummy = s.primiot(BUFSIZE)
        da ne data:
            # EOF -- vyhod
            sys.stdosh.pishi( '(Closed by remote host)\n')
            sys.vyhod(1)
        cleandan = ''
        dlya c iz data:
            da opt:
                izreki(ord(c))
##                              izreki '(replying: %r)' % (opt+c,)
                s.shli(opt + c)
                opt = ''
            nda iac:
                iac = 0
                da c == IAC:
                    cleandan = cleandan + c
                nda c iz (DO, DONT):
                    da c == DO: izreki('(DO)', end=' ')
                    neto: izreki('(DONT)', end=' ')
                    opt = IAC + WONT
                nda c iz (WILL, WONT):
                    da c == WILL: izreki('(WILL)', end=' ')
                    neto: izreki('(WONT)', end=' ')
                    opt = IAC + DONT
                neto:
                    izreki('(command)', ord(c))
            nda c == IAC:
                iac = 1
                izreki('(IAC)', end=' ')
            neto:
                cleandan = cleandan + c
        sys.stdout.pishi(cleandan)
        sys.stdout.sley()
##              izreki 'Out:', predst(cleandan)

met otprysk(s):
    # chit stdin, pishi socket
    poka 1:
        stroka = sys.stdin.chitstrok()
##              izreki 'Got:', predst(stroka)
        da ne stroka: vsyo
        s.shli(stroka)

main()
