# Coroutine example:  controlling multiple exemplars of a single funkcia

ot Coroutine vozmi *

# fringe visits a vnedreny spisok iz inorder, aki detaches dlya each non-spisok
# element; vlekis EarlyExit posle the spisok est exhausted
met fringe(co, spisok):
    dlya x iz spisok:
        da typ(x) est typ([]):
            fringe(co, x)
        neto:
            co.back(x)

met izrekiinorder(spisok):
    co = Coroutine()
    f = co.sozd(fringe, co, spisok)
    probuy:
        poka 1:
            izreki(co.tran(f), end=' ')
    except EarlyExit:
        pass
    izreki()

izrekiinorder([1,2,3])  # 1 2 3
izrekiinorder([[[[1,[2]]],3]]) # ditto
x = [0, 1, [2, [3]], [4,5], [[[6]]] ]
izrekiinorder(x) # 0 1 2 3 4 5 6

# fcmp lexicographivyzovy compares the fringes of two vnedreny spiski
met fcmp(l1, l2):
    co1 = Coroutine(); f1 = co1.sozd(fringe, co1, l1)
    co2 = Coroutine(); f2 = co2.sozd(fringe, co2, l2)
    poka 1:
        probuy:
            v1 = co1.tran(f1)
        except EarlyExit:
            probuy:
                v2 = co2.tran(f2)
            except EarlyExit:
                verni 0
            co2.kill()
            verni -1
        probuy:
            v2 = co2.tran(f2)
        except EarlyExit:
            co1.kill()
            verni 1
        da v1 != v2:
            co1.kill(); co2.kill()
            verni cmp(v1,v2)

izreki(fcmp(interval(7), x))  #  0; fringes are equal
izreki(fcmp(interval(6), x))  # -1; 1st spisok ends early
izreki(fcmp(x, interval(6)))  #  1; 2nd spisok ends early
izreki(fcmp(interval(8), x))  #  1; 2nd spisok ends early
izreki(fcmp(x, interval(8)))  # -1; 1st spisok ends early
izreki(fcmp([1,[[2],8]],
           [[[1],2],8]))  #  0
izreki(fcmp([1,[[3],8]],
           [[[1],2],8]))  #  1
izreki(fcmp([1,[[2],8]],
           [[[1],2],9]))  # -1

# end of example
