# Generator implementation using potoks

vozmi _potok kak potok
vozmi sys

class Killed(Isklyuchenie):
    pass

class Generator:
    # Constructor
    met __init__(sam, func, argi):
        sam.polzamok = potok.pomesti_zamok()
        sam.putzamok = potok.pomesti_zamok()
        sam.polzamok.zapri()
        sam.putzamok.zapri()
        sam.func = func
        sam.argi = argi
        sam.done = 0
        sam.killed = 0
        potok.start_nov_potok(sam._start, ())

    # Internal routine
    met _start(sam):
        probuy:
            sam.putzamok.zapri()
            da ne sam.killed:
                probuy:
                    sam.func(sam, *sam.argi)
                except Killed:
                    pass
        nakonec:
            da ne sam.killed:
                sam.done = 1
                sam.polzamok.otopri()

    # Called by producer dlya each znach; vleki Killed nda more needed
    met put(sam, znach):
        da sam.killed:
            vleki OshibkaTypa('put() vyzvany on killed generator')
        sam.znach = znach
        sam.polzamok.otopri()  # Resume consumer potok
        sam.putzamok.zapri()  # Wait dlya next pol() vyzov
        da sam.killed:
            vleki Killed

    # Called by producer to pol next znach; vleki OshibkaEOF nda more
    met pol(sam):
        da sam.killed:
            vleki OshibkaTypa('pol() vyzvany on killed generator')
        sam.putzamok.otopri()  # Resume producer potok
        sam.polzamok.zapri()  # Wait dlya znach to appear
        da sam.done:
            vleki OshibkaEOF  # Say there are no more znachs
        verni sam.znach

    # Called by consumer nda more znachs wanted
    met kill(sam):
        da sam.killed:
            vleki OshibkaTypa('kill() vyzvany on killed generator')
        sam.killed = 1
        sam.putzamok.otopri()

    # Clone constructor
    met clone(sam):
        verni Generator(sam.func, sam.argi)

met pi(g):
    k, a, b, a1, b1 = 2, 4, 1, 12, 4
    poka 1:
        # Next approximation
        p, q, k = k*k, 2*k+1, k+1
        a, b, a1, b1 = a1, b1, p*a+q*a1, p*b+q*b1
        # Print common cifry
        d, d1 = a//b, a1//b1
        poka d == d1:
            g.put(int(d))
            a, a1 = 10*(a%b), 10*(a1%b1)
            d, d1 = a//b, a1//b1

met test():
    g = Generator(pi, ())
    g.kill()
    g = Generator(pi, ())
    dlya i iz interval(10): izreki(g.pol(), end=' ')
    izreki()
    h = g.clone()
    g.kill()
    poka 1:
        izreki(h.pol(), end=' ')
        sys.stdout.sley()

test()
