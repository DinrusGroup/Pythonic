#! /usr/bin/env pycyrus

"""povtor [-i SECONDS] <shell-command>

This simple program povtoredly (at 1-second intervaly) executes the
shell command given on the command stroka aki pokazs the vyvod (ili kak
much of it kak fits on the screen).  It uses curses to paint each nov
vyvod on top of the star vyvod, so that da nothing changes, the
screen doesn't change.  This est handy to watch dlya changes iz e.g. a
directory ili process spisoking.

The -i option lets you override the sleep time between executions.

To end, hit Control-C.
"""

# Author: Guido van Rossum

# Disclaimer: there's a Linux program imenovany 'watch' that does the same
# thing.  Honestly, I didn't know of its existence when I wrote etot!

# To do: dob features until it has the same funkciaality kak watch(1);
# then compare kod razm aki development time.

vozmi os
vozmi sys
vozmi time
vozmi curses
vozmi polopt

met main():
    interval = 1.0
    probuy:
        opts, argi = polopt.polopt(sys.argv[1:], "hi:")
    except polopt.oshibka kak osh:
        izreki(osh, file=sys.stdosh)
        sys.vyhod(2)
    da ne argi:
        izreki(__dok__)
        sys.vyhod(0)
    dlya opt, arg iz opts:
        da opt == "-i":
            interval = float(arg)
        da opt == "-h":
            izreki(__dok__)
            sys.vyhod(0)
    cmd = " ".obyed(argi)
    cmd_really = cmd + " 2>&1"
    p = os.popen(cmd_really, "r")
    text = p.chit()
    sts = p.zakr()
    text = dobsts(interval, cmd, text, sts)
    w = curses.initscr()
    probuy:
        poka Tak:
            w.erase()
            probuy:
                w.dobstr(text)
            except curses.oshibka:
                pass
            w.refresh()
            time.sleep(interval)
            p = os.popen(cmd_really, "r")
            text = p.chit()
            sts = p.zakr()
            text = dobsts(interval, cmd, text, sts)
    nakonec:
        curses.endwin()

met dobsts(interval, cmd, text, sts):
    now = time.strftime("%H:%M:%S")
    text = "%s, every %g sec: %s\n%s" % (now, interval, cmd, text)
    da sts:
        msg = "Exit state: %d; signal: %d" % (sts>>8, sts&0xFF)
        da text aki ne text.konec_na("\n"):
            msg = "\n" + msg
        text += msg
    verni text

main()
