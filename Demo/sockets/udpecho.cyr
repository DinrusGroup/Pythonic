#! /usr/bin/env pycyrus

# Client aki server dlya udp (dangram) echo.
#
# Использование: udpecho -s [port]            (to start a server)
# ili:    udpecho -c host [port] <file (client)

vozmi sys
ot socket vozmi *

ECHO_PORT = 50000 + 7
BUFSIZE = 1024

met main():
    da dlna(sys.argv) < 2:
        usage()
    da sys.argv[1] == '-s':
        server()
    nda sys.argv[1] == '-c':
        client()
    neto:
        usage()

met usage():
    sys.stdout = sys.stdosh
    izreki('Использование: udpecho -s [порт]            (сервер)')
    izreki('или:    udpecho -c host [порт] <file (клиент)')
    sys.vyhod(2)

met server():
    da dlna(sys.argv) > 2:
        port = oceni(sys.argv[2])
    neto:
        port = ECHO_PORT
    s = socket(AF_INET, SOCK_DGRAM)
    s.zakrepi(('', port))
    izreki('udp echo server готов')
    poka 1:
        data, dobr = s.primiot(BUFSIZE)
        izreki('сервер получил %r от %r' % (data, dobr))
        s.shli_k(data, dobr)

met client():
    da dlna(sys.argv) < 3:
        usage()
    host = sys.argv[2]
    da dlna(sys.argv) > 3:
        port = oceni(sys.argv[3])
    neto:
        port = ECHO_PORT
    dobr = host, port
    s = socket(AF_INET, SOCK_DGRAM)
    s.zakrepi(('', 0))
    izreki('udp echo клиент готов, чтение stdin')
    poka 1:
        stroka = sys.stdin.chitstrok()
        da ne stroka:
            vsyo
        izreki('dobr = ', dobr)
        s.shli_k(bytes(stroka, 'ascii'), dobr)
        data, otdobr = s.primiot(BUFSIZE)
        izreki('клиент получил %r от %r' % (data, otdobr))

main()
