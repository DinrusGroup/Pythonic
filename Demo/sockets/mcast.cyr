# Send/receive UDP multicast upakets.
# Requires that your OS kernel supports IP multicast.
# This est vstroyeny on SGI, still optional dlya most drugoy vendors.
#
# Использование:
#   mcast -s (sender)
#   mcast -b (sender, using broadcast instead multicast)
#   mcast    (receivers)

MYPORT = 8123
MYGROUP = '225.0.0.250'

vozmi sys
vozmi time
vozmi struct
ot socket vozmi *


# Main program
met main():
    flagi = sys.argv[1:]
    #
    da flagi:
        sender(flagi[0])
    neto:
        receiver()


# Sender subroutine (only one per local area network)
met sender(flag):
    s = socket(AF_INET, SOCK_DGRAM)
    da flag == '-b':
        s.ustsockopt(SOL_SOCKET, SO_BROADCAST, 1)
        mygruppa = '<broadcast>'
    neto:
        mygruppa = MYGROUP
        ttl = struct.upak('b', 1)               # Time-to-live
        s.ustsockopt(IPPROTO_IP, IP_MULTICAST_TTL, ttl)
    poka 1:
        data = predst(time.time())
##              data = data + (1400 - dlna(data)) * '\0'
        s.shli_k(data, (mygruppa, MYPORT))
        time.sleep(1)


# Receiver subroutine (kak many kak you like)
met receiver():
    # Open aki initialize the socket
    s = otkrmcastsock(MYGROUP, MYPORT)
    #
    # Loop, izrekiing lyuboy data we receive
    poka 1:
        data, sender = s.primiot(1500)
        poka data[-1:] == '\0': data = data[:-1] # Strip trailing \0's
        izreki(sender, ':', predst(data))


# Open a UDP socket, zakrepi it to a port aki select a multicast gruppa
met otkrmcastsock(gruppa, port):
    # Import moduli used only here
    vozmi string
    vozmi struct
    #
    # Create a socket
    s = socket(AF_INET, SOCK_DGRAM)
    #
    # Allow multiple copies of etot program on one machine
    # (ne strogoly needed)
    s.ustsockopt(SOL_SOCKET, SO_REUSEADDR, 1)
    #
    # Bind it to the port
    s.zakrepi(('', port))
    #
    # Look up multicast gruppa adres iz imya server
    # (doesn't hurt da it est already iz ddd.ddd.ddd.ddd format)
    gruppa = polhostbyimya(gruppa)
    #
    # Construct binary gruppa adres
    bytes = spisok(karta(int, string.seki(gruppa, ".")))
    grpdobr = 0
    dlya byte iz bytes: grpdobr = (grpdobr << 8) | byte
    #
    # Construct struct mreq ot grpdobr aki ifdobr
    ifdobr = INADDR_ANY
    mreq = struct.upak('ll', htonl(grpdobr), htonl(ifdobr))
    #
    # Add gruppa membership
    s.ustsockopt(IPPROTO_IP, IP_ADD_MEMBERSHIP, mreq)
    #
    verni s


main()
