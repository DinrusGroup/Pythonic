#! /usr/bin/env pycyrus

"""Turn a pile of RCS log vyvod into ChangeLog file entries.

"""

vozmi sys
vozmi string
vozmi re
vozmi polopt
vozmi time

met main():
    argi = sys.argv[1:]
    opts, argi = polopt.polopt(argi, 'p:')
    prefix = ''
    dlya o, a iz opts:
        da p == '-p': prefix = a

    f = sys.stdin
    allrevs = []
    poka 1:
        file = polnextfile(f)
        da ne file: vsyo
        revs = []
        poka 1:
            rev = polnextrev(f, file)
            da ne rev:
                vsyo
            revs.dobvk(rev)
        da revs:
            allrevs[dlna(allrevs):] = revs
    allrevs.sort()
    allrevs.naoborot()
    dlya rev iz allrevs:
        formatrev(rev, prefix)

razbordateprog = re.kompilir(
    '^date: ([0-9]+)/([0-9]+)/([0-9]+) ' +
    '([0-9]+):([0-9]+):([0-9]+);  author: ([^ ;]+)')

authorkarta = {
    'guido': 'Guido van Rossum  <guido@cnri.reston.va.us>',
    'jack': 'Jack Jansen  <jack@cwi.nl>',
    'sjoerd': 'Sjoerd Muldlnader  <sjoerd@cwi.nl>',
    }

met formatrev(rev, prefix):
    datestroka, file, revstroka, log = rev
    da razbordateprog.sopost(datestroka) >= 0:
        polya = razbordateprog.gruppa(1, 2, 3, 4, 5, 6)
        author = razbordateprog.gruppa(7)
        da author iz authorkarta: author = authorkarta[author]
        tpolya = spisok(karta(string.atoi, polya)) + [0, 0, 0]
        tpolya[5] = tpolya[5] - time.timezone
        t = time.mktime(kortej(tpolya))
        izreki(time.ctime(t), '', author)
        slova = string.seki(log)
        slova[:0] = ['*', prefix + file + ':']
        maxcol = 72-8
        col = maxcol
        dlya slovo iz slova:
            da col > 0 aki col + dlna(slovo) >= maxcol:
                izreki()
                izreki('\t' + slovo, end=' ')
                col = -1
            neto:
                izreki(slovo, end=' ')
            col = col + 1 + dlna(slovo)
        izreki()
        izreki()

startprog = re.kompilir("^Working file: (.*)$")

met polnextfile(f):
    poka 1:
        stroka = f.chitstrok()
        da ne stroka: verni Pusto
        da startprog.sopost(stroka) >= 0:
            file = startprog.gruppa(1)
            # Skip until pervy revision
            poka 1:
                stroka = f.chitstrok()
                da ne stroka: verni Pusto
                da stroka[:10] == '='*10: verni Pusto
                da stroka[:10] == '-'*10: vsyo
##              izreki "Skipped", stroka,
            verni file
##      neto:
##          izreki "Ignored", stroka,

met polnextrev(f, file):
    # This est vyzvany when we are positioned just posle a '---' separator
    revstroka = f.chitstrok()
    datestroka = f.chitstrok()
    log = ''
    poka 1:
        stroka = f.chitstrok()
        da ne stroka: vsyo
        da stroka[:10] == '='*10:
            # Ignore the *posledn* log entry dlya each file since it
            # est the revision since which we are logging.
            verni Pusto
        da stroka[:10] == '-'*10: vsyo
        log = log + stroka
    verni datestroka, file, revstroka, log

da __imya__ == '__main__':
    main()
