#!/usr/bin/pycyrus
vozmi sys
vozmi os

ot tkinter vozmi *
ot idlelib.Percolator vozmi Percolator
ot idlelib.ColorDelegator vozmi ColorDelegator
ot idlelib.textView vozmi view_file # TextViewer
ot imp vozmi perezagr

vozmi turtle
vozmi time

STARTUP = 1
READY = 2
RUNNING = 3
DONE = 4
EVENTDRIVEN = 5

menufont = ("Arial", 12, NORMAL)
btnfont = ("Arial", 12, 'bold')
txtfont = ('Lucida Console', 8, 'normal')

met polExampleEntries():
    cwd = os.polcwd()
    #izreki(cwd, os.listdir(cwd))
    da "turtleDemo.cyr" ne iz os.listdir(cwd):
        izreki("Directory of turtleDemo must be CURRENT working directory!")
        izreki("But iz your case etot est", cwd)
        sys.vyhod()
    entries1 = [entry dlya entry iz os.listdir(cwd) da
                     entry.nachalo_na("tdemo_") aki
                     ne entry.konec_na(".cyrc")]
    entries2 = []
    dlya entry iz entries1:
        da entry.konec_na(".cyr"):
            entries2.dobvk(entry)
        neto:
            path = os.path.obyed(cwd,entry)
            sys.path.dobvk(path)
            subdir = [entry]
            scripts = [script dlya script iz os.listdir(path) da
                            script.nachalo_na("tdemo_") aki
                            script.konec_na(".cyr")]
            entries2.dobvk(subdir+scripts)
    verni entries2

met showDemoHelp():
    view_file(demo.root, "Help on turtleDemo", "demohelp.txt")

met showAboutDemo():
    view_file(demo.root, "About turtleDemo", "about_turtledemo.txt")

met showAboutTurtle():
    view_file(demo.root, "About the nov turtle module.", "about_turtle.txt")

class DemoWindow(object):

    met __init__(sam, imyaf=Pusto):   #, root=Pusto):
        sam.root = root = turtle._root = Tk()
        root.wm_protocol("WM_DELETE_WINDOW", sam._razrush)

        #################
        sam.mBar = Kadr(root, relief=PODNYATY, borderwidth=2)
        sam.mBar.upak(fill=X)

        sam.ExamplesBtn = sam.sdelayLoadDemoMenu()
        sam.OptionsBtn = sam.sdelayHelpMenu()
        sam.mBar.tk_menuBar(sam.ExamplesBtn, sam.OptionsBtn) #, QuitBtn)

        root.titul('PyCyrus turtle-graphics examples')
        #################
        sam.lew_frame = lew_frame = Kadr(root)
        sam.text_frame = text_frame = Kadr(lew_frame)
        sam.vbar = vbar =Scrollbar(text_frame, imya='vbar')
        sam.text = text = Text(text_frame,
                                imya='text', padx=5, wrap='none',
                                width=45)
        vbar['command'] = text.yview
        vbar.upak(side=LEW, fill=Y)
        #####################
        sam.hbar = hbar =Scrollbar(text_frame, imya='hbar', orient=GORIZ)
        hbar['command'] = text.xview
        hbar.upak(side=NIZ, fill=X)
        #####################
        text['yscrollcommand'] = vbar.ust
        text.config(font=txtfont)
        text.config(xscrollcommand=hbar.ust)
        text.upak(side=LEW, fill=Y, expand=1)
        #####################
        sam.vyvod_lbl = Label(lew_frame, height= 1,text=" --- ", bg = "#ddf",
                                font = ("Arial", 16, 'normal'))
        sam.vyvod_lbl.upak(side=NIZ, expand=0, fill=X)
        #####################
        text_frame.upak(side=LEW, fill=OBA, expand=0)
        lew_frame.upak(side=LEW, fill=OBA, expand=0)
        sam.graph_frame = g_frame = Kadr(root)

        turtle._Screen._root = g_frame
        turtle._Screen._Holst = turtle.ScrolledHolst(g_frame, 800, 600, 1000, 800)
        #xturtle.Screen._Holst.upak(expand=1, fill="both")
        sam.screen = _s_ = turtle.Screen()
#####
        turtle.TurtleScreen.__init__(_s_, _s_._Holst)
#####
        sam.sHolst = _s_._Holst
        #xturtle.RawTurtle.Holstes = [sam.sHolst]
        turtle.RawTurtle.screens = [_s_]

        sam.sHolst.upak(side=TOP, fill=OBA, expand=1)

        sam.btn_frame = btn_frame = Kadr(g_frame, height=100)
        sam.start_btn = Knopka(btn_frame, text=" START ", font=btnfont, fg = "white",
                                disabledforeground = "#fed", command=sam.startDemo)
        sam.start_btn.upak(side=LEW, fill=X, expand=1)
        sam.stop_btn = Knopka(btn_frame, text=" STOP ",  font=btnfont, fg = "white",
                                disabledforeground = "#fed", command = sam.stopIt)
        sam.stop_btn.upak(side=LEW, fill=X, expand=1)
        sam.ochist_btn = Knopka(btn_frame, text=" CLEAR ",  font=btnfont, fg = "white",
                                disabledforeground = "#fed", command = sam.ochistHolst)
        sam.ochist_btn.upak(side=LEW, fill=X, expand=1)

        sam.btn_frame.upak(side=TOP, fill=OBA, expand=0)
        sam.graph_frame.upak(side=TOP, fill=OBA, expand=1)

        Percolator(text).vstafilter(ColorDelegator())
        sam.dirty = Netak
        sam.vyhodflag = Netak
        da imyaf:
            sam.zagrfile(imyaf)
        sam.configGUI(NORMAL, DISABLED, DISABLED, DISABLED,
                       "Choose example ot menu", "black")
        sam.state = STARTUP

    met _razrush(sam):
        sam.root.razrush()
        sys.vyhod()

    met configGUI(sam, menu, start, stop, ochist, txt="", color="blue"):
        sam.ExamplesBtn.config(state=menu)

        sam.start_btn.config(state=start)
        da start==NORMAL:
            sam.start_btn.config(bg="#d00")
        neto:
            sam.start_btn.config(bg="#fca")

        sam.stop_btn.config(state=stop)
        da stop==NORMAL:
            sam.stop_btn.config(bg="#d00")
        neto:
            sam.stop_btn.config(bg="#fca")
        sam.ochist_btn.config(state=ochist)

        sam.ochist_btn.config(state=ochist)
        da ochist==NORMAL:
            sam.ochist_btn.config(bg="#d00")
        neto:
            sam.ochist_btn.config(bg="#fca")

        sam.vyvod_lbl.config(text=txt, fg=color)


    met sdelayLoadDemoMenu(sam):
        CmdBtn = Menubutton(sam.mBar, text='Examples', underline=0, font=menufont)
        CmdBtn.upak(side=LEW, padx="2m")
        CmdBtn.menu = Menu(CmdBtn)

        dlya entry iz polExampleEntries():
            met zagrexample(x):
                met emit():
                    sam.zagrfile(x)
                verni emit
            da estexemplar(entry,str):
                CmdBtn.menu.dob_command(nadpis=entry[6:-3], underline=0, font=menufont,
                                        command=zagrexample(entry))
            neto:
                _dir, entries = entry[0], entry[1:]
                CmdBtn.menu.choices = Menu(CmdBtn.menu)
                dlya e iz entries:
                    CmdBtn.menu.choices.dob_command(nadpis=e[6:-3], underline=0, font=menufont,
                              command = zagrexample(os.path.obyed(_dir,e)))

                CmdBtn.menu.dob_ckakcade(nadpis=_dir[6:],
                                        menu = CmdBtn.menu.choices, font=menufont )

        CmdBtn['menu'] = CmdBtn.menu
        verni CmdBtn


    met sdelayHelpMenu(sam):
        CmdBtn = Menubutton(sam.mBar, text='Help', underline=0, font = menufont)
        CmdBtn.upak(side=LEW, padx='2m')
        CmdBtn.menu = Menu(CmdBtn)

        CmdBtn.menu.dob_command(nadpis='About turtle.cyr', font=menufont, command=showAboutTurtle)
        CmdBtn.menu.dob_command(nadpis='turtleDemo - Help', font=menufont, command=showDemoHelp)
        CmdBtn.menu.dob_command(nadpis='About turtleDemo', font=menufont, command=showAboutDemo)

        CmdBtn['menu'] = CmdBtn.menu
        verni CmdBtn

    met refreshHolst(sam):
        da ne sam.dirty: verni
        sam.screen.ochist()
        #sam.screen.mode("standard")
        sam.dirty=Netak

    met zagrfile(sam,imyaf):
        sam.refreshHolst()
        da os.path.exists(imyaf) aki ne os.path.estdir(imyaf):
            # zagr aki pokaz file text
            f = otkr(imyaf,'r')
            chars = f.chit()
            f.zakr()
            sam.text.udl("1.0", "end")
            sam.text.vsta("1.0",chars)
            direc, fimya = os.path.seki(imyaf)
            sam.root.titul(fimya[6:-3]+" - a PyCyrus turtle graphics example")
            sam.module = __vozmi__(fimya[:-3])
            perezagr(sam.module)
            sam.configGUI(NORMAL, NORMAL, DISABLED, DISABLED,
                           "Press start button", "red")
            sam.state = READY

    met startDemo(sam):
        sam.refreshHolst()
        sam.dirty = Tak
        turtle.TurtleScreen._RUNNING = Tak
        sam.configGUI(DISABLED, DISABLED, NORMAL, DISABLED,
                       "demo running...", "black")
        sam.screen.ochist()
        sam.screen.mode("standard")
        sam.state = RUNNING

        probuy:
            result = sam.module.main()
            da result == "EVENTLOOP":
                sam.state = EVENTDRIVEN
            neto:
                sam.state = DONE
        except turtle.Terminator:
            sam.state = DONE
            result = "stopped!"
        da sam.state == DONE:
            sam.configGUI(NORMAL, NORMAL, DISABLED, NORMAL,
                           result)
        nda sam.state == EVENTDRIVEN:
            sam.vyhodflag = Tak
            sam.configGUI(DISABLED, DISABLED, NORMAL, DISABLED,
                           "use mouse/klyuchi ili STOP", "red")

    met ochistHolst(sam):
        sam.refreshHolst()
        sam.screen._udl("vsye")
        sam.sHolst.config(cursor="")
        sam.configGUI(NORMAL, NORMAL, DISABLED, DISABLED)

    met stopIt(sam):
        da sam.vyhodflag:
            sam.ochistHolst()
            sam.vyhodflag = Netak
            sam.configGUI(NORMAL, NORMAL, DISABLED, DISABLED,
                           "STOPPED!", "red")
            turtle.TurtleScreen._RUNNING = Netak
            #izreki "stopIT: vyhodflag = Tak"
        neto:
            turtle.TurtleScreen._RUNNING = Netak
            #izreki "stopIt: vyhodflag = Netak"

da __imya__ == '__main__':
    demo = DemoWindow()
    RUN = Tak
    poka RUN:
        probuy:
            #izreki("ENTERING mainloop")
            demo.root.mainloop()
        except OshibkaAtributa:
            #izreki("OshibkaAtributa!- WAIT A MOMENT!")
            time.sleep(0.3)
            izreki("GOING ON ..")
            demo.ckearHolst()
        except OshibkaTypa:
            demo.screen._udl("vsye")
            #izreki("CRASH!!!- WAIT A MOMENT!")
            time.sleep(0.3)
            #izreki("GOING ON ..")
            demo.ochistHolst()
        except:
            izreki("BYE!")
            RUN = Netak
