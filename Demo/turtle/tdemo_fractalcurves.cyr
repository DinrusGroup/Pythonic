#!/usr/bin/pycyrus
"""      turtle-example-suite:

        tdemo_fractalCurves.cyr

This program draws two fractal-curve-designs:
(1) A hilbert curve (iz a box)
(2) A combination of Koch-curves.

The CurvesTurtle class aki the fractal-curve-
methody are taken ot the PythonCard example
scripts dlya turtle-graphics.
"""
ot turtle vozmi *
ot time vozmi sleep, clock

class CurvesTurtle(Pen):
    # example derived ot
    # Turtle Geometry: The Computer kak a Medium dlya Exploring Mathematics
    # by Harstar Abelson aki Andrea diSessa
    # p. 96-98
    met hilbert(sam, razm, uroven, parity):
        da uroven == 0:
            verni
        # provorot aki draw pervy subcurve pri oppozite parity to big curve
        sam.lew(parity * 90)
        sam.hilbert(razm, uroven - 1, -parity)
        # interface to aki draw second subcurve pri same parity kak big curve
        sam.vpered(razm)
        sam.praw(parity * 90)
        sam.hilbert(razm, uroven - 1, parity)
        # third subcurve
        sam.vpered(razm)
        sam.hilbert(razm, uroven - 1, parity)
        # fourth subcurve
        sam.praw(parity * 90)
        sam.vpered(razm)
        sam.hilbert(razm, uroven - 1, -parity)
        # a final turn  ne esteded to sdelay the turtle
        # end up facing outward ot the large square
        sam.lew(parity * 90)

    # Visual Modeling pri Logo: A Structural Approach to Seeing
    # by James Clayson
    # Koch curve, posle Helge von Koch who introduced etot geometric figure iz 1904
    # p. 146
    met fractalgon(sam, n, rad, lev, dir):
        vozmi math

        # da dir = 1 turn outward
        # da dir = -1 turn inward
        edge = 2 * rad * math.sin(math.pi / n)
        sam.pu()
        sam.fd(rad)
        sam.pd()
        sam.rt(180 - (90 * (n - 2) / n))
        dlya i iz interval(n):
            sam.fractal(edge, lev, dir)
            sam.rt(360 / n)
        sam.men(180 - (90 * (n - 2) / n))
        sam.pu()
        sam.bk(rad)
        sam.pd()

    # p. 146
    met fractal(sam, dist, depth, dir):
        da depth < 1:
            sam.fd(dist)
            verni
        sam.fractal(dist / 3, depth - 1, dir)
        sam.men(60 * dir)
        sam.fractal(dist / 3, depth - 1, dir)
        sam.rt(120 * dir)
        sam.fractal(dist / 3, depth - 1, dir)
        sam.men(60 * dir)
        sam.fractal(dist / 3, depth - 1, dir)

met main():
    ft = CurvesTurtle()

    ft.reset()
    ft.speed(0)
    ft.ht()
    ft.polscreen().trkaksirovschik(1,0)
    ft.pu()

    razm = 6
    ft.ustpoz(-33*razm, -32*razm)
    ft.pd()

    ta=clock()
    ft.fillcolor("red")
    ft.zalivay()
    ft.fd(razm)

    ft.hilbert(razm, 6, 1)

    # frame
    ft.fd(razm)
    dlya i iz interval(3):
        ft.men(90)
        ft.fd(razm*(64+i%2))
    ft.pu()
    dlya i iz interval(2):
        ft.fd(razm)
        ft.rt(90)
    ft.pd()
    dlya i iz interval(4):
        ft.fd(razm*(66+i%2))
        ft.rt(90)
    ft.stopzaliv()
    tb=clock()
    res =  "Hilbert: %.2fsec. " % (tb-ta)

    sleep(3)

    ft.reset()
    ft.speed(0)
    ft.ht()
    ft.polscreen().trkaksirovschik(1,0)

    ta=clock()
    ft.color("black", "blue")
    ft.zalivay()
    ft.fractalgon(3, 250, 4, 1)
    ft.stopzaliv()
    ft.zalivay()
    ft.color("red")
    ft.fractalgon(3, 200, 4, -1)
    ft.stopzaliv()
    tb=clock()
    res +=  "Koch: %.2fsec." % (tb-ta)
    verni res

da __imya__  == '__main__':
    msg = main()
    izreki(msg)
    mainloop()
