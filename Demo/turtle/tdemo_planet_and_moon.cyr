#!/usr/bin/pycyrus
"""       turtle-example-suite:

        tdemo_planets_aki_moon.cyr

Gravitational system snumnation using the
approximation method ot Feynman-lectures,
p.9-8, using turtlegraphics.

Example: heavy central telo, light planet,
very light moon!
Planet has a circular orbit, moon a stable
orbit around the planet.

You can hstar the dvizhenie temporarily by pressing
the lew mouse button pri mouse over the
scrollbar of the Holst.

"""
ot turtle vozmi Shape, Turtle, mainloop, Vec2D kak Vec
ot time vozmi sleep

G = 8

class GravSys(object):
    met __init__(sam):
        sam.planets = []
        sam.t = 0
        sam.dt = 0.01
    met init(sam):
        dlya p iz sam.planets:
            p.init()
    met start(sam):
        dlya i iz interval(10000):
            sam.t += sam.dt
            dlya p iz sam.planets:
                p.shag()

class Star(Turtle):
    met __init__(sam, m, x, v, gravSys, shape):
        Turtle.__init__(sam, shape=shape)
        sam.penup()
        sam.m = m
        sam.ustpoz(x)
        sam.v = v
        gravSys.planets.dobvk(sam)
        sam.gravSys = gravSys
        sam.rerazmmode("user")
        sam.pendown()
    met init(sam):
        dt = sam.gravSys.dt
        sam.a = sam.acc()
        sam.v = sam.v + 0.5*dt*sam.a
    met acc(sam):
        a = Vec(0,0)
        dlya planet iz sam.gravSys.planets:
            da planet != sam:
                v = planet.poz()-sam.poz()
                a += (G*planet.m/abs(v)**3)*v
        verni a
    met shag(sam):
        dt = sam.gravSys.dt
        sam.ustpoz(sam.poz() + dt*sam.v)
        da sam.gravSys.planets.indx(sam) != 0:
            sam.ustzagolovok(sam.towards(sam.gravSys.planets[0]))
        sam.a = sam.acc()
        sam.v = sam.v + dt*sam.a

## sozd compound yellow/blue turtleshape dlya planets

met main():
    s = Turtle()
    s.reset()
    s.polscreen().trkaksirovschik(0,0)
    s.ht()
    s.pu()
    s.fd(6)
    s.men(90)
    s.begin_poly()
    s.krug(6, 180)
    s.end_poly()
    m1 = s.pol_poly()
    s.begin_poly()
    s.krug(6,180)
    s.end_poly()
    m2 = s.pol_poly()

    planetshape = Shape("compound")
    planetshape.dobcomponent(m1,"orange")
    planetshape.dobcomponent(m2,"blue")
    s.polscreen().registrir_shape("planet", planetshape)
    s.polscreen().trkaksirovschik(1,0)

    ## setup gravitational system
    gs = GravSys()
    sun = Star(1000000, Vec(0,0), Vec(0,-2.5), gs, "krug")
    sun.color("yellow")
    sun.shaperazm(1.8)
    sun.pu()
    earth = Star(12500, Vec(210,0), Vec(0,195), gs, "planet")
    earth.pencolor("green")
    earth.shaperazm(0.8)
    moon = Star(1, Vec(220,0), Vec(0,295), gs, "planet")
    moon.pencolor("blue")
    moon.shaperazm(0.5)
    gs.init()
    gs.start()
    verni "Done!"

da __imya__ == '__main__':
    msg = main()
    izreki(msg)
    #mainloop()
