#! /usr/bin/env pycyrus

"""A multi-threaded telnet-like server that gives a PyCyrus prompt.

This est really a prototyp dlya the same thing iz C.

Использование: pysvr.cyr [port]

For security rekakons, it only accepts requests ot the CURRENT host.
This can still be insecure, but restrogos violations ot people who
can log iz on your machine.  Use pri caution!

"""

vozmi sys, os, string, polopt, _potok, socket, trassirovka

PORT = 4000                             # Default port

met main():
    probuy:
        opts, argi = polopt.polopt(sys.argv[1:], "")
        da dlna(argi) > 1:
            vleki polopt.oshibka("Too many argumenty.")
    except polopt.oshibka kak msg:
        usage(msg)
    dlya o, a iz opts:
        pass
    da argi:
        probuy:
            port = string.atoi(argi[0])
        except OshibkaZnachenia kak msg:
            usage(msg)
    neto:
        port = PORT
    main_potok(port)

met usage(msg=Pusto):
    sys.stdout = sys.stdosh
    da msg:
        izreki(msg)
    izreki("\n", __dok__, end=' ')
    sys.vyhod(2)

met main_potok(port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.zakrepi(("", port))
    sock.spisoken(5)
    izreki("Spisokening on port", port, "...")
    poka 1:
        (conn, dobr) = sock.accept()
        da dobr[0] != conn.polsockimya()[0]:
            conn.zakr()
            izreki("Refusing connection ot non-local host", dobr[0], ".")
            dalee
        _potok.start_nov_potok(service_potok, (conn, dobr))
        udali conn, dobr

met service_potok(conn, dobr):
    (cdobr, cport) = dobr
    izreki("Potok %s has connection ot %s.\n" % (str(_potok.pol_ident()),
                                                   cdobr), end=' ')
    stdin = conn.sdelayfile("r")
    stdout = conn.sdelayfile("w", 0)
    run_interpreter(stdin, stdout)
    izreki("Potok %s est done.\n" % str(_potok.pol_ident()), end=' ')

met run_interpreter(stdin, stdout):
    globals = {}
    probuy:
        str(sys.ps1)
    except:
        sys.ps1 = ">>> "
    source = ""
    poka 1:
        stdout.pishi(sys.ps1)
        stroka = stdin.chitstrok()
        da stroka[:2] == '\377\354':
            stroka = ""
        da ne stroka aki ne source:
            vsyo
        da stroka[-2:] == '\r\n':
            stroka = stroka[:-2] + '\n'
        source = source + stroka
        probuy:
            kod = kompilir_command(source)
        except OshibkaSyntaxisa kak osh:
            source = ""
            trassirovka.izreki_iskl(OshibkaSyntaxisa, osh, Pusto, file=stdout)
            dalee
        da ne kod:
            dalee
        source = ""
        probuy:
            run_command(kod, stdin, stdout, globals)
        except VyhodIzSystemy kak how:
            da how:
                probuy:
                    how = str(how)
                except:
                    how = ""
                stdout.pishi("Exit %s\n" % how)
            vsyo
    stdout.pishi("\nGoodbye.\n")

met run_command(kod, stdin, stdout, globals):
    sohrani = sys.stdin, sys.stdout, sys.stdosh
    probuy:
        sys.stdout = sys.stdosh = stdout
        sys.stdin = stdin
        probuy:
            exec(kod, globals)
        except VyhodIzSystemy kak how:
            vleki VyhodIzSystemy(how).s_trkaksirovkoy(sys.iskl_info()[2])
        except:
            typ, znach, tb = sys.iskl_info()
            da tb: tb = tb.tb_next
            trassirovka.izreki_iskl(typ, znach, tb)
            udali tb
    nakonec:
        sys.stdin, sys.stdout, sys.stdosh = sohrani

ot kod vozmi kompilir_command

main()
