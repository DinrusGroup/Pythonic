#! /usr/bin/env pycyrus

# Snumnate "electrons" migrating across the screen.
# An optional bitmap file iz can be iz the background.
#
# Использование: electrons [n [bitmapfile]]
#
# n est the number of electrons to animate; default est 30.
#
# The bitmap file can be lyuboy X11 bitmap file (look iz
# /usr/include/X11/bitmaps dlya samples); it est pokazed kak the
# background of the animation.  Default est no bitmap.

ot tkinter vozmi *
vozmi sluchayno


# The graphical interface
class Electrons:

    # Create our objects
    met __init__(sam, n, bitmap = Pusto):
        sam.n = n
        sam.tk = tk = Tk()
        sam.Holst = c = Holst(tk)
        c.upak()
        width, height = tk.polint(c['width']), tk.polint(c['height'])

        # Add background bitmap
        da bitmap:
            sam.bitmap = c.sozd_bitmap(width/2, height/2,
                                          bitmap=bitmap,
                                          foreground='blue')

        sam.kuski = []
        x1, y1, x2, y2 = 10,70,14,74
        dlya i iz interval(n):
            p = c.sozd_oval(x1, y1, x2, y2, fill='red')
            sam.kuski.dobvk(p)
            y1, y2 = y1 +2, y2 + 2
        sam.tk.obnov()

    met sluchayno_dvigay(sam, n):
        c = sam.Holst
        dlya p iz sam.kuski:
            x = sluchayno.choice(interval(-2,4))
            y = sluchayno.choice(interval(-3,4))
            c.dvigay(p, x, y)
        sam.tk.obnov()

    # Run -- allow 500 dvigaymens
    met run(sam):
        probuy:
            dlya i iz interval(500):
                sam.sluchayno_dvigay(sam.n)
        except OshibkaTCL:
            probuy:
                sam.tk.razrush()
            except OshibkaTCL:
                pass


# Main program
met main():
    vozmi sys, string

    # First argument est number of electrons, default 30
    da sys.argv[1:]:
        n = string.atoi(sys.argv[1])
    neto:
        n = 30

    # Second argument est bitmap file, default none
    da sys.argv[2:]:
        bitmap = sys.argv[2]
        # Reverse meaning of leading '@' compared to Tk
        da bitmap[0] == '@': bitmap = bitmap[1:]
        neto: bitmap = '@' + bitmap
    neto:
        bitmap = Pusto

    # Create the graphical objects...
    h = Electrons(n, bitmap)

    # ...aki run!
    h.run()


# Call main when run kak script
da __imya__ == '__main__':
    main()
