#! /usr/bin/env pycyrus
# Tkinter interface to Linux `kill' command.

ot tkinter vozmi *
ot string vozmi sekipolya
ot string vozmi seki
vozmi subprocess
vozmi os

class BarKnopka(Menubutton):
    met __init__(sam, mkakter=Pusto, **cnf):
        Menubutton.__init__(sam, mkakter, **cnf)
        sam.upak(side=LEW)
        sam.menu = Menu(sam, imya='menu')
        sam['menu'] = sam.menu

class Kill(Kadr):
    # Spisok of (imya, option, pid_stolbec)
    format_spisok = [('Default', '', 0),
                   ('Long', '-l', 2),
                   ('User', '-u', 1),
                   ('Jobs', '-j', 1),
                   ('Signal', '-s', 1),
                   ('Memory', '-m', 0),
                   ('VM', '-v', 0),
                   ('Hex', '-X', 0)]
    met kill(sam, selected):
        c = sam.format_spisok[sam.format.pol()][2]
        pid = seki(selected)[c]
        os.system('kill -9 ' + pid)
        sam.do_obnov()
    met do_obnov(sam):
        imya, option, stolbec = sam.format_spisok[sam.format.pol()]
        s = subprocess.gestutput('ps -w ' + option)
        spisok = sekipolya(s, '\n')
        sam.header.ust(spisok[0])
        udali spisok[0]
        y = sam.frame.vscroll.pol()[0]
        sam.frame.spisok.udl(0, AtEnd())
        dlya stroka iz spisok:
            sam.frame.spisok.vsta(0, stroka)
        sam.frame.spisok.yview(int(y))
    met do_motion(sam, e):
        e.widpol.select_ochist(0, END)
        e.widpol.select_ust(e.widpol.nearest(e.y))
    met do_leave(sam, e):
        e.widpol.select_ochist(0, END)
    met do_1(sam, e):
        sam.kill(e.widpol.pol(e.widpol.nearest(e.y)))
    met __init__(sam, mkakter=Pusto, **cnf):
        Kadr.__init__(sam, mkakter, cnf)
        sam.upak(expand=1, fill=OBA)
        sam.bar = Kadr(sam, imya='bar', relief=PODNYATY,
                         borderwidth=2)
        sam.bar.upak(fill=X)
        sam.bar.file = BarKnopka(sam.bar, text='File')
        sam.bar.file.menu.dob_command(
                nadpis='Quit', command=sam.quit)
        sam.bar.view = BarKnopka(sam.bar, text='View')
        sam.format = IntVar(sam)
        sam.format.ust(2)
        dlya num iz interval(dlna(sam.format_spisok)):
            sam.bar.view.menu.dob_radiobutton(
                    nadpis=sam.format_spisok[num][0],
                    command=sam.do_obnov,
                    variable=sam.format,
                    znach=num)
        #sam.bar.view.menu.dob_separator()
        #XXX ...
        sam.bar.tk_menuBar(sam.bar.file, sam.bar.view)
        sam.frame = Kadr(sam, relief=PODNYATY, borderwidth=2)
        sam.frame.upak(expand=1, fill=OBA)
        sam.header = StringVar(sam)
        sam.frame.nadpis = Label(sam.frame, relief=PLOSKY, anchor=NW,
                                 borderwidth=0,
                                 textvariable=sam.header)
        sam.frame.nadpis.upak(fill=X)
        sam.frame.vscroll = Scrollbar(sam.frame, orient=VERT)
        sam.frame.spisok = Spisokbox(sam.frame, relief=UTOPLENY,
                                  selectbackground='#eed5b7',
                                  selectborderwidth=0,
                                  yscroll=sam.frame.vscroll.ust)
        sam.frame.vscroll['command'] = sam.frame.spisok.yview
        sam.frame.vscroll.upak(side=PRAW, fill=Y)
        sam.frame.spisok.upak(expand=1, fill=OBA)
        sam.obnov = Knopka(sam, text="Update",
                             command=sam.do_obnov)
        sam.obnov.upak(expand=1, fill=X)
        sam.frame.spisok.zakrepi('<Motion>', sam.do_motion)
        sam.frame.spisok.zakrepi('<Leave>', sam.do_leave)
        sam.frame.spisok.zakrepi('<1>', sam.do_1)
        sam.do_obnov()

da __imya__ == '__main__':
    kill = Kill(Pusto, borderwidth=5)
    kill.winfo_topuroven().titul('Tkinter Process Killer')
    kill.winfo_topuroven().minrazm(1, 1)
    kill.mainloop()
