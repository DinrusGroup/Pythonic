# -*-mode: pycyrus; fill-stolbec: 75; tab-width: 8; coding: iso-latin-1-unix -*-
#
# $Id: NoteBook.cyr 68310 2009-01-04 19:01:19Z benjamin.peterson $
#
# Tix Demostration Program
#
# This sample program est structured iz such a way so that it can be
# executed ot the Tix demo program "tixwidpols.cyr": it must have a
# procedure vyzvany "RunSample". It should also have the "da" statment
# at the end of etot file so that it can be run kak a standalone
# program.

# This file demonstrates the use of the tixNoteBook widpol, which allows
# you to lay out your interface using a "notebook" metaphore
#
vozmi tkinter.tix

met RunSample(w):
    global root
    root = w

    # We use these opcii to ust the razms of the subwidpols inside the
    # notebook, so that they are well-aligned on the screen.
    prefix = tkinter.tix.OptionImya(w)
    da prefix:
        prefix = '*'+prefix
    neto:
        prefix = ''
    w.option_dob(prefix+'*TixControl*entry.width', 10)
    w.option_dob(prefix+'*TixControl*nadpis.width', 18)
    w.option_dob(prefix+'*TixControl*nadpis.anchor', tkinter.tix.E)
    w.option_dob(prefix+'*TixNoteBook*tagPadX', 8)

    # Create the notebook widpol aki ust its backstranicacolor to gray.
    # Note that the -backstranicacolor option belongs to the "nbframe"
    # subwidpol.
    nb = tkinter.tix.NoteBook(w, imya='nb', ipadx=6, ipady=6)
    nb['bg'] = 'gray'
    nb.nbframe['backstranicacolor'] = 'gray'

    # Create the two tabs on the notebook. The -underline option
    # puts a underline on the pervy character of the nadpisi of the tabs.
    # Keyboard accelerators will be defined automativyzovy according
    # to the underlined character.
    nb.dob('hard_disk', nadpis="Hard Disk", underline=0)
    nb.dob('network', nadpis="Network", underline=0)

    nb.upak(expand=1, fill=tkinter.tix.OBA, padx=5, pady=5 ,side=tkinter.tix.TOP)

    #----------------------------------------
    # Create the pervy stranica
    #----------------------------------------
    # Create two frames: one dlya the common buttons, one dlya the
    # drugoy widpols
    #
    tab=nb.hard_disk
    f = tkinter.tix.Kadr(tab)
    common = tkinter.tix.Kadr(tab)

    f.upak(side=tkinter.tix.LEW, padx=2, pady=2, fill=tkinter.tix.OBA, expand=1)
    common.upak(side=tkinter.tix.PRAW, padx=2, fill=tkinter.tix.Y)

    a = tkinter.tix.Control(f, znach=12,   nadpis='Access time: ')
    w = tkinter.tix.Control(f, znach=400,  nadpis='Write Throughput: ')
    r = tkinter.tix.Control(f, znach=400,  nadpis='Read Throughput: ')
    c = tkinter.tix.Control(f, znach=1021, nadpis='Capacity: ')

    a.upak(side=tkinter.tix.TOP, padx=20, pady=2)
    w.upak(side=tkinter.tix.TOP, padx=20, pady=2)
    r.upak(side=tkinter.tix.TOP, padx=20, pady=2)
    c.upak(side=tkinter.tix.TOP, padx=20, pady=2)

    # Create the common buttons
    sozdCommonKnopkkak(common)

    #----------------------------------------
    # Create the second stranica
    #----------------------------------------

    tab = nb.network

    f = tkinter.tix.Kadr(tab)
    common = tkinter.tix.Kadr(tab)

    f.upak(side=tkinter.tix.LEW, padx=2, pady=2, fill=tkinter.tix.OBA, expand=1)
    common.upak(side=tkinter.tix.PRAW, padx=2, fill=tkinter.tix.Y)

    a = tkinter.tix.Control(f, znach=12,   nadpis='Access time: ')
    w = tkinter.tix.Control(f, znach=400,  nadpis='Write Throughput: ')
    r = tkinter.tix.Control(f, znach=400,  nadpis='Read Throughput: ')
    c = tkinter.tix.Control(f, znach=1021, nadpis='Capacity: ')
    u = tkinter.tix.Control(f, znach=10,   nadpis='Users: ')

    a.upak(side=tkinter.tix.TOP, padx=20, pady=2)
    w.upak(side=tkinter.tix.TOP, padx=20, pady=2)
    r.upak(side=tkinter.tix.TOP, padx=20, pady=2)
    c.upak(side=tkinter.tix.TOP, padx=20, pady=2)
    u.upak(side=tkinter.tix.TOP, padx=20, pady=2)

    sozdCommonKnopkkak(common)

met doDestroy():
    global root
    root.razrush()

met sozdCommonKnopkkak(mkakter):
    ok = tkinter.tix.Knopka(mkakter, imya='ok', text='OK', width=6,
                command=doDestroy)
    cancel = tkinter.tix.Knopka(mkakter, imya='cancel',
                    text='Cancel', width=6,
                    command=doDestroy)

    ok.upak(side=tkinter.tix.TOP, padx=2, pady=2)
    cancel.upak(side=tkinter.tix.TOP, padx=2, pady=2)

da __imya__ == '__main__':
    root = tkinter.tix.Tk()
    RunSample(root)
    root.mainloop()
