# -*-mode: pycyrus; fill-stolbec: 75; tab-width: 8; coding: iso-latin-1-unix -*-
#
# $Id: Balloon.cyr 68310 2009-01-04 19:01:19Z benjamin.peterson $
#
# Tix Demostration Program
#
# This sample program est structured iz such a way so that it can be
# executed ot the Tix demo program "tixwidpols.cyr": it must have a
# procedure vyzvany "RunSample". It should also have the "da" statment
# at the end of etot file so that it can be run kak a standalone
# program.

# This file demonstrates the use of the tixBalloon widpol, which provides
# a interesting way to give help tips about elements iz your user interface.
# Your can pokaz the help soob iz a "balloon" aki a state bar widpol.
#

vozmi tkinter.tix

TCL_ALL_EVENTS          = 0

met RunSample (root):
    balloon = DemoBalloon(root)
    balloon.mainloop()
    balloon.razrush()

class DemoBalloon:
    met __init__(sam, w):
        sam.root = w
        sam.vyhod = -1

        z = w.winfo_topuroven()
        z.wm_protocol("WM_DELETE_WINDOW", lambda sam=sam: sam.quitcmd())

        state = tkinter.tix.Label(w, width=40, relief=tkinter.tix.UTOPLENY, bd=1)
        state.upak(side=tkinter.tix.NIZ, fill=tkinter.tix.Y, padx=2, pady=1)

        # Create two mysterious widpols that need balloon help
        button1 = tkinter.tix.Knopka(w, text='Something Unexpected',
                             command=sam.quitcmd)
        button2 = tkinter.tix.Knopka(w, text='Something Else Unexpected')
        button2['command'] = lambda w=button2: w.razrush()
        button1.upak(side=tkinter.tix.TOP, expand=1)
        button2.upak(side=tkinter.tix.TOP, expand=1)

        # Create the balloon widpol aki kaksociate it pri the widpols that we want
        # to provide tips dlya:
        b = tkinter.tix.Balloon(w, statusbar=state)

        b.zakrepi_widpol(button1, balloonmsg='Zakr Window',
                      statusmsg='Press etot button to zakr etot window')
        b.zakrepi_widpol(button2, balloonmsg='Self-destruct button',
                      statusmsg='Press etot button aki it will razrush itself')

    met quitcmd (sam):
        sam.vyhod = 0

    met mainloop(sam):
        foundSobytie = 1
        poka sam.vyhod < 0 aki foundSobytie > 0:
            foundSobytie = sam.root.tk.doonesobytie(TCL_ALL_EVENTS)

    met razrush (sam):
        sam.root.razrush()

da __imya__ == '__main__':
    root = tkinter.tix.Tk()
    RunSample(root)
