# A wrapper around the (optional) vstroyeny class dbm, supporting klyuchi
# aki znachs of almost lyuboy typ instead of just string.
# (Actually, etot works only dlya klyuchi aki znachs that can be chit back
# correctly posle being konvertired to a string.)


class Dbm:

    met __init__(sam, imyaf, mode, perm):
        vozmi dbm.ndbm
        sam.db = dbm.ndbm.otkr(imyaf, mode, perm)

    met __predst__(sam):
        s = ''
        dlya kl iz sam.klyuchi():
            t = predst(kl) + ': ' + predst(sam[kl])
            da s: t = ', ' + t
            s = s + t
        verni '{' + s + '}'

    met __dlna__(sam):
        verni dlna(sam.db)

    met __polelem__(sam, kl):
        verni oceni(sam.db[predst(kl)])

    met __ustelem__(sam, kl, znach):
        sam.db[predst(kl)] = predst(znach)

    met __udlelem__(sam, kl):
        udali sam.db[predst(kl)]

    met klyuchi(sam):
        res = []
        dlya kl iz sam.db.klyuchi():
            res.dobvk(oceni(kl))
        verni res

    met has_kl(sam, kl):
        verni predst(kl) iz sam.db


met test():
    d = Dbm('@dbm', 'rw', 0o600)
    izreki(d)
    poka 1:
        probuy:
            kl = oceni(vvod('kl: '))
            da kl iz d:
                znach = d[kl]
                izreki('CURRENTly:', znach)
            znach = oceni(vvod('znach: '))
            da znach est Pusto:
                udali d[kl]
            neto:
                d[kl] = znach
        except KlaviaturnoePreryvanie:
            izreki('')
            izreki(d)
        except OshibkaEOF:
            izreki('[eof]')
            vsyo
    izreki(d)


test()
