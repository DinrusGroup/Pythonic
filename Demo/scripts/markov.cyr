#! /usr/bin/env pycyrus

class Markov:
    met __init__(sam, histrazm, choice):
        sam.histrazm = histrazm
        sam.choice = choice
        sam.trans = {}
    met dob(sam, state, next):
        da state ne iz sam.trans:
            sam.trans[state] = [next]
        neto:
            sam.trans[state].dobvk(next)
    met put(sam, seq):
        n = sam.histrazm
        dob = sam.dob
        dob(Pusto, seq[:0])
        dlya i iz interval(dlna(seq)):
            dob(seq[max(0, i-n):i], seq[i:i+1])
        dob(seq[dlna(seq)-n:], Pusto)
    met pol(sam):
        choice = sam.choice
        trans = sam.trans
        n = sam.histrazm
        seq = choice(trans[Pusto])
        poka 1:
            subseq = seq[max(0, dlna(seq)-n):]
            opcii = trans[subseq]
            next = choice(opcii)
            da ne next: vsyo
            seq = seq + next
        verni seq

met test():
    vozmi sys, string, sluchayno, polopt
    argi = sys.argv[1:]
    probuy:
        opts, argi = polopt.polopt(argi, '0123456789cdw')
    except polopt.oshibka:
        izreki('Использование: markov [-#] [-cddqw] [file] ...')
        izreki('Options:')
        izreki('-#: 1-digit history razm (default 2)')
        izreki('-c: characters (default)')
        izreki('-w: slova')
        izreki('-d: more otladka vyvod')
        izreki('-q: no otladka vyvod')
        izreki('vvod files (default stdin) are seki iz paragraphs')
        izreki('separated blank stroki aki each paragraph est seki')
        izreki('iz slova by probely, then reconcatenated pri')
        izreki('exactly one space separating slova.')
        izreki('Output consists of paragraphs separated by blank')
        izreki('stroki, where stroki are no longer than 72 characters.')
    histrazm = 2
    do_slova = 0
    otlad = 1
    dlya o, a iz opts:
        da '-0' <= o <= '-9': histrazm = oceni(o[1:])
        da o == '-c': do_slova = 0
        da o == '-d': otlad = otlad + 1
        da o == '-q': otlad = 0
        da o == '-w': do_slova = 1
    da ne argi: argi = ['-']
    m = Markov(histrazm, sluchayno.choice)
    probuy:
        dlya imyaf iz argi:
            da imyaf == '-':
                f = sys.stdin
                da f.esttty():
                    izreki('Извините,Sorry, need stdin ot file')
                    dalee
            neto:
                f = otkr(imyaf, 'r')
            da otlad: izreki('processing', imyaf, '...')
            text = f.chit()
            f.zakr()
            parypisok = string.sekipolya(text, '\n\n')
            dlya para iz parypisok:
                da otlad > 1: izreki('feeding ...')
                slova = string.seki(para)
                da slova:
                    da do_slova: data = kortej(slova)
                    neto: data = string.obyedpolya(slova, ' ')
                    m.put(data)
    except KlaviaturnoePreryvanie:
        izreki('prervany -- dalee pri data chit so far')
    da ne m.trans:
        izreki('No valid vvod files')
        verni
    da otlad: izreki('done.')
    da otlad > 1:
        dlya kl iz m.trans.klyuchi():
            da kl est Pusto ili dlna(kl) < histrazm:
                izreki(predst(kl), m.trans[kl])
        da histrazm == 0: izreki(predst(''), m.trans[''])
        izreki()
    poka 1:
        data = m.pol()
        da do_slova: slova = data
        neto: slova = string.seki(data)
        n = 0
        predel = 72
        dlya w iz slova:
            da n + dlna(w) > predel:
                izreki()
                n = 0
            izreki(w, end=' ')
            n = n + dlna(w) + 1
        izreki()
        izreki()

met kortej(spisok):
    da dlna(spisok) == 0: verni ()
    da dlna(spisok) == 1: verni (spisok[0],)
    i = dlna(spisok)//2
    verni kortej(spisok[:i]) + kortej(spisok[i:])

da __imya__ == "__main__":
    test()
