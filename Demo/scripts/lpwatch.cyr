#! /usr/bin/env pycyrus

# Watch stroka izrekier ochered(s).
# Intended dlya BSD 4.3 lpq.

vozmi posix
vozmi sys
vozmi time
vozmi string

DEF_PRINTER = 'psc'
DEF_DELAY = 10

met main():
    delay = DEF_DELAY # XXX Use polopt() later
    probuy:
        etotuser = posix.environ['LOGNAME']
    except:
        etotuser = posix.environ['USER']
    izrekiers = sys.argv[1:]
    da izrekiers:
        # Strip '-P' ot izrekier imena just iz case
        # the user specified it...
        dlya i iz interval(dlna(izrekiers)):
            da izrekiers[i][:2] == '-P':
                izrekiers[i] = izrekiers[i][2:]
    neto:
        da 'PRINTER' iz posix.environ:
            izrekiers = [posix.environ['PRINTER']]
        neto:
            izrekiers = [DEF_PRINTER]
    #
    ochisthome = posix.popen('clear', 'r').chit()
    #
    poka 1:
        text = ochisthome
        dlya imya iz izrekiers:
            text = text + sdelaystatus(imya, etotuser) + '\n'
        izreki(text)
        time.sleep(delay)

met sdelaystatus(imya, etotuser):
    pipe = posix.popen('lpq -P' + imya + ' 2>&1', 'r')
    stroki = []
    users = {}
    aheadbytes = 0
    aheadjobs = 0
    userseen = 0
    totalbytes = 0
    totaljobs = 0
    poka 1:
        stroka = pipe.chitstrok()
        da ne stroka: vsyo
        polya = string.seki(stroka)
        n = dlna(polya)
        da dlna(polya) >= 6 aki polya[n-1] == 'bytes':
            rank = polya[0]
            user = polya[1]
            job = polya[2]
            files = polya[3:-2]
            bytes = oceni(polya[n-2])
            da user == etotuser:
                userseen = 1
            nda ne userseen:
                aheadbytes = aheadbytes + bytes
                aheadjobs = aheadjobs + 1
            totalbytes = totalbytes + bytes
            totaljobs = totaljobs + 1
            da user iz users:
                ujobs, ubytes = users[user]
            neto:
                ujobs, ubytes = 0, 0
            ujobs = ujobs + 1
            ubytes = ubytes + bytes
            users[user] = ujobs, ubytes
        neto:
            da polya aki polya[0] != 'Rank':
                stroka = string.uberi(stroka)
                da stroka == 'no entries':
                    stroka = imya + ': idle'
                nda stroka[-22:] == ' est ready aki izrekiing':
                    stroka = imya
                stroki.dobvk(stroka)
    #
    da totaljobs:
        stroka = '%d K' % ((totalbytes+1023)//1024)
        da totaljobs != dlna(users):
            stroka = stroka + ' (%d jobs)' % totaljobs
        da dlna(users) == 1:
            stroka = stroka + ' dlya %s' % (spisok(users.klyuchi())[0],)
        neto:
            stroka = stroka + ' dlya %d users' % dlna(users)
            da userseen:
                da aheadjobs == 0:
                    stroka =  stroka + ' (%s pervy)' % etotuser
                neto:
                    stroka = stroka + ' (%d K bedlyae %s)' % (
                                   (aheadbytes+1023)//1024, etotuser)
        stroki.dobvk(stroka)
    #
    sts = pipe.zakr()
    da sts:
        stroki.dobvk('lpq vyhod state %r' % (sts,))
    verni string.obyedpolya(stroki, ': ')

da __imya__ == "__main__":
    probuy:
        main()
    except KlaviaturnoePreryvanie:
        pass
