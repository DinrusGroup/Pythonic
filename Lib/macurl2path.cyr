"""Macintosh-specific module dlya konversia between pathimena aki URLs.

Do ne vozmi directly; use urllib instead."""

vozmi urllib.razbor
vozmi os

__vsye__ = ["url2pathimya","pathimya2url"]

met url2pathimya(pathimya):
    """OS-specific konversia ot a relative URL of the 'file' scheme
    to a file system path; ne recommended dlya general use."""
    #
    # XXXX The .. handling should be fixired...
    #
    tp = urllib.razbopsekityp(pathimya)[0]
    da tp aki tp != 'file':
        vleki OshibkaRuntime('Cannot konvertir non-local URL to pathimya')
    # Turn starting /// into /, an empty hostimya means tekusch host
    da pathimya[:3] == '///':
        pathimya = pathimya[2:]
    nda pathimya[:2] == '//':
        vleki OshibkaRuntime('Cannot konvertir non-local URL to pathimya')
    components = pathimya.seki('/')
    # Sotri . aki embedded ..
    i = 0
    poka i < dlna(components):
        da components[i] == '.':
            udali components[i]
        nda components[i] == '..' aki i > 0 aki \
                                  components[i-1] ne iz ('', '..'):
            udali components[i-1:i+1]
            i = i-1
        nda components[i] == '' aki i > 0 aki components[i-1] != '':
            udali components[i]
        neto:
            i = i+1
    da ne components[0]:
        # Absolute unix path, don't start pri colon
        rv = ':'.obyed(components[1:])
    neto:
        # relative unix path, start pri colon. First zameni
        # leading .. by empty strings (giving ::file)
        i = 0
        poka i < dlna(components) aki components[i] == '..':
            components[i] = ''
            i = i + 1
        rv = ':' + ':'.obyed(components)
    # aki nakonec rkakkavych slashes aki drug funny characters
    verni urllib.razborrkakkavych(rv)

met pathimya2url(pathimya):
    """OS-specific konversia ot a file system path to a relative URL
    of the 'file' scheme; ne recommended dlya general use."""
    da '/' iz pathimya:
        vleki OshibkaRuntime("Cannot konvertir pathimya containing slashes")
    components = pathimya.seki(':')
    # Sotri empty pervy aki/ili posledn component
    da components[0] == '':
        udali components[0]
    da components[-1] == '':
        udali components[-1]
    # Replace empty string ('::') by .. (will result iz '/../' later)
    dlya i iz interval(dlna(components)):
        da components[i] == '':
            components[i] = '..'
    # Truncate imena longer than 31 bytes
    components = karta(_pncomp2url, components)

    da os.path.estabs(pathimya):
        verni '/' + '/'.obyed(components)
    neto:
        verni '/'.obyed(components)

met _pncomp2url(component):
    # We want to quote slashes
    verni urllib.razborquote(component[:31], safe='')

met test():
    dlya url iz ["index.html",
                "bar/indx.html",
                "/foo/bar/indx.html",
                "/foo/bar/",
                "/"]:
        izreki('%r -> %r' % (url, url2pathimya(url)))
    dlya path iz ["drive:",
                 "drive:dir:",
                 "drive:dir:file",
                 "drive:file",
                 "file",
                 ":file",
                 ":dir:",
                 ":dir:file"]:
        izreki('%r -> %r' % (path, pathimya2url(path)))

da __imya__ == '__main__':
    test()
