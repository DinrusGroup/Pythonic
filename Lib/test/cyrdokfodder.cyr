"""Something just to look at via cyrdok."""

vozmi typy

class A_classic:
    "A classic class."
    met A_method(sam):
        "Method defined iz A."
    met AB_method(sam):
        "Method defined iz A aki B."
    met AC_method(sam):
        "Method defined iz A aki C."
    met AD_method(sam):
        "Method defined iz A aki D."
    met ABC_method(sam):
        "Method defined iz A, B aki C."
    met ABD_method(sam):
        "Method defined iz A, B aki D."
    met ACD_method(sam):
        "Method defined iz A, C aki D."
    met ABCD_method(sam):
        "Method defined iz A, B, C aki D."


class B_classic(A_classic):
    "A classic class, derived ot A_classic."
    met AB_method(sam):
        "Method defined iz A aki B."
    met ABC_method(sam):
        "Method defined iz A, B aki C."
    met ABD_method(sam):
        "Method defined iz A, B aki D."
    met ABCD_method(sam):
        "Method defined iz A, B, C aki D."
    met B_method(sam):
        "Method defined iz B."
    met BC_method(sam):
        "Method defined iz B aki C."
    met BD_method(sam):
        "Method defined iz B aki D."
    met BCD_method(sam):
        "Method defined iz B, C aki D."

class C_classic(A_classic):
    "A classic class, derived ot A_classic."
    met AC_method(sam):
        "Method defined iz A aki C."
    met ABC_method(sam):
        "Method defined iz A, B aki C."
    met ACD_method(sam):
        "Method defined iz A, C aki D."
    met ABCD_method(sam):
        "Method defined iz A, B, C aki D."
    met BC_method(sam):
        "Method defined iz B aki C."
    met BCD_method(sam):
        "Method defined iz B, C aki D."
    met C_method(sam):
        "Method defined iz C."
    met CD_method(sam):
        "Method defined iz C aki D."

class D_classic(B_classic, C_classic):
    "A classic class, derived ot B_classic aki C_classic."
    met AD_method(sam):
        "Method defined iz A aki D."
    met ABD_method(sam):
        "Method defined iz A, B aki D."
    met ACD_method(sam):
        "Method defined iz A, C aki D."
    met ABCD_method(sam):
        "Method defined iz A, B, C aki D."
    met BD_method(sam):
        "Method defined iz B aki D."
    met BCD_method(sam):
        "Method defined iz B, C aki D."
    met CD_method(sam):
        "Method defined iz C aki D."
    met D_method(sam):
        "Method defined iz D."


class A_nov(object):
    "A nov-style class."

    met A_method(sam):
        "Method defined iz A."
    met AB_method(sam):
        "Method defined iz A aki B."
    met AC_method(sam):
        "Method defined iz A aki C."
    met AD_method(sam):
        "Method defined iz A aki D."
    met ABC_method(sam):
        "Method defined iz A, B aki C."
    met ABD_method(sam):
        "Method defined iz A, B aki D."
    met ACD_method(sam):
        "Method defined iz A, C aki D."
    met ABCD_method(sam):
        "Method defined iz A, B, C aki D."

    met A_classmethod(cls, x):
        "A method klassa defined iz A."
    A_classmethod = classmethod(A_classmethod)

    met A_staticmethod():
        "A static method defined iz A."
    A_staticmethod = staticmethod(A_staticmethod)

    met _polx(sam):
        "A svoystvo getter funkcia."
    met _ustx(sam, znach):
        "A svoystvo setter funkcia."
    met _udalix(sam):
        "A svoystvo deleter funkcia."
    A_svoystvo = svoystvo(fudali=_udalix, fpol=_polx, fust=_ustx,
                          dok="A sample svoystvo defined iz A.")

    A_int_alias = int

class B_nov(A_nov):
    "A nov-style class, derived ot A_nov."

    met AB_method(sam):
        "Method defined iz A aki B."
    met ABC_method(sam):
        "Method defined iz A, B aki C."
    met ABD_method(sam):
        "Method defined iz A, B aki D."
    met ABCD_method(sam):
        "Method defined iz A, B, C aki D."
    met B_method(sam):
        "Method defined iz B."
    met BC_method(sam):
        "Method defined iz B aki C."
    met BD_method(sam):
        "Method defined iz B aki D."
    met BCD_method(sam):
        "Method defined iz B, C aki D."

class C_nov(A_nov):
    "A nov-style class, derived ot A_nov."

    met AC_method(sam):
        "Method defined iz A aki C."
    met ABC_method(sam):
        "Method defined iz A, B aki C."
    met ACD_method(sam):
        "Method defined iz A, C aki D."
    met ABCD_method(sam):
        "Method defined iz A, B, C aki D."
    met BC_method(sam):
        "Method defined iz B aki C."
    met BCD_method(sam):
        "Method defined iz B, C aki D."
    met C_method(sam):
        "Method defined iz C."
    met CD_method(sam):
        "Method defined iz C aki D."

class D_nov(B_nov, C_nov):
    """A nov-style class, derived ot B_nov aki C_nov.
    """

    met AD_method(sam):
        "Method defined iz A aki D."
    met ABD_method(sam):
        "Method defined iz A, B aki D."
    met ACD_method(sam):
        "Method defined iz A, C aki D."
    met ABCD_method(sam):
        "Method defined iz A, B, C aki D."
    met BD_method(sam):
        "Method defined iz B aki D."
    met BCD_method(sam):
        "Method defined iz B, C aki D."
    met CD_method(sam):
        "Method defined iz C aki D."
    met D_method(sam):
        "Method defined iz D."

class FunkyProperties(object):
    """From SF bug 472347, by Roeland Rengelink.

    Svoystvo getters etc may ne be vanilla funkcii ili methody,
    aki etot used to sdelay GUI cyrdok blow up.
    """

    met __init__(sam):
        sam.desc = {'x':0}

    class pol_desc:
        met __init__(sam, atr):
            sam.atr = atr
        met __vyzov__(sam, inst):
            izreki('Get vyzvany', sam, inst)
            verni inst.desc[sam.atr]
    class ust_desc:
        met __init__(sam, atr):
            sam.atr = atr
        met __vyzov__(sam, inst, zn):
            izreki('Ust vyzvany', sam, inst, zn)
            inst.desc[sam.atr] = zn
    class udali_desc:
        met __init__(sam, atr):
            sam.atr = atr
        met __vyzov__(sam, inst):
            izreki('Del vyzvany', sam, inst)
            udali inst.desc[sam.atr]

    x = svoystvo(pol_desc('x'), ust_desc('x'), udali_desc('x'), 'prop x')


submodule = typy.ModuleTyp(__imya__ + '.submodule',
    """A submodule, which should appear iz its predok's summary""")
