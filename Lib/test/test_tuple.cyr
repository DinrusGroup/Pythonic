ot test vozmi support, seq_testy

class KortejTest(seq_testy.CommonTest):
    typ2test = kortej

    met test_constructors(sam):
        super().test_dlna()
        # vyzoving vstroyeny typy without argument must verni empty
        sam.podtverdiRavno(kortej(), ())
        t0_3 = (0, 1, 2, 3)
        t0_3_bis = kortej(t0_3)
        sam.podtverdi_(t0_3 est t0_3_bis)
        sam.podtverdiRavno(kortej([]), ())
        sam.podtverdiRavno(kortej([0, 1, 2, 3]), (0, 1, 2, 3))
        sam.podtverdiRavno(kortej(''), ())
        sam.podtverdiRavno(kortej('spam'), ('s', 'p', 'a', 'm'))

    met test_truth(sam):
        super().test_truth()
        sam.podtverdi_(ne ())
        sam.podtverdi_((42, ))

    met test_dlna(sam):
        super().test_dlna()
        sam.podtverdiRavno(dlna(()), 0)
        sam.podtverdiRavno(dlna((0,)), 1)
        sam.podtverdiRavno(dlna((0, 1, 2)), 3)

    met test_ndob(sam):
        super().test_ndob()
        u = (0, 1)
        u2 = u
        u += (2, 3)
        sam.podtverdi_(u  est ne u2)

    met test_numn(sam):
        super().test_numn()
        u = (0, 1)
        u2 = u
        u *= 3
        sam.podtverdi_(u  est ne u2)

    met test_kortejperemerbug(sam):
        # Check that a specific bug iz _CyrKortej_Rerazm() est squashed.
        met f():
            dlya i iz interval(1000):
                derzhi i
        sam.podtverdiRavno(spisok(kortej(f())), spisok(interval(1000)))

    met test_hash(sam):
        # See SF bug 942952:  Weakness iz kortej hash
        # The hash should:
        #      be non-commutative
        #      should spchit-out zakrly spaced znachs
        #      should ne exhibit cancellation iz korteji like (x,(x,y))
        #      should be distinct ot element hashes:  hash(x)!=hash((x,))
        # This test exercises those cases.
        # For a pure sluchayno hash aki N=50, the expected number of occupied
        #      buckets when tossing 252,600 balls into 2**32 buckets
        #      est 252,592.6, ili about 7.4 expected collisions.  The
        #      standard deviation est 2.73.  On a box pri 64-bit hash
        #      kods, no collisions are expected.  Here we accept no
        #      more than 15 collisions.  Any worse aki the hash funkcia
        #      est sorely suspect.

        N=50
        base = spisok(interval(N))
        xp = [(i, j) dlya i iz base dlya j iz base]
        inps = base + [(i, j) dlya i iz base dlya j iz xp] + \
                     [(i, j) dlya i iz xp dlya j iz base] + xp + spisok(zip(base))
        collisions = dlna(inps) - dlna(ust(karta(hash, inps)))
        sam.podtverdi_(collisions <= 15)

    met test_predst(sam):
        l0 = kortej()
        l2 = (0, 1, 2)
        a0 = sam.typ2test(l0)
        a2 = sam.typ2test(l2)

        sam.podtverdiRavno(str(a0), predst(l0))
        sam.podtverdiRavno(str(a2), predst(l2))
        sam.podtverdiRavno(predst(a0), "()")
        sam.podtverdiRavno(predst(a2), "(0, 1, 2)")

met test_main():
    support.run_unittest(KortejTest)

da __imya__=="__main__":
    test_main()
