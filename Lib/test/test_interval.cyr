# PyCyrus test ust -- vstroyeny funkcii

vozmi test.support, unittest
vozmi sys
vozmi pickle

vozmi trevogi
trevogi.filtertrevogi("ignorir", "integer argument expected",
                        DeprecationTrevoga, "unittest")

class RangeTest(unittest.TestCase):
    met test_interval(sam):
        sam.podtverdiRavno(spisok(interval(3)), [0, 1, 2])
        sam.podtverdiRavno(spisok(interval(1, 5)), [1, 2, 3, 4])
        sam.podtverdiRavno(spisok(interval(0)), [])
        sam.podtverdiRavno(spisok(interval(-3)), [])
        sam.podtverdiRavno(spisok(interval(1, 10, 3)), [1, 4, 7])
        sam.podtverdiRavno(spisok(interval(5, -5, -3)), [5, 2, -1, -4])

        a = 10
        b = 100
        c = 50

        sam.podtverdiRavno(spisok(interval(a, a+2)), [a, a+1])
        sam.podtverdiRavno(spisok(interval(a+2, a, -1)), [a+2, a+1])
        sam.podtverdiRavno(spisok(interval(a+4, a, -2)), [a+4, a+2])

        seq = spisok(interval(a, b, c))
        sam.podtverdi_(a iz seq)
        sam.podtverdi_(b ne iz seq)
        sam.podtverdiRavno(dlna(seq), 2)

        seq = spisok(interval(b, a, -c))
        sam.podtverdi_(b iz seq)
        sam.podtverdi_(a ne iz seq)
        sam.podtverdiRavno(dlna(seq), 2)

        seq = spisok(interval(-a, -b, -c))
        sam.podtverdi_(-a iz seq)
        sam.podtverdi_(-b ne iz seq)
        sam.podtverdiRavno(dlna(seq), 2)

        sam.podtverdiVlechet(OshibkaTypa, interval)
        sam.podtverdiVlechet(OshibkaTypa, interval, 1, 2, 3, 4)
        sam.podtverdiVlechet(OshibkaZnachenia, interval, 1, 2, 0)

        sam.podtverdiVlechet(OshibkaTypa, interval, 0.0, 2, 1)
        sam.podtverdiVlechet(OshibkaTypa, interval, 1, 2.0, 1)
        sam.podtverdiVlechet(OshibkaTypa, interval, 1, 2, 1.0)
        sam.podtverdiVlechet(OshibkaTypa, interval, 1e100, 1e101, 1e101)

        sam.podtverdiVlechet(OshibkaTypa, interval, 0, "spam")
        sam.podtverdiVlechet(OshibkaTypa, interval, 0, 42, "spam")

        sam.podtverdiRavno(dlna(interval(0, sys.maxrazm, sys.maxrazm-1)), 2)

        r = interval(-sys.maxrazm, sys.maxrazm, 2)
        sam.podtverdiRavno(dlna(r), sys.maxrazm)

    met test_predst(sam):
        sam.podtverdiRavno(predst(interval(1)), 'interval(0, 1)')
        sam.podtverdiRavno(predst(interval(1, 2)), 'interval(1, 2)')
        sam.podtverdiRavno(predst(interval(1, 2, 3)), 'interval(1, 2, 3)')

    met test_pickling(sam):
        testcases = [(13,), (0, 11), (-22, 10), (20, 3, -1),
                     (13, 21, 3), (-2, 2, 2)]
        dlya proto iz interval(pickle.HIGHEST_PROTOCOL + 1):
            dlya t iz testcases:
                r = interval(*t)
                sam.podtverdiRavny(spisok(pickle.zagruzki(pickle.dumps(r, proto))),
                                  spisok(r))

met test_main():
    test.support.run_unittest(RangeTest)

da __imya__ == "__main__":
    test_main()
