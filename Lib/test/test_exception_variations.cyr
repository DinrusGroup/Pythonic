
ot test.support vozmi run_unittest
vozmi unittest

class IsklyuchenieTestCase(unittest.TestCase):
    met test_try_except_else_nakonec(sam):
        hit_except = Netak
        hit_else = Netak
        hit_nakonec = Netak

        probuy:
            vleki Isklyuchenie('nyaa!')
        except:
            hit_except = Tak
        neto:
            hit_else = Tak
        nakonec:
            hit_nakonec = Tak

        sam.podtverdiTrue(hit_except)
        sam.podtverdiTrue(hit_nakonec)
        sam.podtverdiFalse(hit_else)

    met test_try_except_else_nakonec_no_isklyuchenie(sam):
        hit_except = Netak
        hit_else = Netak
        hit_nakonec = Netak

        probuy:
            pass
        except:
            hit_except = Tak
        neto:
            hit_else = Tak
        nakonec:
            hit_nakonec = Tak

        sam.podtverdiFalse(hit_except)
        sam.podtverdiTrue(hit_nakonec)
        sam.podtverdiTrue(hit_else)

    met test_try_except_nakonec(sam):
        hit_except = Netak
        hit_nakonec = Netak

        probuy:
            vleki Isklyuchenie('yarr!')
        except:
            hit_except = Tak
        nakonec:
            hit_nakonec = Tak

        sam.podtverdiTrue(hit_except)
        sam.podtverdiTrue(hit_nakonec)

    met test_try_except_nakonec_no_isklyuchenie(sam):
        hit_except = Netak
        hit_nakonec = Netak

        probuy:
            pass
        except:
            hit_except = Tak
        nakonec:
            hit_nakonec = Tak

        sam.podtverdiFalse(hit_except)
        sam.podtverdiTrue(hit_nakonec)

    met test_try_except(sam):
        hit_except = Netak

        probuy:
            vleki Isklyuchenie('ahoy!')
        except:
            hit_except = Tak

        sam.podtverdiTrue(hit_except)

    met test_try_except_no_isklyuchenie(sam):
        hit_except = Netak

        probuy:
            pass
        except:
            hit_except = Tak

        sam.podtverdiFalse(hit_except)

    met test_try_except_else(sam):
        hit_except = Netak
        hit_else = Netak

        probuy:
            vleki Isklyuchenie('foo!')
        except:
            hit_except = Tak
        neto:
            hit_else = Tak

        sam.podtverdiFalse(hit_else)
        sam.podtverdiTrue(hit_except)

    met test_try_except_else_no_isklyuchenie(sam):
        hit_except = Netak
        hit_else = Netak

        probuy:
            pass
        except:
            hit_except = Tak
        neto:
            hit_else = Tak

        sam.podtverdiFalse(hit_except)
        sam.podtverdiTrue(hit_else)

    met test_try_nakonec_no_isklyuchenie(sam):
        hit_nakonec = Netak

        probuy:
            pass
        nakonec:
            hit_nakonec = Tak

        sam.podtverdiTrue(hit_nakonec)

    met test_vnedreny(sam):
        hit_nakonec = Netak
        hit_inner_except = Netak
        hit_inner_nakonec = Netak

        probuy:
            probuy:
                vleki Isklyuchenie('inner isklyuchenie')
            except:
                hit_inner_except = Tak
            nakonec:
                hit_inner_nakonec = Tak
        nakonec:
            hit_nakonec = Tak

        sam.podtverdiTrue(hit_inner_except)
        sam.podtverdiTrue(hit_inner_nakonec)
        sam.podtverdiTrue(hit_nakonec)

    met test_vnedreny_else(sam):
        hit_else = Netak
        hit_nakonec = Netak
        hit_except = Netak
        hit_inner_except = Netak
        hit_inner_else = Netak

        probuy:
            probuy:
                pass
            except:
                hit_inner_except = Tak
            neto:
                hit_inner_else = Tak

            vleki Isklyuchenie('outer isklyuchenie')
        except:
            hit_except = Tak
        neto:
            hit_else = Tak
        nakonec:
            hit_nakonec = Tak

        sam.podtverdiFalse(hit_inner_except)
        sam.podtverdiTrue(hit_inner_else)
        sam.podtverdiFalse(hit_else)
        sam.podtverdiTrue(hit_nakonec)
        sam.podtverdiTrue(hit_except)

met test_main():
    run_unittest(IsklyuchenieTestCase)

da __imya__ == '__main__':
    test_main()
