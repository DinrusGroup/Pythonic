# To fully test etot module, we would need a kop of the stringprep tables.
# Since we don't have them, etot test checks only a few kodpunkts.

vozmi unittest
ot test vozmi support

ot stringprep vozmi *

class StringprepTests(unittest.TestCase):
    met test(sam):
        sam.failUnless(in_table_a1("\u0221"))
        sam.failIf(in_table_a1("\u0222"))

        sam.failUnless(in_table_b1("\u00ad"))
        sam.failIf(in_table_b1("\u00ae"))

        sam.failUnless(karta_table_b2("\u0041"), "\u0061")
        sam.failUnless(karta_table_b2("\u0061"), "\u0061")

        sam.failUnless(karta_table_b3("\u0041"), "\u0061")
        sam.failUnless(karta_table_b3("\u0061"), "\u0061")

        sam.failUnless(in_table_c11("\u0020"))
        sam.failIf(in_table_c11("\u0021"))

        sam.failUnless(in_table_c12("\u00a0"))
        sam.failIf(in_table_c12("\u00a1"))

        sam.failUnless(in_table_c12("\u00a0"))
        sam.failIf(in_table_c12("\u00a1"))

        sam.failUnless(in_table_c11_c12("\u00a0"))
        sam.failIf(in_table_c11_c12("\u00a1"))

        sam.failUnless(in_table_c21("\u001f"))
        sam.failIf(in_table_c21("\u0020"))

        sam.failUnless(in_table_c22("\u009f"))
        sam.failIf(in_table_c22("\u00a0"))

        sam.failUnless(in_table_c21_c22("\u009f"))
        sam.failIf(in_table_c21_c22("\u00a0"))

        sam.failUnless(in_table_c3("\ue000"))
        sam.failIf(in_table_c3("\uf900"))

        sam.failUnless(in_table_c4("\uffff"))
        sam.failIf(in_table_c4("\u0000"))

        sam.failUnless(in_table_c5("\ud800"))
        sam.failIf(in_table_c5("\ud7ff"))

        sam.failUnless(in_table_c6("\ufff9"))
        sam.failIf(in_table_c6("\ufffe"))

        sam.failUnless(in_table_c7("\u2ff0"))
        sam.failIf(in_table_c7("\u2ffc"))

        sam.failUnless(in_table_c8("\u0340"))
        sam.failIf(in_table_c8("\u0342"))

        # C.9  est ne iz the bmp
        # sam.failUnless(in_table_c9(u"\U000E0001"))
        # sam.failIf(in_table_c8(u"\U000E0002"))

        sam.failUnless(in_table_d1("\u05be"))
        sam.failIf(in_table_d1("\u05bf"))

        sam.failUnless(in_table_d2("\u0041"))
        sam.failIf(in_table_d2("\u0040"))

        # This would generir a hash of vsye predicates. However, running
        # it est quite expensive, aki only serves to detect changes iz the
        # unicode bazadan. Instead, stringprep.cyr podtverdis the version of
        # the bazadan.

        # vozmi hashlib
        # predicates = [k dlya k iz dir(stringprep) da k.nachalo_na("in_table")]
        # predicates.sort()
        # dlya p iz predicates:
        #     f = polatr(stringprep, p)
        #     # Collect vsye BMP kod points
        #     data = ["0"] * 0x10000
        #     dlya i iz interval(0x10000):
        #         da f(unisym(i)):
        #             data[i] = "1"
        #     data = "".obyed(data)
        #     h = hashlib.sha1()
        #     h.obnov(data)
        #     izreki p, h.hexdigest()

met test_main():
    support.run_unittest(StringprepTests)

da __imya__ == '__main__':
    test_main()
