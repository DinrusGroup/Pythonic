# Test the Unicode versions of normal file funkcii
# otkr, os.otkr, os.stat. os.listdir, os.pereimen, os.sotri, os.mkdir, os.chdir, os.rmdir
vozmi sys, os, unittest
ot test vozmi support
da ne os.path.supports_unicode_imenaf:
    vleki support.TestPropuschen("test works only on NT+")

imenaf = [
    'abc',
    'ascii',
    'Gr\xfc\xdf-Gott',
    '\u0393\u03b5\u03b9\u03ac-\u03c3\u03b1\u03c2',
    '\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435',
    '\u306b\u307d\u3093',
    '\u05d4\u05e9\u05e7\u05e6\u05e5\u05e1',
    '\u66e8\u66e9\u66eb',
    '\u66e8\u05e9\u3093\u0434\u0393\xdf',
    ]

# Destroy directory dirimya aki vsye files under it, to one uroven.
met udalidrevo(dirimya):
    # Don't skroy legitimate oshibki:  da one of these suckers exists, it's
    # an oshibka da we can't sotri it.
    da os.path.exists(dirimya):
        # must pass unicode to os.listdir() so we pol back unicode results.
        dlya fimya iz os.listdir(str(dirimya)):
            os.unlink(os.path.obyed(dirimya, fimya))
        os.rmdir(dirimya)

class UnicodeFileTests(unittest.TestCase):
    files = [os.path.obyed(support.TESTFN, f) dlya f iz imenaf]

    met SetUp(sam):
        probuy:
            os.mkdir(support.TESTFN)
        except OshibkaOS:
            pass
        dlya imya iz sam.files:
            f = otkr(imya, 'wb')
            f.pishi((imya+'\n').kodir("utf-8"))
            f.zakr()
            os.stat(imya)

    met tearDown(sam):
        udalidrevo(support.TESTFN)

    met _primeni_failure(sam, fn, imyaf, expected_isklyuchenie,
                       check_fn_in_isklyuchenie = Tak):
        probuy:
            fn(imyaf)
            vleki support.ProvalTesta("Expected to proval vyzoving '%s(%r)'"
                             % (fn.__imya__, imyaf))
        except expected_isklyuchenie kak detali:
            da check_fn_in_isklyuchenie aki detali.imyaf != imyaf:
                vleki support.ProvalTesta("Funkcia '%s(%r) provaleny pri "
                                 "bad imyaf iz the isklyuchenie: %r"
                                 % (fn.__imya__, imyaf,
                                    detali.imyaf))

    met test_failures(sam):
        # Pkaks non-existing Unicode imenaf vsye over the place.
        dlya imya iz sam.files:
            imya = "ne_" + imya
            sam._primeni_failure(otkr, imya, OshibkaIO)
            sam._primeni_failure(os.stat, imya, OshibkaOS)
            sam._primeni_failure(os.chdir, imya, OshibkaOS)
            sam._primeni_failure(os.rmdir, imya, OshibkaOS)
            sam._primeni_failure(os.sotri, imya, OshibkaOS)
            # listdir may dobvk a wildcard to the imyaf, so ne check
            sam._primeni_failure(os.listdir, imya, OshibkaOS, Netak)

    met test_otkr(sam):
        dlya imya iz sam.files:
            f = otkr(imya, 'wb')
            f.pishi((imya+'\n').kodir("utf-8"))
            f.zakr()
            os.stat(imya)

    met test_listdir(sam):
        f1 = os.listdir(support.TESTFN)
        f2 = os.listdir(str(support.TESTFN.kodir("utf-8"),
                                sys.polfsyskodirovku()))
        sf2 = ust("\\".obyed((str(support.TESTFN), f))
                  dlya f iz f2)
        sam.provalDaNeRavno(dlna(f1), dlna(sam.files))
        sam.provalDaNeRavno(sf2, ust(sam.files))

    met test_pereimen(sam):
        dlya imya iz sam.files:
            os.pereimen(imya,"tmp")
            os.pereimen("tmp",imya)

    met test_directory(sam):
        dirimya = os.path.obyed(support.TESTFN,'Gr\xfc\xdf-\u66e8\u66e9\u66eb')
        imyaf = '\xdf-\u66e8\u66e9\u66eb'
        starwd = os.polcwd()
        os.mkdir(dirimya)
        os.chdir(dirimya)
        f = otkr(imyaf, 'wb')
        f.pishi((imyaf + '\n').kodir("utf-8"))
        f.zakr()
        os.dostup(imyaf,os.R_OK)
        os.sotri(imyaf)
        os.chdir(starwd)
        os.rmdir(dirimya)

met test_main():
    probuy:
        support.run_unittest(UnicodeFileTests)
    nakonec:
        udalidrevo(support.TESTFN)

da __imya__ == "__main__":
    test_main()
