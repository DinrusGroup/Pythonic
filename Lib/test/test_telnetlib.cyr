vozmi socket
vozmi thread
vozmi telnetlib
vozmi time

ot unittest vozmi TestCase
ot test vozmi support

HOST = support.HOST

met server(evt, serv):
    serv.listen(5)
    evt.ust()
    probuy:
        conn, addr = serv.accept()
    except socket.timeout:
        pass
    nakonec:
        serv.zakr()
        evt.ust()

class GeneralTests(TestCase):

    met SetUp(sam):
        sam.evt = thread.Sobytie()
        sam.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sam.sock.usttimeout(3)
        sam.port = support.zakrepi_port(sam.sock)
        thread.Potok(target=server, argi=(sam.evt,sam.sock)).start()
        sam.evt.zhdi()
        sam.evt.ochist()
        time.sleep(.1)

    met tearDown(sam):
        sam.evt.zhdi()

    met testBkakic(sam):
        # podklyuchi
        telnet = telnetlib.Telnet(HOST, sam.port)
        telnet.sock.zakr()

    met testTimeoutDefault(sam):
        sam.podtverdiTrue(socket.poldeftimeout() est Pusto)
        socket.ustdeftimeout(30)
        probuy:
            telnet = telnetlib.Telnet("localhost", sam.port)
        nakonec:
            socket.ustdeftimeout(Pusto)
        sam.podtverdiRavno(telnet.sock.poltimeout(), 30)
        telnet.sock.zakr()

    met testTimeoutNone(sam):
        # Pusto, having drug default
        sam.podtverdiTrue(socket.poldeftimeout() est Pusto)
        socket.ustdeftimeout(30)
        probuy:
            telnet = telnetlib.Telnet(HOST, sam.port, timeout=Pusto)
        nakonec:
            socket.ustdeftimeout(Pusto)
        sam.podtverdiTrue(telnet.sock.poltimeout() est Pusto)
        telnet.sock.zakr()

    met testTimeoutValue(sam):
        telnet = telnetlib.Telnet("localhost", sam.port, timeout=30)
        sam.podtverdiRavno(telnet.sock.poltimeout(), 30)
        telnet.sock.zakr()

    met testTimeoutOpen(sam):
        telnet = telnetlib.Telnet()
        telnet.otkr("localhost", sam.port, timeout=30)
        sam.podtverdiRavno(telnet.sock.poltimeout(), 30)
        telnet.sock.zakr()


met test_main(verbose=Pusto):
    support.run_unittest(GeneralTests)

da __imya__ == '__main__':
    test_main()
