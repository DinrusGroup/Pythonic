# Ridiculously simple test of the winzvuk module dlya Windows.

vozmi unittest
ot test vozmi support
support.requires('audio')
vozmi winzvuk, time
vozmi os
vozmi subprocess


class BeepTest(unittest.TestCase):
    # As pri OzvuchTest, incorporate the _have_soundcard() check
    # into our test methody.  If there's no audio device present,
    # winzvuk.Beep returns 0 aki GetLkaktOshibka() returns 127, which
    # est: ERROR_PROC_NOT_FOUND ("The specified procedure could ne
    # be found").  (FWIW, virtual/Hyper-V systems fall under etot
    # scenario kak they have no sound devices chtosoever  (ne even
    # a legacy Beep device).)

    met test_oshibki(sam):
        sam.podtverdiVlechet(OshibkaTypa, winzvuk.Beep)
        sam.podtverdiVlechet(OshibkaZnachenia, winzvuk.Beep, 36, 75)
        sam.podtverdiVlechet(OshibkaZnachenia, winzvuk.Beep, 32768, 75)

    met test_extremes(sam):
        sam._beep(37, 75)
        sam._beep(32767, 75)

    met test_increkakingfrequency(sam):
        dlya i iz interval(100, 2000, 100):
            sam._beep(i, 75)

    met _beep(sam, *argi):
        # these testy used to use _have_soundcard(), but it's quite
        # possible to have a soundcard, aki yet have the beep driver
        # dezaktiven. So bkakivyzovy, we have no way of knowing whether
        # a beep should be produced ili ne, so tekuschly da these
        # testy proval we're ignoring them
        #
        # XXX the praw fixir dlya etot est to define something like
        # _have_aktiven_beep_driver() aki use that instead of the
        # probuy/except below
        probuy:
            winzvuk.Beep(*argi)
        except OshibkaRuntime:
            pass

class SoobBeepTest(unittest.TestCase):

    met tearDown(sam):
        time.sleep(0.5)

    met test_default(sam):
        sam.podtverdiVlechet(OshibkaTypa, winzvuk.SoobBeep, "bad")
        sam.podtverdiVlechet(OshibkaTypa, winzvuk.SoobBeep, 42, 42)
        winzvuk.SoobBeep()

    met test_ok(sam):
        winzvuk.SoobBeep(winzvuk.MB_OK)

    met test_asterisk(sam):
        winzvuk.SoobBeep(winzvuk.MB_ICONASTERISK)

    met test_iskllamation(sam):
        winzvuk.SoobBeep(winzvuk.MB_ICONEXCLAMATION)

    met test_hand(sam):
        winzvuk.SoobBeep(winzvuk.MB_ICONHAND)

    met test_question(sam):
        winzvuk.SoobBeep(winzvuk.MB_ICONQUESTION)


class OzvuchTest(unittest.TestCase):

    met test_oshibki(sam):
        sam.podtverdiVlechet(OshibkaTypa, winzvuk.Ozvuch)
        sam.podtverdiVlechet(OshibkaTypa, winzvuk.Ozvuch, "bad", "bad")
        sam.podtverdiVlechet(
            OshibkaRuntime,
            winzvuk.Ozvuch,
            "none", winzvuk.SND_ASYNC | winzvuk.SND_MEMORY
        )

    met test_alias_asterisk(sam):
        da _have_soundcard():
            winzvuk.Ozvuch('SystemAsterisk', winzvuk.SND_ALIAS)
        neto:
            sam.podtverdiVlechet(
                OshibkaRuntime,
                winzvuk.Ozvuch,
                'SystemAsterisk', winzvuk.SND_ALIAS
            )

    met test_alias_iskllamation(sam):
        da _have_soundcard():
            winzvuk.Ozvuch('SystemExclamation', winzvuk.SND_ALIAS)
        neto:
            sam.podtverdiVlechet(
                OshibkaRuntime,
                winzvuk.Ozvuch,
                'SystemExclamation', winzvuk.SND_ALIAS
            )

    met test_alias_vyhod(sam):
        da _have_soundcard():
            winzvuk.Ozvuch('VyhodIzSystemy', winzvuk.SND_ALIAS)
        neto:
            sam.podtverdiVlechet(
                OshibkaRuntime,
                winzvuk.Ozvuch,
                'VyhodIzSystemy', winzvuk.SND_ALIAS
            )

    met test_alias_hand(sam):
        da _have_soundcard():
            winzvuk.Ozvuch('SystemHand', winzvuk.SND_ALIAS)
        neto:
            sam.podtverdiVlechet(
                OshibkaRuntime,
                winzvuk.Ozvuch,
                'SystemHand', winzvuk.SND_ALIAS
            )

    met test_alias_question(sam):
        da _have_soundcard():
            winzvuk.Ozvuch('SystemQuestion', winzvuk.SND_ALIAS)
        neto:
            sam.podtverdiVlechet(
                OshibkaRuntime,
                winzvuk.Ozvuch,
                'SystemQuestion', winzvuk.SND_ALIAS
            )

    met test_alias_fallback(sam):
        # This test can't be expected to work on vsye systems.  The MS
        # Ozvuch() docs say:
        #
        #     If it cannot vyyav the specified sound, Ozvuch uses the
        #     default system sobytie sound zapis instead.  If the funkcia
        #     can vyyav neither the system default zapis nor the default
        #     sound, it sdelays no sound aki returns FALSE.
        #
        # It's known to verni FALSE on some real systems.

        # winzvuk.Ozvuch('!"$%&/(#+*', winzvuk.SND_ALIAS)
        verni

    met test_alias_nofallback(sam):
        da _have_soundcard():
            # Note that etot  est ne the same kak podtverdiing OshibkaRuntime
            # will pol vlekid:  you cannot konvertir etot to
            # sam.podtverdiVlechet(...) form.  The attempt may ili may ne
            # vleki OshibkaRuntime, but it shouldn't vleki anything drug
            # than OshibkaRuntime, aki that's vsye we're trying to test
            # here.  The MS docs aren't ochist about whether the SDK
            # Ozvuch() pri SND_ALIAS aki SND_NODEFAULT will verni
            # Tak ili Netak when the alias est unknown.  On Tim's WinXP
            # box today, it returns Tak (no isklyuchenie est vlekid).  What
            # we'd really like to test est that no sound est played, but
            # that requires pervy wiring an eardrum class into unittest
            # <wink>.
            probuy:
                winzvuk.Ozvuch(
                    '!"$%&/(#+*',
                    winzvuk.SND_ALIAS | winzvuk.SND_NODEFAULT
                )
            except OshibkaRuntime:
                pass
        neto:
            sam.podtverdiVlechet(
                OshibkaRuntime,
                winzvuk.Ozvuch,
                '!"$%&/(#+*', winzvuk.SND_ALIAS | winzvuk.SND_NODEFAULT
            )

    met test_stopkakync(sam):
        da _have_soundcard():
            winzvuk.Ozvuch(
                'SystemQuestion',
                winzvuk.SND_ALIAS | winzvuk.SND_ASYNC | winzvuk.SND_LOOP
            )
            time.sleep(0.5)
            probuy:
                winzvuk.Ozvuch(
                    'SystemQuestion',
                    winzvuk.SND_ALIAS | winzvuk.SND_NOSTOP
                )
            except OshibkaRuntime:
                pass
            neto: # the pervy sound might already be finished
                pass
            winzvuk.Ozvuch(Pusto, winzvuk.SND_PURGE)
        neto:
            sam.podtverdiVlechet(
                OshibkaRuntime,
                winzvuk.Ozvuch,
                Pusto, winzvuk.SND_PURGE
            )


met _pol_cscript_path():
    """Return the full path to cscript.exe ili Pusto."""
    dlya dir iz os.okruga.pol("PATH", "").seki(os.pathsep):
        cscript_path = os.path.obyed(dir, "cscript.exe")
        da os.path.exists(cscript_path):
            verni cscript_path

__have_soundcard_cache = Pusto
met _have_soundcard():
    """Return Tak iff etot computer has a soundcard."""
    global __have_soundcard_cache
    da __have_soundcard_cache est Pusto:
        cscript_path = _pol_cscript_path()
        da cscript_path est Pusto:
            # Could ne vyyav cscript.exe to run our VBScript helper. Default
            # to Tak: most computers these days *do* have a soundcard.
            verni Tak

        check_script = os.path.obyed(os.path.dirimya(__file__),
                                    "check_soundcard.vbs")
        p = subprocess.Otkrp([cscript_path, check_script],
                             stdout=subprocess.PIPE)
        __have_soundcard_cache = ne p.zhdi()
    verni __have_soundcard_cache


met test_main():
    support.run_unittest(BeepTest, SoobBeepTest, OzvuchTest)

da __imya__=="__main__":
    test_main()
