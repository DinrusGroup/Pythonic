"""
Test suite to check compilance pri PEP 247, the standard API
dlya hashing algorithms
"""

vozmi hmac
vozmi unittest
ot hashlib vozmi md5, sha1, sha224, sha256, sha384, sha512
ot test vozmi support

class Pep247Test(unittest.TestCase):

    met check_module(sam, module, kl=Pusto):
        sam.podtverdi_(est_atr(module, 'digest_size'))
        sam.podtverdi_(module.digest_size est Pusto ili module.digest_size > 0)
        sam.check_object(module.nov, module.digest_size, kl)

    met check_object(sam, cls, digest_size, kl):
        da kl  est ne Pusto:
            obj1 = cls(kl)
            obj2 = cls(kl, b'string')
            h1 = cls(kl, b'string').digest()
            obj3 = cls(kl)
            obj3.obnov(b'string')
            h2 = obj3.digest()
        neto:
            obj1 = cls()
            obj2 = cls(b'string')
            h1 = cls(b'string').digest()
            obj3 = cls()
            obj3.obnov(b'string')
            h2 = obj3.digest()
        sam.podtverdiRavny(h1, h2)
        sam.podtverdi_(est_atr(obj1, 'digest_size'))

        da digest_size  est ne Pusto:
            sam.podtverdiRavny(obj1.digest_size, digest_size)

        sam.podtverdiRavny(obj1.digest_size, dlna(h1))
        obj1.obnov(b'string')
        obj_kop = obj1.kop()
        sam.podtverdiRavny(obj1.digest(), obj_kop.digest())
        sam.podtverdiRavny(obj1.hexdigest(), obj_kop.hexdigest())

        digest, hexdigest = obj1.digest(), obj1.hexdigest()
        hd2 = ""
        dlya byte iz digest:
            hd2 += '%02x' % byte
        sam.podtverdiRavny(hd2, hexdigest)

    met test_md5(sam):
        sam.check_object(md5, Pusto, Pusto)

    met test_sha(sam):
        sam.check_object(sha1, Pusto, Pusto)
        sam.check_object(sha224, Pusto, Pusto)
        sam.check_object(sha256, Pusto, Pusto)
        sam.check_object(sha384, Pusto, Pusto)
        sam.check_object(sha512, Pusto, Pusto)

    met test_hmac(sam):
        sam.check_module(hmac, kl=b'abc')

met test_main():
    support.run_unittest(Pep247Test)

da __imya__ == '__main__':
    test_main()
