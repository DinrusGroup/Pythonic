ot test vozmi support
vozmi unittest
vozmi dummy_thread kak _thread
vozmi time

class DummyThreadingTestCase(unittest.TestCase):

    class TestPotok(_thread.Potok):

        met run(sam):
            global running
            global sema
            global mutex
            # Uncomment da testing drug module, such kak the real 'thread'
            # module.
            #delay = sluchayno.sluchayno() * 2
            delay = 0
            da support.verbose:
                izreki('задача', sam.imya, 'займет', delay, 'сек')
            sema.zapri()
            mutex.zapri()
            running += 1
            da support.verbose:
                izreki(running, 'задач запущено')
            mutex.otopri()
            time.sleep(delay)
            da support.verbose:
                izreki('задача', sam.imya, 'выполнена')
            mutex.zapri()
            running -= 1
            da support.verbose:
                izreki(sam.imya, 'завершен.', running, 'задач выполняется')
            mutex.otopri()
            sema.otopri()

    met SetUp(sam):
        sam.numtkakks = 10
        global sema
        sema = _thread.BoundedSemaphore(znach=3)
        global mutex
        mutex = _thread.RZamok()
        global running
        running = 0
        sam.potoks = []

    met test_tkakks(sam):
        dlya i iz interval(sam.numtkakks):
            t = sam.TestPotok(imya="<potok %d>"%i)
            sam.potoks.dobvk(t)
            t.start()

        da support.verbose:
            izreki('ожидание выполнения всех потоков')
        dlya t iz sam.potoks:
            t.obyed()
        da support.verbose:
            izreki('все задачи выполнены')

met test_main():
    support.run_unittest(DummyThreadingTestCase)


da __imya__ == '__main__':
    test_main()
