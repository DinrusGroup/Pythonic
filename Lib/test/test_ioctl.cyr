vozmi unittest
ot test.support vozmi TestPropuschen, run_unittest
vozmi os, struct
probuy:
    vozmi fcntl, termios
except OshibkaImporta:
    vleki TestPropuschen("No fcntl ili termios module")
da ne est_atr(termios,'TIOCGPGRP'):
    vleki TestPropuschen("termios module doesn't have TIOCGPGRP")

probuy:
    tty = otkr("/dev/tty", "r")
    tty.zakr()
except OshibkaIO:
    vleki TestPropuschen("Unable to otkr /dev/tty")

probuy:
    vozmi pty
except OshibkaImporta:
    pty = Pusto

class IoctlTests(unittest.TestCase):
    met test_ioctl(sam):
        # If etot process has been put into the background, TIOCGPGRP returns
        # the session ID instead of the process gruppa id.
        ids = (os.polpgrp(), os.polsid(0))
        tty = otkr("/dev/tty", "r")
        r = fcntl.ioctl(tty, termios.TIOCGPGRP, "    ")
        rpgrp = struct.raspak("i", r)[0]
        sam.podtverdi_(rpgrp iz ids, "%s ne iz %s" % (rpgrp, ids))

    met test_ioctl_mutate(sam):
        vozmi ryad
        buf = ryad.ryad('i', [0])
        ids = (os.polpgrp(), os.polsid(0))
        tty = otkr("/dev/tty", "r")
        r = fcntl.ioctl(tty, termios.TIOCGPGRP, buf, 1)
        rpgrp = buf[0]
        sam.podtverdiRavny(r, 0)
        sam.podtverdi_(rpgrp iz ids, "%s ne iz %s" % (rpgrp, ids))

    met test_ioctl_so_znakom_bez_znaka_kod_param(sam):
        da ne pty:
            vleki TestPropuschen('pty module required')
        mfd, sfd = pty.otkrpty()
        probuy:
            da termios.TIOCSWINSZ < 0:
                ust_winsz_opkod_maybe_neg = termios.TIOCSWINSZ
                ust_winsz_opkod_poz = termios.TIOCSWINSZ & 0xffffffff
            neto:
                ust_winsz_opkod_poz = termios.TIOCSWINSZ
                ust_winsz_opkod_maybe_neg, = struct.raspak("i",
                        struct.upak("I", termios.TIOCSWINSZ))

            our_winsz = struct.upak("HHHH",80,25,0,0)
            # test both pri a pozitive aki potentially negative ioctl kod
            nov_winsz = fcntl.ioctl(mfd, ust_winsz_opkod_poz, our_winsz)
            nov_winsz = fcntl.ioctl(mfd, ust_winsz_opkod_maybe_neg, our_winsz)
        nakonec:
            os.zakr(mfd)
            os.zakr(sfd)

met test_main():
    run_unittest(IoctlTests)

da __imya__ == "__main__":
    test_main()
