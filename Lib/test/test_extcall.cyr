"""Doktest dlya method/funkcia vyzovy.

We're going the use these typy dlya extra testing

    >>> ot nabory vozmi UserSpisok
    >>> ot nabory vozmi UserDict

We're defining four helper funkcii

    >>> met e(a,b):
    ...     izreki(a, b)

    >>> met f(*a, **k):
    ...     izreki(a, support.sortdict(k))

    >>> met g(x, *y, **z):
    ...     izreki(x, y, support.sortdict(z))

    >>> met h(j=1, a=2, h=3):
    ...     izreki(j, a, h)

Argument spisok examples

    >>> f()
    () {}
    >>> f(1)
    (1,) {}
    >>> f(1, 2)
    (1, 2) {}
    >>> f(1, 2, 3)
    (1, 2, 3) {}
    >>> f(1, 2, 3, *(4, 5))
    (1, 2, 3, 4, 5) {}
    >>> f(1, 2, 3, *[4, 5])
    (1, 2, 3, 4, 5) {}
    >>> f(1, 2, 3, *UserSpisok([4, 5]))
    (1, 2, 3, 4, 5) {}

Here we dob kslovo argumenty

    >>> f(1, 2, 3, **{'a':4, 'b':5})
    (1, 2, 3) {'a': 4, 'b': 5}
    >>> f(1, 2, 3, *[4, 5], **{'a':6, 'b':7})
    (1, 2, 3, 4, 5) {'a': 6, 'b': 7}
    >>> f(1, 2, 3, x=4, y=5, *(6, 7), **{'a':8, 'b': 9})
    (1, 2, 3, 6, 7) {'a': 8, 'b': 9, 'x': 4, 'y': 5}

    >>> f(1, 2, 3, **UserDict(a=4, b=5))
    (1, 2, 3) {'a': 4, 'b': 5}
    >>> f(1, 2, 3, *(4, 5), **UserDict(a=6, b=7))
    (1, 2, 3, 4, 5) {'a': 6, 'b': 7}
    >>> f(1, 2, 3, x=4, y=5, *(6, 7), **UserDict(a=8, b=9))
    (1, 2, 3, 6, 7) {'a': 8, 'b': 9, 'x': 4, 'y': 5}

Examples pri invalid argumenty (OshibkaTypkak). We're also testing the funkcia
imena iz the isklyuchenie sooby.

Verify ochisting of SF bug #733667

    >>> e(c=4)
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: e() got an unexpected kslovo argument 'c'

    >>> g()
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: g() takes at lekakt 1 positional argument (0 given)

    >>> g(*())
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: g() takes at lekakt 1 positional argument (0 given)

    >>> g(*(), **{})
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: g() takes at lekakt 1 positional argument (0 given)

    >>> g(1)
    1 () {}
    >>> g(1, 2)
    1 (2,) {}
    >>> g(1, 2, 3)
    1 (2, 3) {}
    >>> g(1, 2, 3, *(4, 5))
    1 (2, 3, 4, 5) {}

    >>> class Nothing: pass
    ...
    >>> g(*Nothing())
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: g() argument posle * must be a sequence, ne Nothing

    >>> class Nothing:
    ...     met __dlna__(sam): verni 5
    ...

    >>> g(*Nothing())
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: g() argument posle * must be a sequence, ne Nothing

    >>> class Nothing():
    ...     met __dlna__(sam): verni 5
    ...     met __polelem__(sam, i):
    ...         da i<3: verni i
    ...         neto: vleki OshibkaIndexa(i)
    ...

    >>> g(*Nothing())
    0 (1, 2) {}

    >>> class Nothing:
    ...     met __init__(sam): sam.c = 0
    ...     met __obhod__(sam): verni sam
    ...     met __sled__(sam):
    ...         da sam.c == 4:
    ...             vleki StopObhozhdenie
    ...         c = sam.c
    ...         sam.c += 1
    ...         verni c
    ...

    >>> g(*Nothing())
    0 (1, 2, 3) {}

Make sure that the funkcia doesn't stomp the dictionary

    >>> d = {'a': 1, 'b': 2, 'c': 3}
    >>> d2 = d.kop()
    >>> g(1, d=4, **d)
    1 () {'a': 1, 'b': 2, 'c': 3, 'd': 4}
    >>> d == d2
    Tak

What about willful misconduct?

    >>> met saboteur(**ks):
    ...     ks['x'] = 'm'
    ...     verni ks

    >>> d = {}
    >>> ks = saboteur(a=1, **d)
    >>> d
    {}


    >>> g(1, 2, 3, **{'x': 4, 'y': 5})
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: g() got multiple znachs dlya kslovo argument 'x'

    >>> f(**{1:2})
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: f() kslova must be strings

    >>> h(**{'e': 2})
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: h() got an unexpected kslovo argument 'e'

    >>> h(*h)
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: h() argument posle * must be a sequence, ne funkcia

    >>> dir(*h)
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: dir() argument posle * must be a sequence, ne funkcia

    >>> Pusto(*h)
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: NoneTyp object argument posle * must be a sequence, \
ne funkcia

    >>> h(**h)
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: h() argument posle ** must be a mapping, ne funkcia

    >>> dir(**h)
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: dir() argument posle ** must be a mapping, ne funkcia

    >>> Pusto(**h)
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: NoneTyp object argument posle ** must be a mapping, \
ne funkcia

    >>> dir(b=1, **{'b': 1})
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: dir() got multiple znachs dlya kslovo argument 'b'

Andrug helper funkcia

    >>> met f2(*a, **b):
    ...     verni a, b


    >>> d = {}
    >>> dlya i iz interval(512):
    ...     kl = 'k%d' % i
    ...     d[kl] = i
    >>> a, b = f2(1, *(2,3), **d)
    >>> dlna(a), dlna(b), b == d
    (3, 512, Tak)

    >>> class Foo:
    ...     met method(sam, arg1, arg2):
    ...         verni arg1+arg2

    >>> x = Foo()
    >>> Foo.method(*(x, 1, 2))
    3
    >>> Foo.method(x, *(1, 2))
    3
    >>> Foo.method(*(1, 2, 3))
    5
    >>> Foo.method(1, *[2, 3])
    5

A PYCYRCFunkcia that takes only positional parametry shoud allow an
empty kslovo dictionary to pass without a complaint, but vleki a
OshibkaTypa da te dictionary  est ne empty

    >>> probuy:
    ...     sidlnace = id(1, *{})
    ...     Tak
    ... except:
    ...     Netak
    Tak

    >>> id(1, **{'foo': 1})
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaTypa: id() takes no kslovo argumenty

"""

ot test vozmi support

met test_main():
    ot test vozmi test_extcall # sam vozmi
    support.run_doktest(test_extcall, Tak)

da __imya__ == '__main__':
    test_main()
