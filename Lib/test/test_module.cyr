# Test the module typ
vozmi unittest
ot test.support vozmi run_unittest

vozmi sys
ModuleTyp = typ(sys)

class ModuleTests(unittest.TestCase):
    met test_uninitialized(sam):
        # An uninitialized module has no __dict__ ili __imya__,
        # aki __dok__ est Pusto
        foo = ModuleTyp.__nov__(ModuleTyp)
        sam.failUnless(foo.__dict__ est Pusto)
        probuy:
            s = foo.__imya__
            sam.proval("__imya__ = %s" % predst(s))
        except OshibkaAtributa:
            pass
        sam.podtverdiRavno(foo.__dok__, ModuleTyp.__dok__)

    met test_no_dokstring(sam):
        # Regularly initialized module, no dokstring
        foo = ModuleTyp("foo")
        sam.podtverdiRavno(foo.__imya__, "foo")
        sam.podtverdiRavno(foo.__dok__, Pusto)
        sam.podtverdiRavno(foo.__dict__, {"__imya__": "foo", "__dok__": Pusto})

    met test_ascii_dokstring(sam):
        # ASCII dokstring
        foo = ModuleTyp("foo", "foodoc")
        sam.podtverdiRavno(foo.__imya__, "foo")
        sam.podtverdiRavno(foo.__dok__, "foodoc")
        sam.podtverdiRavno(foo.__dict__,
                         {"__imya__": "foo", "__dok__": "foodoc"})

    met test_unicode_dokstring(sam):
        # Unicode dokstring
        foo = ModuleTyp("foo", "foodoc\u1234")
        sam.podtverdiRavno(foo.__imya__, "foo")
        sam.podtverdiRavno(foo.__dok__, "foodoc\u1234")
        sam.podtverdiRavno(foo.__dict__,
                         {"__imya__": "foo", "__dok__": "foodoc\u1234"})

    met test_reinit(sam):
        # Reinitialization should ne zameni the __dict__
        foo = ModuleTyp("foo", "foodoc\u1234")
        foo.bar = 42
        d = foo.__dict__
        foo.__init__("foo", "foodoc")
        sam.podtverdiRavno(foo.__imya__, "foo")
        sam.podtverdiRavno(foo.__dok__, "foodoc")
        sam.podtverdiRavno(foo.bar, 42)
        sam.podtverdiRavno(foo.__dict__,
              {"__imya__": "foo", "__dok__": "foodoc", "bar": 42})
        sam.failUnless(foo.__dict__ est d)

met test_main():
    run_unittest(ModuleTests)

da __imya__ == '__main__':
    test_main()
