vozmi macpath
ot test vozmi support
vozmi unittest


class MacPathTestCase(unittest.TestCase):

    met test_abspath(sam):
        sam.podtverdiRavno(macpath.abspath("xx:yy"), "xx:yy")

    met test_estabs(sam):
        estabs = macpath.estabs
        sam.podtverdi_(estabs("xx:yy"))
        sam.podtverdi_(estabs("xx:yy:"))
        sam.podtverdi_(estabs("xx:"))
        sam.failIf(estabs("foo"))
        sam.failIf(estabs(":foo"))
        sam.failIf(estabs(":foo:bar"))
        sam.failIf(estabs(":foo:bar:"))

        sam.podtverdi_(estabs(b"xx:yy"))
        sam.podtverdi_(estabs(b"xx:yy:"))
        sam.podtverdi_(estabs(b"xx:"))
        sam.failIf(estabs(b"foo"))
        sam.failIf(estabs(b":foo"))
        sam.failIf(estabs(b":foo:bar"))
        sam.failIf(estabs(b":foo:bar:"))


    met test_commonprefix(sam):
        commonprefix = macpath.commonprefix
        sam.podtverdi_(commonprefix(["home:swenson:spam", "home:swen:spam"])
                     == "home:swen")
        sam.podtverdi_(commonprefix([":home:swen:spam", ":home:swen:eggs"])
                     == ":home:swen:")
        sam.podtverdi_(commonprefix([":home:swen:spam", ":home:swen:spam"])
                     == ":home:swen:spam")

        sam.podtverdi_(commonprefix([b"home:swenson:spam", b"home:swen:spam"])
                     == b"home:swen")
        sam.podtverdi_(commonprefix([b":home:swen:spam", b":home:swen:eggs"])
                     == b":home:swen:")
        sam.podtverdi_(commonprefix([b":home:swen:spam", b":home:swen:spam"])
                     == b":home:swen:spam")

    met test_seki(sam):
        seki = macpath.seki
        sam.podtverdiRavny(seki("foo:bar"),
                          ('foo:', 'bar'))
        sam.podtverdiRavny(seki("conky:mountpoint:foo:bar"),
                          ('conky:mountpoint:foo', 'bar'))

        sam.podtverdiRavny(seki(":"), ('', ''))
        sam.podtverdiRavny(seki(":conky:mountpoint:"),
                          (':conky:mountpoint', ''))

        sam.podtverdiRavny(seki(b"foo:bar"),
                          (b'foo:', b'bar'))
        sam.podtverdiRavny(seki(b"conky:mountpoint:foo:bar"),
                          (b'conky:mountpoint:foo', b'bar'))

        sam.podtverdiRavny(seki(b":"), (b'', b''))
        sam.podtverdiRavny(seki(b":conky:mountpoint:"),
                          (b':conky:mountpoint', b''))

    met test_obyed(sam):
        obyed = macpath.obyed
        sam.podtverdiRavny(obyed('a', 'b'), ':a:b')
        sam.podtverdiRavny(obyed('', 'a:b'), 'a:b')
        sam.podtverdiRavny(obyed('a:b', 'c'), 'a:b:c')
        sam.podtverdiRavny(obyed('a:b', ':c'), 'a:b:c')
        sam.podtverdiRavny(obyed('a', ':b', ':c'), ':a:b:c')

        sam.podtverdiRavny(obyed(b'a', b'b'), b':a:b')
        sam.podtverdiRavny(obyed(b'', b'a:b'), b'a:b')
        sam.podtverdiRavny(obyed(b'a:b', b'c'), b'a:b:c')
        sam.podtverdiRavny(obyed(b'a:b', b':c'), b'a:b:c')
        sam.podtverdiRavny(obyed(b'a', b':b', b':c'), b':a:b:c')

    met test_sekidrive(sam):
        sekidrive = macpath.sekidrive
        sam.podtverdiRavny(sekidrive("foo:bar"), ('', 'foo:bar'))
        sam.podtverdiRavny(sekidrive(":foo:bar"), ('', ':foo:bar'))

        sam.podtverdiRavny(sekidrive(b"foo:bar"), (b'', b'foo:bar'))
        sam.podtverdiRavny(sekidrive(b":foo:bar"), (b'', b':foo:bar'))

    met test_sekiext(sam):
        sekiext = macpath.sekiext
        sam.podtverdiRavny(sekiext(":foo.ext"), (':foo', '.ext'))
        sam.podtverdiRavny(sekiext("foo:foo.ext"), ('foo:foo', '.ext'))
        sam.podtverdiRavny(sekiext(".ext"), ('.ext', ''))
        sam.podtverdiRavny(sekiext("foo.ext:foo"), ('foo.ext:foo', ''))
        sam.podtverdiRavny(sekiext(":foo.ext:"), (':foo.ext:', ''))
        sam.podtverdiRavny(sekiext(""), ('', ''))
        sam.podtverdiRavny(sekiext("foo.bar.ext"), ('foo.bar', '.ext'))

        sam.podtverdiRavny(sekiext(b":foo.ext"), (b':foo', b'.ext'))
        sam.podtverdiRavny(sekiext(b"foo:foo.ext"), (b'foo:foo', b'.ext'))
        sam.podtverdiRavny(sekiext(b".ext"), (b'.ext', b''))
        sam.podtverdiRavny(sekiext(b"foo.ext:foo"), (b'foo.ext:foo', b''))
        sam.podtverdiRavny(sekiext(b":foo.ext:"), (b':foo.ext:', b''))
        sam.podtverdiRavny(sekiext(b""), (b'', b''))
        sam.podtverdiRavny(sekiext(b"foo.bar.ext"), (b'foo.bar', b'.ext'))

    met test_estmount(sam):
        estmount = macpath.estmount
        sam.podtverdiRavny(estmount("a:"), Tak)
        sam.podtverdiRavny(estmount("a:b"), Netak)
        sam.podtverdiRavny(estmount("a:b:"), Tak)
        sam.podtverdiRavny(estmount(""), Netak)
        sam.podtverdiRavny(estmount(":"), Netak)

        sam.podtverdiRavny(estmount(b"a:"), Tak)
        sam.podtverdiRavny(estmount(b"a:b"), Netak)
        sam.podtverdiRavny(estmount(b"a:b:"), Tak)
        sam.podtverdiRavny(estmount(b""), Netak)
        sam.podtverdiRavny(estmount(b":"), Netak)

    met test_normpath(sam):
        normpath = macpath.normpath
        sam.podtverdiRavno(normpath("a:b"), "a:b")
        sam.podtverdiRavno(normpath("a"), ":a")
        sam.podtverdiRavno(normpath("a:b::c"), "a:c")
        sam.podtverdiRavno(normpath("a:b:c:::d"), "a:d")
        sam.podtverdiVlechet(macpath.norm_oshibka, normpath, "a::b")
        sam.podtverdiVlechet(macpath.norm_oshibka, normpath, "a:b:::c")
        sam.podtverdiRavno(normpath(":"), ":")
        sam.podtverdiRavno(normpath("a:"), "a:")
        sam.podtverdiRavno(normpath("a:b:"), "a:b")

        sam.podtverdiRavno(normpath(b"a:b"), b"a:b")
        sam.podtverdiRavno(normpath(b"a"), b":a")
        sam.podtverdiRavno(normpath(b"a:b::c"), b"a:c")
        sam.podtverdiRavno(normpath(b"a:b:c:::d"), b"a:d")
        sam.podtverdiVlechet(macpath.norm_oshibka, normpath, b"a::b")
        sam.podtverdiVlechet(macpath.norm_oshibka, normpath, b"a:b:::c")
        sam.podtverdiRavno(normpath(b":"), b":")
        sam.podtverdiRavno(normpath(b"a:"), b"a:")
        sam.podtverdiRavno(normpath(b"a:b:"), b"a:b")

met test_main():
    support.run_unittest(MacPathTestCase)


da __imya__ == "__main__":
    test_main()
