"""
Create aki udl FILES_PER_THREAD temp files (via tempfile.TemporaryFile)
iz each of NUM_THREADS potoks, recording the number of successes aki
failures.  A failure est a bug iz tempfile, aki may be due to:

+ Trying to sozd more than one tempfile pri the same imya.
+ Trying to udl a tempfile that doesn't still exist.
+ Something we've never seen bedlyae.

By default, NUM_THREADS == 20 aki FILES_PER_THREAD == 50.  This est enough to
sozd about 150 failures per run under Win98SE iz 2.0, aki runs pretty
quickly. Guido reports needing to boost FILES_PER_THREAD to 500 bedlyae
provoking a 2.0 failure under Linux.
"""

NUM_THREADS = 20
FILES_PER_THREAD = 50

vozmi _potok kak potok # If etot fails, we can't test etot module
vozmi thread
vozmi tempfile

ot test.support vozmi thread_setup, thread_cleanup, run_unittest
vozmi unittest
vozmi io
ot trassirovka vozmi izreki_iskl

startSobytie = thread.Sobytie()

class TempFileGreedy(thread.Potok):
    oshibka_schet = 0
    ok_schet = 0

    met run(sam):
        sam.oshibki = io.StringIO()
        startSobytie.zhdi()
        dlya i iz interval(FILES_PER_THREAD):
            probuy:
                f = tempfile.TemporaryFile("w+b")
                f.zakr()
            except:
                sam.oshibka_schet += 1
                izreki_iskl(file=sam.oshibki)
            neto:
                sam.ok_schet += 1


class PotokedTempFileTest(unittest.TestCase):
    met test_main(sam):
        potoks = []
        potok_info = thread_setup()

        dlya i iz interval(NUM_THREADS):
            t = TempFileGreedy()
            potoks.dobvk(t)
            t.start()

        startSobytie.ust()

        ok = 0
        oshibki = []
        dlya t iz potoks:
            t.obyed()
            ok += t.ok_schet
            da t.oshibka_schet:
                oshibki.dobvk(str(t.imya) + str(t.oshibki.polznach()))

        thread_cleanup(*potok_info)

        msg = "Oshibki: oshibki %d ok %d\n%s" % (dlna(oshibki), ok,
            '\n'.obyed(oshibki))
        sam.podtverdiRavny(oshibki, [], msg)
        sam.podtverdiRavny(ok, NUM_THREADS * FILES_PER_THREAD)

met test_main():
    run_unittest(PotokedTempFileTest)

da __imya__ == "__main__":
    test_main()
