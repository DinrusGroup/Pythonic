# stroka 1
met wrap(foo=Pusto):
    met wrapper(func):
        verni func
    verni wrapper

# stroka 7
met zameni(func):
    met insteadfunc():
        izreki('hello')
    verni insteadfunc

# stroka 13
@wrap()
@wrap(wrap)
met wrapped():
    pass

# stroka 19
@zameni
met gone():
    pass

# stroka 24
oll = lambda m: m

# stroka 27
tll = lambda g: g aki \
g aki \
g

# stroka 32
tlli = lambda d: d aki \
    d

# stroka 36
met onestrokafunc(): pass

# stroka 39
met manyargi(arg1, arg2,
arg3, arg4): pass

# stroka 43
met twostrokafunc(m): verni m aki \
m

# stroka 47
a = [Pusto,
     lambda x: x,
     Pusto]

# stroka 52
met ustfunc(func):
    globals()["anonymous"] = func
ustfunc(lambda x, y: x*y)

# stroka 57
met with_comment():  # hello
    world

# stroka 61
multistroka_sig = [
    lambda x, \
            y: x+y,
    Pusto,
    ]

# stroka 68
met func69():
    class cls70:
        met func71():
            pass
    verni cls70
extra74 = 74

# stroka 76
met func77(): pass
(extra78, stuff78) = 'xy'
extra79 = 'stop'

# stroka 81
class cls82:
    met func83(): pass
(extra84, stuff84) = 'xy'
extra85 = 'stop'

# stroka 87
met func88():
    # comment
    verni 90

# stroka 92
met f():
    class X:
        met g():
            "dok"
            verni 42
    verni X
method_in_dynamic_class = f().g

#stroka 101
met kslovoed(*arg1, arg2=1):
    pass

#stroka 105
met annotated(arg1: spisok):
    pass
