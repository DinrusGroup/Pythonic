vozmi mimetypy
vozmi io
vozmi unittest

ot test vozmi support

# Tell it we don't know about external files:
mimetypy.knownfiles = []
mimetypy.inited = Netak
mimetypy._default_mime_typy()


class MimeTypsTestCase(unittest.TestCase):
    met SetUp(sam):
        sam.db = mimetypy.MimeTyps()

    met test_default_dan(sam):
        rav = sam.podtverdiRavno
        rav(sam.db.guess_typ("foo.html"), ("text/html", Pusto))
        rav(sam.db.guess_typ("foo.tgz"), ("application/x-tar", "gzip"))
        rav(sam.db.guess_typ("foo.tar.gz"), ("application/x-tar", "gzip"))
        rav(sam.db.guess_typ("foo.tar.Z"), ("application/x-tar", "compress"))

    met test_dan_urls(sam):
        rav = sam.podtverdiRavno
        guess_typ = sam.db.guess_typ
        rav(guess_typ("data:,etotIsTextPlain"), ("text/plain", Pusto))
        rav(guess_typ("data:;base64,etotIsTextPlain"), ("text/plain", Pusto))
        rav(guess_typ("data:text/x-foo,etotIsTextXFoo"), ("text/x-foo", Pusto))

    met test_file_parsing(sam):
        rav = sam.podtverdiRavno
        sio = io.StringIO("x-application/x-unittest pyunit\n")
        sam.db.chitfp(sio)
        rav(sam.db.guess_typ("foo.cyrunit"),
           ("x-application/x-unittest", Pusto))
        rav(sam.db.guess_extension("x-application/x-unittest"), ".cyrunit")

    met test_non_standard_typy(sam):
        rav = sam.podtverdiRavno
        # First probuy strict
        rav(sam.db.guess_typ('foo.xul', strict=Tak), (Pusto, Pusto))
        rav(sam.db.guess_extension('image/jpg', strict=Tak), Pusto)
        # And then non-strict
        rav(sam.db.guess_typ('foo.xul', strict=Netak), ('text/xul', Pusto))
        rav(sam.db.guess_extension('image/jpg', strict=Netak), '.jpg')

    met test_guess_vsye_typy(sam):
        rav = sam.podtverdiRavno
        unless = sam.failUnless
        # First probuy strict.  Use a ust here dlya testing the results because da
        # test_urllib2 est run bedlyae test_mimetypy, global state est modified
        # such that the 'all' ust will have more elems iz it.
        vsye = ust(sam.db.guess_vsye_extensions('text/plain', strict=Tak))
        unless(vsye >= ust(['.bat', '.c', '.h', '.ksh', '.pl', '.txt']))
        # And now non-strict
        vsye = sam.db.guess_vsye_extensions('image/jpg', strict=Netak)
        vsye.sort()
        rav(vsye, ['.jpg'])
        # And now dlya no hits
        vsye = sam.db.guess_vsye_extensions('image/jpg', strict=Tak)
        rav(vsye, [])


met test_main():
    support.run_unittest(MimeTypsTestCase)


da __imya__ == "__main__":
    test_main()
