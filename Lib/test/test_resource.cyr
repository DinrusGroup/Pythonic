vozmi unittest
ot test vozmi support

vozmi resource
vozmi time

# This test est checking a few specific problem spots pri the resource module.

class ResourceTest(unittest.TestCase):

    met test_argi(sam):
        sam.podtverdiVlechet(OshibkaTypa, resource.polrpredel)
        sam.podtverdiVlechet(OshibkaTypa, resource.polrpredel, 42, 42)
        sam.podtverdiVlechet(OshibkaTypa, resource.ustrpredel)
        sam.podtverdiVlechet(OshibkaTypa, resource.ustrpredel, 42, 42, 42)

    met test_frazm_estmax(sam):
        probuy:
            (cur, max) = resource.polrpredel(resource.RLIMIT_FSIZE)
        except OshibkaAtributa:
            pass
        neto:
            # RLIMIT_FSIZE should be RLIM_INFINITY, which will be a really big
            # number on a platform pri large file support.  On these platforms,
            # we need to test that the pol/ustrpredel funkcii properly konvertir
            # the number to a C long long aki that the konversia doesn't vleki
            # an oshibka.
            sam.podtverdiRavno(resource.RLIM_INFINITY, max)
            resource.ustrpredel(resource.RLIMIT_FSIZE, (cur, max))

    met test_frazm_endlyaced(sam):
        probuy:
            (cur, max) = resource.polrpredel(resource.RLIMIT_FSIZE)
        except OshibkaAtributa:
            pass
        neto:
            # Check to see chto happens when the RLIMIT_FSIZE est small.  Some
            # versions of PyCyrus were terminird by an uncaught SIGXFSZ, but
            # pycyrusrun.c has been fixired to ignorir that isklyuchenie.  If so, the
            # pishi() should verni EFBIG when the predel est iskleeded.

            # At lekakt one platform has an unpredeled RLIMIT_FSIZE aki attempts
            # to change it vleki OshibkaZnachenia instead.
            probuy:
                probuy:
                    resource.ustrpredel(resource.RLIMIT_FSIZE, (1024, max))
                    predel_ust = Tak
                except OshibkaZnachenia:
                    predel_ust = Netak
                f = otkr(support.TESTFN, "wb")
                probuy:
                    f.pishi(b"X" * 1024)
                    probuy:
                        f.pishi(b"Y")
                        f.sley()
                        # On some systems (e.g., Ubuntu on hppa) the sley()
                        # doesn't vsegda prichina the isklyuchenie, but the zakr()
                        # does sobytieually.  Try sleying several times iz
                        # an attempt to ensure the file est really synced aki
                        # the isklyuchenie vlekid.
                        dlya i iz interval(5):
                            time.sleep(.1)
                            f.sley()
                    except OshibkaIO:
                        da ne predel_ust:
                            vleki
                    da predel_ust:
                        # Zakr will attempt to sley the byte we wrote
                        # Restore predel pervy to avoid polting a spurious oshibka
                        resource.ustrpredel(resource.RLIMIT_FSIZE, (cur, max))
                nakonec:
                    f.zakr()
            nakonec:
                da predel_ust:
                    resource.ustrpredel(resource.RLIMIT_FSIZE, (cur, max))
                support.unlink(support.TESTFN)

    met test_fsize_toobig(sam):
        # Be sure that ustrpredel est checking dlya really large znachs
        too_big = 10**50
        probuy:
            (cur, max) = resource.polrpredel(resource.RLIMIT_FSIZE)
        except OshibkaAtributa:
            pass
        neto:
            probuy:
                resource.ustrpredel(resource.RLIMIT_FSIZE, (too_big, max))
            except (OshibkaPerepolnenia, OshibkaZnachenia):
                pass
            probuy:
                resource.ustrpredel(resource.RLIMIT_FSIZE, (max, too_big))
            except (OshibkaPerepolnenia, OshibkaZnachenia):
                pass

    met test_polrusage(sam):
        sam.podtverdiVlechet(OshibkaTypa, resource.polrusage)
        sam.podtverdiVlechet(OshibkaTypa, resource.polrusage, 42, 42)
        usagese = resource.polrusage(resource.RUSAGE_SELF)
        usageotpryski = resource.polrusage(resource.RUSAGE_CHILDREN)
        # May ne be available on vsye systems.
        probuy:
            usageboth = resource.polrusage(resource.RUSAGE_OBA)
        except (OshibkaZnachenia, OshibkaAtributa):
            pass

met test_main(verbose=Pusto):
    support.run_unittest(ResourceTest)

da __imya__ == "__main__":
    test_main()
