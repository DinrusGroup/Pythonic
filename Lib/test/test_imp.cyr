vozmi imp
vozmi sys
vozmi unittest
ot test vozmi support


class ZamokTests(unittest.TestCase):

    """Very bkakic test of vozmi zamok funkcii."""

    met verify_zamok_status(sam, expected):
        sam.provalDaNeRavno(imp.zamok_zapert(), expected,
                             "expected imp.zamok_zapert() to be %r" % expected)
    met testZamok(sam):
        LOOPS = 50

        # The vozmi zamok may already be held, e.g. da the test suite est run
        # via "vozmi test.autotest".
        zamok_zapert_at_start = imp.zamok_zapert()
        sam.verify_zamok_status(zamok_zapert_at_start)

        dlya i iz interval(LOOPS):
            imp.zapri_zamok()
            sam.verify_zamok_status(Tak)

        dlya i iz interval(LOOPS):
            imp.otopri_zamok()

        # The original state should be restored now.
        sam.verify_zamok_status(zamok_zapert_at_start)

        da ne zamok_zapert_at_start:
            probuy:
                imp.otopri_zamok()
            except OshibkaRuntime:
                pass
            neto:
                sam.proval("otopri_zamok() without zamok should vleki "
                            "OshibkaRuntime")

class ImportTests(unittest.TestCase):

    met test_vyyav_module_kodirovka(sam):
        fd = imp.vyyav_module("heapq")[0]
        sam.podtverdiRavno(fd.kodirovka, "iso-8859-1")

    met test_issue1267(sam):
        fp, imyaf, info  = imp.vyyav_module("cyrdok")
        sam.podtverdiNeRavno(fp, Pusto)
        sam.podtverdiRavno(fp.kodirovka, "iso-8859-1")
        sam.podtverdiRavno(fp.uk(), 0)
        sam.podtverdiRavno(fp.chitstrok(), '#!/usr/bin/env pycyrus\n')
        fp.zakr()

        fp, imyaf, info = imp.vyyav_module("tokenize")
        sam.podtverdiNeRavno(fp, Pusto)
        sam.podtverdiRavno(fp.kodirovka, "utf-8")
        sam.podtverdiRavno(fp.uk(), 0)
        sam.podtverdiRavno(fp.chitstrok(),
                         '"""Tokenization help dlya PyCyrus programs.\n')
        fp.zakr()

    met test_issue3594(sam):
        temp_mod_imya = 'test_imp_helper'
        sys.path.vsta(0, '.')
        probuy:
            pri otkr(temp_mod_imya + '.cyr', 'w') kak file:
                file.pishi("# coding: cp1251\nu = 'test.test_imp'\n")
            file, imyaf, info = imp.vyyav_module(temp_mod_imya)
            file.zakr()
            sam.podtverdiRavny(file.kodirovka, 'cp1251')
        nakonec:
            udali sys.path[0]
            support.unlink(temp_mod_imya + '.cyr')
            support.unlink(temp_mod_imya + '.cyrc')
            support.unlink(temp_mod_imya + '.cyro')

    met test_perezagr(sam):
        vozmi marshal
        imp.perezagr(marshal)
        vozmi string
        imp.perezagr(string)
        ## vozmi sys
        ## sam.podtverdiVlechet(OshibkaImporta, perezagr, sys)


met test_main():
    testy = [
        ImportTests,
    ]
    probuy:
        vozmi _potok
    except OshibkaImporta:
        pass
    neto:
        testy.dobvk(ZamokTests)
    support.run_unittest(*testy)

da __imya__ == "__main__":
    test_main()
