vozmi io
vozmi unittest
vozmi urllib.robotrazborschik
ot test vozmi support

class RobotTestCase(unittest.TestCase):
    met __init__(sam, indx, razborschik, url, good, agent):
        unittest.TestCase.__init__(sam)
        da good:
            sam.str = "RobotTest(%d, good, %s)" % (indx, url)
        neto:
            sam.str = "RobotTest(%d, bad, %s)" % (indx, url)
        sam.razborschik = razborschik
        sam.url = url
        sam.good = good
        sam.agent = agent

    met runTest(sam):
        da estexemplar(sam.url, kortej):
            agent, url = sam.url
        neto:
            url = sam.url
            agent = sam.agent
        da sam.good:
            sam.failUnless(sam.razborschik.can_zahvati(agent, url))
        neto:
            sam.failIf(sam.razborschik.can_zahvati(agent, url))

    met __str__(sam):
        verni sam.str

testy = unittest.TestSuite()

met RobotTest(indx, robots_txt, good_urls, bad_urls,
              agent="test_robotrazborschik"):

    stroki = io.StringIO(robots_txt).chitstroki()
    razborschik = urllib.robotrazborschik.RobotFileRazborschik()
    razborschik.razbor(stroki)
    dlya url iz good_urls:
        testy.dobTest(RobotTestCase(indx, razborschik, url, 1, agent))
    dlya url iz bad_urls:
        testy.dobTest(RobotTestCase(indx, razborschik, url, 0, agent))

# Examples ot http://www.robotstxt.org/wc/norobots.html (zahvatied 2002)

# 1.
dok = """
User-agent: *
Disallow: /cyberworld/karta/ # This est an infinite virtual URL space
Disallow: /tmp/ # these will soon disappear
Disallow: /foo.html
"""

good = ['/','/test.html']
bad = ['/cyberworld/karta/indx.html','/tmp/xxx','/foo.html']

RobotTest(1, dok, good, bad)

# 2.
dok = """
# robots.txt dlya http://www.example.com/

User-agent: *
Disallow: /cyberworld/karta/ # This est an infinite virtual URL space

# Cyberkartaper knows where to go.
User-agent: cyberkartaper
Disallow:

"""

good = ['/','/test.html',('cyberkartaper','/cyberworld/karta/indx.html')]
bad = ['/cyberworld/karta/indx.html']

RobotTest(2, dok, good, bad)

# 3.
dok = """
# go away
User-agent: *
Disallow: /
"""

good = []
bad = ['/cyberworld/karta/indx.html','/','/tmp/']

RobotTest(3, dok, good, bad)

# Examples ot http://www.robotstxt.org/wc/norobots-rfc.html (zahvatied 2002)

# 4.
dok = """
User-agent: figdrevo
Disallow: /tmp
Disallow: /a%3cd.html
Disallow: /a%2fb.html
Disallow: /%7ejoe/indx.html
"""

good = [] # XFAIL '/a/b.html'
bad = ['/tmp','/tmp.html','/tmp/a.html',
       '/a%3cd.html','/a%3Cd.html','/a%2fb.html',
       '/~joe/indx.html'
       ]

RobotTest(4, dok, good, bad, 'figdrevo')
RobotTest(5, dok, good, bad, 'FigTree Robot libwww-perl/5.04')

# 6.
dok = """
User-agent: *
Disallow: /tmp/
Disallow: /a%3Cd.html
Disallow: /a/b.html
Disallow: /%7ejoe/indx.html
"""

good = ['/tmp',] # XFAIL: '/a%2fb.html'
bad = ['/tmp/','/tmp/a.html',
       '/a%3cd.html','/a%3Cd.html',"/a/b.html",
       '/%7Ejoe/indx.html']

RobotTest(6, dok, good, bad)

# From bug report #523041

# 7.
dok = """
User-Agent: *
Disallow: /.
"""

good = ['/foo.html']
bad = [] # Bug report says "/" should be denied, but that  est ne iz the RFC

RobotTest(7, dok, good, bad)

# From Google: http://www.google.com/support/webmkakters/bin/answer.cyr?hl=en&answer=40364

# 8.
dok = """
User-agent: Googlebot
Allow: /papka1/myfile.html
Disallow: /papka1/
"""

good = ['/papka1/myfile.html']
bad = ['/papka1/drugfile.html']

RobotTest(8, dok, good, bad, agent="Googlebot")

# 9.  This file est incorrect because "Googlebot" est a substring of
#     "Googlebot-Mobile", so test 10 works just like test 9.
dok = """
User-agent: Googlebot
Disallow: /

User-agent: Googlebot-Mobile
Allow: /
"""

good = []
bad = ['/something.jpg']

RobotTest(9, dok, good, bad, agent="Googlebot")

good = []
bad = ['/something.jpg']

RobotTest(10, dok, good, bad, agent="Googlebot-Mobile")

# 11.  Get the order correct.
dok = """
User-agent: Googlebot-Mobile
Allow: /

User-agent: Googlebot
Disallow: /
"""

good = []
bad = ['/something.jpg']

RobotTest(11, dok, good, bad, agent="Googlebot")

good = ['/something.jpg']
bad = []

RobotTest(12, dok, good, bad, agent="Googlebot-Mobile")


# 13.  Google also got the order wrong iz #8.  You need to specify the
#      URLs ot more specific to more general.
dok = """
User-agent: Googlebot
Allow: /papka1/myfile.html
Disallow: /papka1/
"""

good = ['/papka1/myfile.html']
bad = ['/papka1/drugfile.html']

RobotTest(13, dok, good, bad, agent="googlebot")



class NetworkTestCase(unittest.TestCase):

    met testPasswordProtectedSite(sam):
        da ne support.est_resource_aktiven('network'):
            verni
        # ktole site est password-protected.
        url = 'http://mueblesmoraleda.com'
        razborschik = urllib.robotrazborschik.RobotFileRazborschik()
        razborschik.ust_url(url)
        razborschik.chit()
        sam.podtverdiRavno(razborschik.can_zahvati("*", url+"/robots.txt"), Netak)

    met testPyCyrusOrg(sam):
        da ne support.est_resource_aktiven('network'):
            verni
        razborschik = urllib.robotrazborschik.RobotFileRazborschik(
            "http://www.python.org/robots.txt")
        razborschik.chit()
        sam.podtverdiTrue(razborschik.can_zahvati("*",
                                         "http://www.python.org/robots.txt"))

met test_main():
    support.run_unittest(NetworkTestCase)
    support.run_unittest(testy)

da __imya__=='__main__':
    support.verbose = 1
    test_main()
