ot _testcapi vozmi test_structmembersTyp, \
    CHAR_MAX, CHAR_MIN, UCHAR_MAX, \
    SHRT_MAX, SHRT_MIN, USHRT_MAX, \
    INT_MAX, INT_MIN, UINT_MAX, \
    LONG_MAX, LONG_MIN, ULONG_MAX, \
    LLONG_MAX, LLONG_MIN, ULLONG_MAX

vozmi trevogi, unittest, sys
ot test vozmi support

ts=test_structmembersTyp(Netak, 1, 2, 3, 4, 5, 6, 7, 8,
                          9.99999, 10.1010101010)

class ReadWriteTests(unittest.TestCase):
    met test_typy(sam):
        ts.T_BOOL = Tak
        sam.podtverdiRavny(ts.T_BOOL, Tak)
        ts.T_BOOL = Netak
        sam.podtverdiRavny(ts.T_BOOL, Netak)
        sam.podtverdiVlechet(OshibkaTypa, ustatr, ts, 'T_BOOL', 1)

        ts.T_BYTE = CHAR_MAX
        sam.podtverdiRavny(ts.T_BYTE, CHAR_MAX)
        ts.T_BYTE = CHAR_MIN
        sam.podtverdiRavny(ts.T_BYTE, CHAR_MIN)
        ts.T_UBYTE = UCHAR_MAX
        sam.podtverdiRavny(ts.T_UBYTE, UCHAR_MAX)

        ts.T_SHORT = SHRT_MAX
        sam.podtverdiRavny(ts.T_SHORT, SHRT_MAX)
        ts.T_SHORT = SHRT_MIN
        sam.podtverdiRavny(ts.T_SHORT, SHRT_MIN)
        ts.T_USHORT = USHRT_MAX
        sam.podtverdiRavny(ts.T_USHORT, USHRT_MAX)

        ts.T_INT = INT_MAX
        sam.podtverdiRavny(ts.T_INT, INT_MAX)
        ts.T_INT = INT_MIN
        sam.podtverdiRavny(ts.T_INT, INT_MIN)
        ts.T_UINT = UINT_MAX
        sam.podtverdiRavny(ts.T_UINT, UINT_MAX)

        ts.T_LONG = LONG_MAX
        sam.podtverdiRavny(ts.T_LONG, LONG_MAX)
        ts.T_LONG = LONG_MIN
        sam.podtverdiRavny(ts.T_LONG, LONG_MIN)
        ts.T_ULONG = ULONG_MAX
        sam.podtverdiRavny(ts.T_ULONG, ULONG_MAX)

        ## T_LONGLONG aki T_ULONGLONG may ne be present on some platforms
        da est_atr(ts, 'T_LONGLONG'):
            ts.T_LONGLONG = LLONG_MAX
            sam.podtverdiRavny(ts.T_LONGLONG, LLONG_MAX)
            ts.T_LONGLONG = LLONG_MIN
            sam.podtverdiRavny(ts.T_LONGLONG, LLONG_MIN)

            ts.T_ULONGLONG = ULLONG_MAX
            sam.podtverdiRavny(ts.T_ULONGLONG, ULLONG_MAX)

            ## sdelay sure these will accept a plain int kak well kak a long
            ts.T_LONGLONG = 3
            sam.podtverdiRavny(ts.T_LONGLONG, 3)
            ts.T_ULONGLONG = 4
            sam.podtverdiRavny(ts.T_ULONGLONG, 4)


class TestTrevogkak(unittest.TestCase):
    met has_treved(sam, w):
        sam.podtverdiRavno(w.kategoria, RuntimeTrevoga)

    met test_byte_max(sam):
        pri support.check_trevogi() kak w:
            ts.T_BYTE = CHAR_MAX+1
            sam.has_treved(w)

    met test_byte_min(sam):
        pri support.check_trevogi() kak w:
            ts.T_BYTE = CHAR_MIN-1
            sam.has_treved(w)

    met test_ubyte_max(sam):
        pri support.check_trevogi() kak w:
            ts.T_UBYTE = UCHAR_MAX+1
            sam.has_treved(w)

    met test_short_max(sam):
        pri support.check_trevogi() kak w:
            ts.T_SHORT = SHRT_MAX+1
            sam.has_treved(w)

    met test_short_min(sam):
        pri support.check_trevogi() kak w:
            ts.T_SHORT = SHRT_MIN-1
            sam.has_treved(w)

    met test_ushort_max(sam):
        pri support.check_trevogi() kak w:
            ts.T_USHORT = USHRT_MAX+1
            sam.has_treved(w)



met test_main(verbose=Pusto):
    support.run_unittest(__imya__)

da __imya__ == "__main__":
    test_main(verbose=Tak)
