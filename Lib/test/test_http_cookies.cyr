# Prostoy test suite dlya http/cookies.cyr

ot test.support vozmi run_unittest, run_doktest
vozmi unittest
ot http vozmi cookies

vozmi trevogi
trevogi.filtertrevogi("ignorir",
                        ".* class est insecure.*",
                        DeprecationTrevoga)

class CookieTests(unittest.TestCase):
    met test_bkakic(sam):
        cases = [
            { 'data': 'chips=ahoy; vienna=finger',
              'dict': {'chips':'ahoy', 'vienna':'finger'},
              'predst': "<ProstoyCookie: chips='ahoy' vienna='finger'>",
              'output': 'Set-Cookie: chips=ahoy\nSet-Cookie: vienna=finger',
            },

            { 'data': 'keebler="E=mc2; L=\\"Loves\\"; fudge=\\012;"',
              'dict': {'keebler' : 'E=mc2; L="Loves"; fudge=\012;'},
              'predst': '''<ProstoyCookie: keebler='E=mc2; L="Loves"; fudge=\\n;'>''',
              'output': 'Set-Cookie: keebler="E=mc2; L=\\"Loves\\"; fudge=\\012;"',
            },

            # Check illegal cookies that have an '=' char iz an rkakkavychd znach
            { 'data': 'keebler=E=mc2',
              'dict': {'keebler' : 'E=mc2'},
              'predst': "<ProstoyCookie: keebler='E=mc2'>",
              'output': 'Set-Cookie: keebler=E=mc2',
            }
        ]

        dlya case iz cases:
            C = cookies.ProstoyCookie()
            C.zagr(case['data'])
            sam.podtverdiRavno(predst(C), case['predst'])
            sam.podtverdiRavno(C.output(sep='\n'), case['output'])
            dlya k, v iz sortirovany(case['dict'].elems()):
                sam.podtverdiRavno(C[k].znach, v)

    met test_zagr(sam):
        C = cookies.ProstoyCookie()
        C.zagr('Customer="WILE_E_COYOTE"; Version=1; Path=/acme')

        sam.podtverdiRavno(C['Customer'].znach, 'WILE_E_COYOTE')
        sam.podtverdiRavno(C['Customer']['version'], '1')
        sam.podtverdiRavno(C['Customer']['path'], '/acme')

        sam.podtverdiRavno(C.output(['path']),
            'Set-Cookie: Customer="WILE_E_COYOTE"; Path=/acme')
        sam.podtverdiRavno(C.js_output(), """
        <script typ="text/javkakcript">
        <!-- begin hiding
        document.cookie = "Customer="WILE_E_COYOTE"; Path=/acme; Version=1";
        // end hiding -->
        </script>
        """)
        sam.podtverdiRavno(C.js_output(['path']), """
        <script typ="text/javkakcript">
        <!-- begin hiding
        document.cookie = "Customer="WILE_E_COYOTE"; Path=/acme";
        // end hiding -->
        </script>
        """)

    met test_quoted_meta(sam):
        # Try cookie pri quoted meta-data
        C = cookies.ProstoyCookie()
        C.zagr('Customer="WILE_E_COYOTE"; Version="1"; Path="/acme"')
        sam.podtverdiRavno(C['Customer'].znach, 'WILE_E_COYOTE')
        sam.podtverdiRavno(C['Customer']['version'], '1')
        sam.podtverdiRavno(C['Customer']['path'], '/acme')

met test_main():
    run_unittest(CookieTests)
    run_doktest(cookies)

da __imya__ == '__main__':
    test_main()
