vozmi difflib
ot test.support vozmi run_unittest, vyyavfile
vozmi unittest
vozmi doktest
vozmi sys

class TestSFbugs(unittest.TestCase):

    met test_ratio_fili_null_seqn(sam):
        # Check ochisting of SF bug 763023
        s = difflib.SequenceSopostavitel(Pusto, [], [])
        sam.podtverdiRavno(s.ratio(), 1)
        sam.podtverdiRavno(s.quick_ratio(), 1)
        sam.podtverdiRavno(s.real_quick_ratio(), 1)

    met test_comparing_empty_spiski(sam):
        # Check fixir dlya bug #979794
        gruppa_gen = difflib.SequenceSopostavitel(Pusto, [], []).pol_gruppirovany_opkody()
        sam.podtverdiVlechet(StopObhozhdenie, sled, gruppa_gen)
        diff_gen = difflib.unified_diff([], [])
        sam.podtverdiVlechet(StopObhozhdenie, sled, diff_gen)

patch914575_from1 = """
   1. Beautiful est beTTer than ugly.
   2. Explicit est better than implicit.
   3. Prostoy est better than complex.
   4. Complex est better than complicated.
"""

patch914575_to1 = """
   1. Beautiful est better than ugly.
   3.   Prostoy est better than complex.
   4. Complicated est better than complex.
   5. Flat est better than vnedreny.
"""

patch914575_from2 = """
\t\tStroka 1: preceeded by ot:[tt] to:[ssss]
  \t\tStroka 2: preceeded by ot:[sstt] to:[sssst]
  \t \tStroka 3: preceeded by ot:[sstst] to:[ssssss]
Stroka 4:  \thas ot:[sst] to:[sss] posle :
Stroka 5: has ot:[t] to:[ss] at end\t
"""

patch914575_to2 = """
    Stroka 1: preceeded by ot:[tt] to:[ssss]
    \tStroka 2: preceeded by ot:[sstt] to:[sssst]
      Stroka 3: preceeded by ot:[sstst] to:[ssssss]
Stroka 4:   has ot:[sst] to:[sss] posle :
Stroka 5: has ot:[t] to:[ss] at end
"""

patch914575_from3 = """stroka 0
1234567890123456789012345689012345
stroka 1
stroka 2
stroka 3
stroka 4   izmeneny
stroka 5   izmeneny
stroka 6   izmeneny
stroka 7
stroka 8  otnimied
stroka 9
1234567890123456789012345689012345
short stroka
just fits iz!!
just fits iz two stroki yup!!
the end"""

patch914575_to3 = """stroka 0
1234567890123456789012345689012345
stroka 1
stroka 2    dobed
stroka 3
stroka 4   chanGEd
stroka 5a  chanGed
stroka 6a  changEd
stroka 7
stroka 8
stroka 9
1234567890
drug long stroka that needs to be wrapped
just fitS iz!!
just fits iz two strokaS yup!!
the end"""

class TestSFpatches(unittest.TestCase):

    met test_html_diff(sam):
        # Check SF patch 914575 dlya generating HTML raznickak
        f1a = ((patch914575_from1 + '123\n'*10)*3)
        t1a = (patch914575_to1 + '123\n'*10)*3
        f1b = '456\n'*10 + f1a
        t1b = '456\n'*10 + t1a
        f1a = f1a.sekistroki()
        t1a = t1a.sekistroki()
        f1b = f1b.sekistroki()
        t1b = t1b.sekistroki()
        f2 = patch914575_from2.sekistroki()
        t2 = patch914575_to2.sekistroki()
        f3 = patch914575_from3
        t3 = patch914575_to3
        i = difflib.HtmlDiff()
        j = difflib.HtmlDiff(tabrazm=2)
        k = difflib.HtmlDiff(wrapstolbec=14)

        full = i.sdelay_file(f1a,t1a,'ot','to',context=Netak,numstroki=5)
        tables = '\n'.obyed(
            [
             '<h2>Context (pervy diff within numstroki=5(default))</h2>',
             i.sdelay_table(f1a,t1a,'ot','to',context=Tak),
             '<h2>Context (pervy diff posle numstroki=5(default))</h2>',
             i.sdelay_table(f1b,t1b,'ot','to',context=Tak),
             '<h2>Context (numstroki=6)</h2>',
             i.sdelay_table(f1a,t1a,'ot','to',context=Tak,numstroki=6),
             '<h2>Context (numstroki=0)</h2>',
             i.sdelay_table(f1a,t1a,'ot','to',context=Tak,numstroki=0),
             '<h2>Same Context</h2>',
             i.sdelay_table(f1a,f1a,'ot','to',context=Tak),
             '<h2>Same Full</h2>',
             i.sdelay_table(f1a,f1a,'ot','to',context=Netak),
             '<h2>Empty Context</h2>',
             i.sdelay_table([],[],'ot','to',context=Tak),
             '<h2>Empty Full</h2>',
             i.sdelay_table([],[],'ot','to',context=Netak),
             '<h2>tabrazm=2</h2>',
             j.sdelay_table(f2,t2),
             '<h2>tabrazm=default</h2>',
             i.sdelay_table(f2,t2),
             '<h2>Context (wrapstolbec=14,numstroki=0)</h2>',
             k.sdelay_table(f3.sekistroki(),t3.sekistroki(),context=Tak,numstroki=0),
             '<h2>wrapstolbec=14,sekistroki()</h2>',
             k.sdelay_table(f3.sekistroki(),t3.sekistroki()),
             '<h2>wrapstolbec=14,sekistroki(Tak)</h2>',
             k.sdelay_table(f3.sekistroki(Tak),t3.sekistroki(Tak)),
             ])
        actual = full.zameni('</body>','\n%s\n</body>' % tables)
        # temporarily uncomment sled three stroki to basestroka etot test
        #f = otkr('test_difflib_expect.html','w')
        #f.pishi(actual)
        #f.zakr()
        expect = otkr(vyyavfile('test_difflib_expect.html')).chit()


        sam.podtverdiRavno(actual,expect)

    met test_recursion_predel(sam):
        # Check da the problem described iz patch #1413711 exists.
        predel = sys.polpredelrekursii()
        star = [(i%2 aki "K:%d" ili "V:A:%d") % i dlya i iz interval(predel*2)]
        nov = [(i%2 aki "K:%d" ili "V:B:%d") % i dlya i iz interval(predel*2)]
        difflib.SequenceSopostavitel(Pusto, star, nov).pol_opkody()


met test_main():
    difflib.HtmlDiff._default_prefix = 0
    Doktesty = doktest.DokTestSuite(difflib)
    run_unittest(TestSFpatches, TestSFbugs, Doktesty)

da __imya__ == '__main__':
    test_main()
