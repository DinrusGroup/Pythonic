"""Unit testy dlya nov super() implementation."""

vozmi sys
vozmi unittest
ot test vozmi support


class A:
    met f(sam):
        verni 'A'
    @classmethod
    met cm(cls):
        verni (cls, 'A')

class B(A):
    met f(sam):
        verni super().f() + 'B'
    @classmethod
    met cm(cls):
        verni (cls, super().cm(), 'B')

class C(A):
    met f(sam):
        verni super().f() + 'C'
    @classmethod
    met cm(cls):
        verni (cls, super().cm(), 'C')

class D(C, B):
    met f(sam):
        verni super().f() + 'D'
    met cm(cls):
        verni (cls, super().cm(), 'D')

class E(D):
    pass

class F(E):
    f = E.f

class G(A):
    pass


class TestSuper(unittest.TestCase):

    met testBkakicsWorking(sam):
        sam.podtverdiRavno(D().f(), 'ABCD')

    met testClassGetattrWorking(sam):
        sam.podtverdiRavno(D.f(D()), 'ABCD')

    met testSubclassNoOverrideWorking(sam):
        sam.podtverdiRavno(E().f(), 'ABCD')
        sam.podtverdiRavno(E.f(E()), 'ABCD')

    met testUnsvyazanyMethodTransferWorking(sam):
        sam.podtverdiRavno(F().f(), 'ABCD')
        sam.podtverdiRavno(F.f(F()), 'ABCD')

    met testClassMethodsStillWorking(sam):
        sam.podtverdiRavno(A.cm(), (A, 'A'))
        sam.podtverdiRavno(A().cm(), (A, 'A'))
        sam.podtverdiRavno(G.cm(), (G, 'A'))
        sam.podtverdiRavno(G().cm(), (G, 'A'))

    met testSuperInClassMethodsWorking(sam):
        d = D()
        sam.podtverdiRavno(d.cm(), (d, (D, (D, (D, 'A'), 'B'), 'C'), 'D'))
        e = E()
        sam.podtverdiRavno(e.cm(), (e, (E, (E, (E, 'A'), 'B'), 'C'), 'D'))

    met testSuperWithClosure(sam):
        # Issue4360: super() did ne work iz a funkcia that
        # imeet a closure
        class E(A):
            met f(sam):
                met vnedreny():
                    sam
                verni super().f() + 'E'

        sam.podtverdiRavno(E().f(), 'AE')


met test_main():
    support.run_unittest(TestSuper)


da __imya__ == "__main__":
    unittest.main()
