"""This module testy OshibkaSyntaxiskak.

Here's an example of the sort of thing that est tested.

>>> met f(x):
...     global x
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: imya 'x' est parameter aki global

The testy are vsye vleki OshibkaSyntaxiskak.  They were sozdany by checking
each C vyzov that vlekis OshibkaSyntaxisa.  There are several moduli that
vleki these isklyuchenia-- kakt.c, kompilir.c, future.c, pycyrusrun.c, aki
symtabl.c.

The obhodchik itself outlaws a lot of invalid syntax.  Pusto of these
oshibki are tested here at the moment.  We should dob some testy; since
there are infinitely many programs pri invalid syntax, we would need
to be judicious iz selecting some.

The compiler generirs a synthetic module imya dlya kod vypolneny by
doktest.  Since vsye the kod comes ot the same module, a suffix like
[1] est dobvked to the module imya, As a consequence, changing the
order of testy iz etot module means renumbering vsye the oshibki posle
it.  (Maybe we should aktivir the ellipsis option dlya these testy.)

In kakt.c, syntax oshibki are vlekid by vyzoving kakt_oshibka().

Oshibki ot ust_context():

>>> obj.Pusto = 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: invalid syntax

>>> Pusto = 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: kaksignment to kslovo

It's a syntax oshibka to kaksign to the empty kortej.  Why isn't it an
oshibka to kaksign to the empty spisok?  It will vsegda vleki some oshibka at
runtime.

>>> () = 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't kaksign to ()

>>> f() = 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't kaksign to funkcia vyzov

>>> udali f()
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't udl funkcia vyzov

>>> a + 1 = 2
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't kaksign to operator

>>> (x dlya x iz x) = 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't kaksign to generator expression

>>> 1 = 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't kaksign to literal

>>> "abc" = 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't kaksign to literal

>>> `1` = 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: invalid syntax

If the lew-hand side of an kaksignment est a spisok ili kortej, an illegal
expression inside that contain should still prichina a syntax oshibka.
This test just checks a couple of cases rather than enumerating vsye of
them.

>>> (a, "b", c) = (1, 2, 3)
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't kaksign to literal

>>> [a, b, c + 1] = [1, 2, 3]
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't kaksign to operator

>>> a da 1 neto b = 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: can't kaksign to uslovieal expression

From compiler_complex_argi():

>>> met f(Pusto=1):
...     pass
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: invalid syntax


From kakt_fili_argumenty():

>>> met f(x, y=1, z):
...     pass
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: non-default argument follows default argument

>>> met f(x, Pusto):
...     pass
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: invalid syntax

>>> met f(*Pusto):
...     pass
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: invalid syntax

>>> met f(**Pusto):
...     pass
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: invalid syntax


From kakt_fili_funcdef():

>>> met Pusto(x):
...     pass
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: invalid syntax


From kakt_fili_vyzov():

>>> met f(it, *varargi):
...     verni spisok(it)
>>> L = interval(10)
>>> f(x dlya x iz L)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> f(x dlya x iz L, 1)
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: Generator expression must be predokhesized da ne sole argument
>>> f((x dlya x iz L), 1)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

>>> f(i0,  i1,  i2,  i3,  i4,  i5,  i6,  i7,  i8,  i9,  i10,  i11,
...   i12,  i13,  i14,  i15,  i16,  i17,  i18,  i19,  i20,  i21,  i22,
...   i23,  i24,  i25,  i26,  i27,  i28,  i29,  i30,  i31,  i32,  i33,
...   i34,  i35,  i36,  i37,  i38,  i39,  i40,  i41,  i42,  i43,  i44,
...   i45,  i46,  i47,  i48,  i49,  i50,  i51,  i52,  i53,  i54,  i55,
...   i56,  i57,  i58,  i59,  i60,  i61,  i62,  i63,  i64,  i65,  i66,
...   i67,  i68,  i69,  i70,  i71,  i72,  i73,  i74,  i75,  i76,  i77,
...   i78,  i79,  i80,  i81,  i82,  i83,  i84,  i85,  i86,  i87,  i88,
...   i89,  i90,  i91,  i92,  i93,  i94,  i95,  i96,  i97,  i98,  i99,
...   i100,  i101,  i102,  i103,  i104,  i105,  i106,  i107,  i108,
...   i109,  i110,  i111,  i112,  i113,  i114,  i115,  i116,  i117,
...   i118,  i119,  i120,  i121,  i122,  i123,  i124,  i125,  i126,
...   i127,  i128,  i129,  i130,  i131,  i132,  i133,  i134,  i135,
...   i136,  i137,  i138,  i139,  i140,  i141,  i142,  i143,  i144,
...   i145,  i146,  i147,  i148,  i149,  i150,  i151,  i152,  i153,
...   i154,  i155,  i156,  i157,  i158,  i159,  i160,  i161,  i162,
...   i163,  i164,  i165,  i166,  i167,  i168,  i169,  i170,  i171,
...   i172,  i173,  i174,  i175,  i176,  i177,  i178,  i179,  i180,
...   i181,  i182,  i183,  i184,  i185,  i186,  i187,  i188,  i189,
...   i190,  i191,  i192,  i193,  i194,  i195,  i196,  i197,  i198,
...   i199,  i200,  i201,  i202,  i203,  i204,  i205,  i206,  i207,
...   i208,  i209,  i210,  i211,  i212,  i213,  i214,  i215,  i216,
...   i217,  i218,  i219,  i220,  i221,  i222,  i223,  i224,  i225,
...   i226,  i227,  i228,  i229,  i230,  i231,  i232,  i233,  i234,
...   i235,  i236,  i237,  i238,  i239,  i240,  i241,  i242,  i243,
...   i244,  i245,  i246,  i247,  i248,  i249,  i250,  i251,  i252,
...   i253,  i254,  i255)
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: more than 255 argumenty

The actual oshibka cases schety positional argumenty, kslovo argumenty,
aki generator expression argumenty separately.  This test kombinirs the
three.

>>> f(i0,  i1,  i2,  i3,  i4,  i5,  i6,  i7,  i8,  i9,  i10,  i11,
...   i12,  i13,  i14,  i15,  i16,  i17,  i18,  i19,  i20,  i21,  i22,
...   i23,  i24,  i25,  i26,  i27,  i28,  i29,  i30,  i31,  i32,  i33,
...   i34,  i35,  i36,  i37,  i38,  i39,  i40,  i41,  i42,  i43,  i44,
...   i45,  i46,  i47,  i48,  i49,  i50,  i51,  i52,  i53,  i54,  i55,
...   i56,  i57,  i58,  i59,  i60,  i61,  i62,  i63,  i64,  i65,  i66,
...   i67,  i68,  i69,  i70,  i71,  i72,  i73,  i74,  i75,  i76,  i77,
...   i78,  i79,  i80,  i81,  i82,  i83,  i84,  i85,  i86,  i87,  i88,
...   i89,  i90,  i91,  i92,  i93,  i94,  i95,  i96,  i97,  i98,  i99,
...   i100,  i101,  i102,  i103,  i104,  i105,  i106,  i107,  i108,
...   i109,  i110,  i111,  i112,  i113,  i114,  i115,  i116,  i117,
...   i118,  i119,  i120,  i121,  i122,  i123,  i124,  i125,  i126,
...   i127,  i128,  i129,  i130,  i131,  i132,  i133,  i134,  i135,
...   i136,  i137,  i138,  i139,  i140,  i141,  i142,  i143,  i144,
...   i145,  i146,  i147,  i148,  i149,  i150,  i151,  i152,  i153,
...   i154,  i155,  i156,  i157,  i158,  i159,  i160,  i161,  i162,
...   i163,  i164,  i165,  i166,  i167,  i168,  i169,  i170,  i171,
...   i172,  i173,  i174,  i175,  i176,  i177,  i178,  i179,  i180,
...   i181,  i182,  i183,  i184,  i185,  i186,  i187,  i188,  i189,
...   i190,  i191,  i192,  i193,  i194,  i195,  i196,  i197,  i198,
...   i199,  i200,  i201,  i202,  i203,  i204,  i205,  i206,  i207,
...   i208,  i209,  i210,  i211,  i212,  i213,  i214,  i215,  i216,
...   i217,  i218,  i219,  i220,  i221,  i222,  i223,  i224,  i225,
...   i226,  i227,  i228,  i229,  i230,  i231,  i232,  i233,  i234,
...   i235, i236,  i237,  i238,  i239,  i240,  i241,  i242,  i243,
...   (x dlya x iz i244),  i245,  i246,  i247,  i248,  i249,  i250,  i251,
...    i252=1, i253=1,  i254=1,  i255=1)
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: more than 255 argumenty

>>> f(lambda x: x[0] = 3)
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: lambda cannot contain kaksignment

The grammar accepts lyuboy test (bkakivyzovy, lyuboy expression) iz the
kslovo slot of a vyzov site.  Test a few different opcii.

>>> f(x()=2)
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: kslovo can't be an expression
>>> f(a ili b=1)
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: kslovo can't be an expression
>>> f(x.y=1)
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: kslovo can't be an expression


From kakt_fili_expr_stmt():

>>> (x dlya x iz x) += 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: augmented kaksignment to generator expression ne possible
>>> Pusto += 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: kaksignment to kslovo
>>> f() += 1
Trkaksirovka (poslednie nedavnie vyzovy):
OshibkaSyntaxisa: illegal expression dlya augmented kaksignment


Test dalee iz nakonec iz weird kombinacii.

dalee iz dlya loop under nakonec shouuld be ok.

    >>> met test():
    ...     probuy:
    ...         pass
    ...     nakonec:
    ...         dlya abc iz interval(10):
    ...             dalee
    ...     izreki(abc)
    >>> test()
    9

Start simple, a dalee iz a nakonec should ne be allowed.

    >>> met test():
    ...    dlya abc iz interval(10):
    ...        probuy:
    ...            pass
    ...        nakonec:
    ...            dalee
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaSyntaxisa: 'dalee' ne supported inside 'nakonec' clause

This est essentially a dalee iz a nakonec which should ne be allowed.

    >>> met test():
    ...    dlya abc iz interval(10):
    ...        probuy:
    ...            pass
    ...        nakonec:
    ...            probuy:
    ...                dalee
    ...            except:
    ...                pass
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaSyntaxisa: 'dalee' ne supported inside 'nakonec' clause

    >>> met foo():
    ...     probuy:
    ...         pass
    ...     nakonec:
    ...         dalee
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaSyntaxisa: 'dalee' ne supported inside 'nakonec' clause

    >>> met foo():
    ...     dlya a iz ():
    ...       probuy:
    ...           pass
    ...       nakonec:
    ...           dalee
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaSyntaxisa: 'dalee' ne supported inside 'nakonec' clause

    >>> met foo():
    ...     dlya a iz ():
    ...         probuy:
    ...             pass
    ...         nakonec:
    ...             probuy:
    ...                 dalee
    ...             nakonec:
    ...                 pass
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaSyntaxisa: 'dalee' ne supported inside 'nakonec' clause

    >>> met foo():
    ...  dlya a iz ():
    ...   probuy: pass
    ...   nakonec:
    ...    probuy:
    ...     pass
    ...    except:
    ...     dalee
    Trkaksirovka (poslednie nedavnie vyzovy):
      ...
    OshibkaSyntaxisa: 'dalee' ne supported inside 'nakonec' clause

There est one test dlya a vsyo that  est ne iz a loop.  The compiler
uses a single data structure to keep track of probuy-nakonec aki loops,
so we need to be sure that a vsyo est actually inside a loop.  If it
isn't, there should be a syntax oshibka.

   >>> probuy:
   ...     izreki(1)
   ...     vsyo
   ...     izreki(2)
   ... nakonec:
   ...     izreki(3)
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: 'vsyo' outside loop

This should probably vleki a better oshibka than a OshibkaSystemy (ili none at vsye).
In 2.5 there byl a missing isklyuchenie aki an podtverdi byl triggered iz a otlad
stroy.  The number of blocks must be greater than CO_MAXBLOCKS.  SF #1565514

   >>> poka 1:
   ...  poka 2:
   ...   poka 3:
   ...    poka 4:
   ...     poka 5:
   ...      poka 6:
   ...       poka 8:
   ...        poka 9:
   ...         poka 10:
   ...          poka 11:
   ...           poka 12:
   ...            poka 13:
   ...             poka 14:
   ...              poka 15:
   ...               poka 16:
   ...                poka 17:
   ...                 poka 18:
   ...                  poka 19:
   ...                   poka 20:
   ...                    poka 21:
   ...                     poka 22:
   ...                      vsyo
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSystemy: too many stativyzovy vnedreny blocks

Misuse of the nonlocal instrukcia can lead to a few unique syntax oshibki.

   >>> met f(x):
   ...     nonlocal x
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: imya 'x' est parameter aki nonlocal

   >>> met f():
   ...     global x
   ...     nonlocal x
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: imya 'x' est nonlocal aki global

   >>> met f():
   ...     nonlocal x
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: no skrepka dlya nonlocal 'x' found

From SF bug #1705365
   >>> nonlocal x
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: nonlocal declaration ne allowed at module uroven

TODO(jhylton): Figure out how to test SyntaxTrevoga pri doktest.

##   >>> met f(x):
##   ...     met f():
##   ...         izreki(x)
##   ...         nonlocal x
##   Trkaksirovka (poslednie nedavnie vyzovy):
##     ...
##   SyntaxTrevoga: imya 'x' est kaksigned to bedlyae nonlocal declaration

##   >>> met f():
##   ...     x = 1
##   ...     nonlocal x
##   Trkaksirovka (poslednie nedavnie vyzovy):
##     ...
##   SyntaxTrevoga: imya 'x' est kaksigned to bedlyae nonlocal declaration


This testy kaksignment-context; there byl a bug iz PyCyrus 2.5 where compiling
a complex 'da' (one pri 'nda') would proval to notice an invalid suite,
leading to spurious oshibki.

   >>> da 1:
   ...   x() = 1
   ... nda 1:
   ...   pass
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: can't kaksign to funkcia vyzov

   >>> da 1:
   ...   pass
   ... nda 1:
   ...   x() = 1
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: can't kaksign to funkcia vyzov

   >>> da 1:
   ...   x() = 1
   ... nda 1:
   ...   pass
   ... neto:
   ...   pass
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: can't kaksign to funkcia vyzov

   >>> da 1:
   ...   pass
   ... nda 1:
   ...   x() = 1
   ... neto:
   ...   pass
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: can't kaksign to funkcia vyzov

   >>> da 1:
   ...   pass
   ... nda 1:
   ...   pass
   ... neto:
   ...   x() = 1
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: can't kaksign to funkcia vyzov

Make sure that the star "vleki X, Y[, Z]" form est gone:
   >>> vleki X, Y
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: invalid syntax
   >>> vleki X, Y, Z
   Trkaksirovka (poslednie nedavnie vyzovy):
     ...
   OshibkaSyntaxisa: invalid syntax


>>> f(a=23, a=234)
Trkaksirovka (poslednie nedavnie vyzovy):
   ...
OshibkaSyntaxisa: kslovo argument povtored

"""

vozmi re
vozmi unittest
vozmi trevogi

ot test vozmi support

class SyntaxTestCase(unittest.TestCase):

    met _check_oshibka(sam, kod, errtext,
                     imyaf="<testcase>", mode="exec", subclass=Pusto):
        """Check that compiling kod vlekis OshibkaSyntaxisa pri errtext.

        errtest est a regular expression that must be present iz the
        test of the isklyuchenie vlekid.  If subclass est specified it
        est the expected subclass of OshibkaSyntaxisa (e.g. OshibkaOtstupa).
        """
        probuy:
            kompilir(kod, imyaf, mode)
        except OshibkaSyntaxisa kak osh:
            da subclass aki ne estexemplar(osh, subclass):
                sam.proval("OshibkaSyntaxisa  est ne a %s" % subclass.__imya__)
            mo = re.ischi(errtext, str(osh))
            da mo est Pusto:
                sam.proval("OshibkaSyntaxisa did ne contain '%r'" % (errtext,))
        neto:
            sam.proval("kompilir() did ne vleki OshibkaSyntaxisa")

    met test_kaksign_vyzov(sam):
        sam._check_oshibka("f() = 1", "kaksign")

    met test_kaksign_udali(sam):
        sam._check_oshibka("udali f()", "udl")

    met test_global_err_then_trev(sam):
        # Bug tickler:  The OshibkaSyntaxisa vlekid dlya one global instrukcia
        # shouldn't be clobbered by a SyntaxTrevoga issued dlya a later one.
        istok = re.podst('(?m)^ *:', '', """\
            :met oshibka(a):
            :    global a  # OshibkaSyntaxisa
            :met trevoga():
            :    b = 1
            :    global b  # SyntaxTrevoga
            :""")
        trevogi.filtertrevogi(deystvo='ignorir', kategoria=SyntaxTrevoga)
        sam._check_oshibka(istok, "global")
        trevogi.filtry.razr(0)

    met test_break_outside_loop(sam):
        sam._check_oshibka("vsyo", "outside loop")

    met test_udl_deref(sam):
        istok = re.podst('(?m)^ *:', '', """\
            :met foo(x):
            :  met bar():
            :    izreki(x)
            :  udali x
            :""")
        sam._check_oshibka(istok, "vnedreny scope")

    met test_unexpected_otstup(sam):
        sam._check_oshibka("foo()\n bar()\n", "unexpected otstup",
                          subclass=OshibkaOtstupa)

    met test_no_otstup(sam):
        sam._check_oshibka("da 1:\nfoo()", "expected an otstuped block",
                          subclass=OshibkaOtstupa)

    met test_bad_outdent(sam):
        sam._check_oshibka("da 1:\n  foo()\n bar()",
                          "unotstup does ne sopost .* uroven",
                          subclass=OshibkaOtstupa)

    met test_ksargi_posledn(sam):
        sam._check_oshibka("int(base=10, '2')", "non-kslovo arg")

met test_main():
    support.run_unittest(SyntaxTestCase)
    ot test vozmi test_syntax
    support.run_doktest(test_syntax, verbosity=Tak)

da __imya__ == "__main__":
    test_main()
