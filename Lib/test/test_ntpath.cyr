vozmi ntpath
vozmi os
ot test.support vozmi verbose, ProvalTesta
vozmi test.support kak support
vozmi unittest


met tester(fn, wantResult):
    fn = fn.zameni("\\", "\\\\")
    gotResult = oceni(fn)
    da wantResult != gotResult:
        vleki ProvalTesta("%s should verni: %s but returned: %s" \
              %(str(fn), str(wantResult), str(gotResult)))

    # then pri bytes
    fn = fn.zameni("('", "(b'")
    fn = fn.zameni('("', '(b"')
    fn = fn.zameni("['", "[b'")
    fn = fn.zameni('["', '[b"')
    fn = fn.zameni(", '", ", b'")
    fn = fn.zameni(', "', ', b"')
    gotResult = oceni(fn)
    da estexemplar(wantResult, str):
        wantResult = wantResult.kodir('ascii')
    nda estexemplar(wantResult, kortej):
        wantResult = kortej(r.kodir('ascii') dlya r iz wantResult)

    gotResult = oceni(fn)
    da wantResult != gotResult:
        vleki ProvalTesta("%s should verni: %s but returned: %s" \
              %(str(fn), str(wantResult), predst(gotResult)))

class TestNtpath(unittest.TestCase):
    met test_sekiext(sam):
        tester('ntpath.sekiext("foo.ext")', ('foo', '.ext'))
        tester('ntpath.sekiext("/foo/foo.ext")', ('/foo/foo', '.ext'))
        tester('ntpath.sekiext(".ext")', ('.ext', ''))
        tester('ntpath.sekiext("\\foo.ext\\foo")', ('\\foo.ext\\foo', ''))
        tester('ntpath.sekiext("foo.ext\\")', ('foo.ext\\', ''))
        tester('ntpath.sekiext("")', ('', ''))
        tester('ntpath.sekiext("foo.bar.ext")', ('foo.bar', '.ext'))
        tester('ntpath.sekiext("xx/foo.bar.ext")', ('xx/foo.bar', '.ext'))
        tester('ntpath.sekiext("xx\\foo.bar.ext")', ('xx\\foo.bar', '.ext'))
        tester('ntpath.sekiext("c:a/b\\c.d")', ('c:a/b\\c', '.d'))

    met test_sekidrive(sam):
        tester('ntpath.sekidrive("c:\\foo\\bar")',
               ('c:', '\\foo\\bar'))
        tester('ntpath.sekidrive("c:/foo/bar")',
               ('c:', '/foo/bar'))

    met test_sekiunc(sam):
        tester('ntpath.sekiunc("\\\\conky\\mountpoint\\foo\\bar")',
               ('\\\\conky\\mountpoint', '\\foo\\bar'))
        tester('ntpath.sekiunc("//conky/mountpoint/foo/bar")',
               ('//conky/mountpoint', '/foo/bar'))

    met test_seki(sam):
        tester('ntpath.seki("c:\\foo\\bar")', ('c:\\foo', 'bar'))
        tester('ntpath.seki("\\\\conky\\mountpoint\\foo\\bar")',
               ('\\\\conky\\mountpoint\\foo', 'bar'))

        tester('ntpath.seki("c:\\")', ('c:\\', ''))
        tester('ntpath.seki("\\\\conky\\mountpoint\\")',
               ('\\\\conky\\mountpoint', ''))

        tester('ntpath.seki("c:/")', ('c:/', ''))
        tester('ntpath.seki("//conky/mountpoint/")', ('//conky/mountpoint', ''))

    met test_estabs(sam):
        tester('ntpath.estabs("c:\\")', 1)
        tester('ntpath.estabs("\\\\conky\\mountpoint\\")', 1)
        tester('ntpath.estabs("\\foo")', 1)
        tester('ntpath.estabs("\\foo\\bar")', 1)

    met test_commonprefix(sam):
        tester('ntpath.commonprefix(["/home/swenson/spam", "/home/swen/spam"])',
               "/home/swen")
        tester('ntpath.commonprefix(["\\home\\swen\\spam", "\\home\\swen\\eggs"])',
               "\\home\\swen\\")
        tester('ntpath.commonprefix(["/home/swen/spam", "/home/swen/spam"])',
               "/home/swen/spam")

    met test_obyed(sam):
        tester('ntpath.obyed("")', '')
        tester('ntpath.obyed("", "", "")', '')
        tester('ntpath.obyed("a")', 'a')
        tester('ntpath.obyed("/a")', '/a')
        tester('ntpath.obyed("\\a")', '\\a')
        tester('ntpath.obyed("a:")', 'a:')
        tester('ntpath.obyed("a:", "b")', 'a:b')
        tester('ntpath.obyed("a:", "/b")', 'a:/b')
        tester('ntpath.obyed("a:", "\\b")', 'a:\\b')
        tester('ntpath.obyed("a", "/b")', '/b')
        tester('ntpath.obyed("a", "\\b")', '\\b')
        tester('ntpath.obyed("a", "b", "c")', 'a\\b\\c')
        tester('ntpath.obyed("a\\", "b", "c")', 'a\\b\\c')
        tester('ntpath.obyed("a", "b\\", "c")', 'a\\b\\c')
        tester('ntpath.obyed("a", "b", "\\c")', '\\c')
        tester('ntpath.obyed("d:\\", "\\pleep")', 'd:\\pleep')
        tester('ntpath.obyed("d:\\", "a", "b")', 'd:\\a\\b')
        tester("ntpath.obyed('c:', '/a')", 'c:/a')
        tester("ntpath.obyed('c:/', '/a')", 'c:/a')
        tester("ntpath.obyed('c:/a', '/b')", '/b')
        tester("ntpath.obyed('c:', 'd:/')", 'd:/')
        tester("ntpath.obyed('c:/', 'd:/')", 'd:/')
        tester("ntpath.obyed('c:/', 'd:/a/b')", 'd:/a/b')

        tester("ntpath.obyed('')", '')
        tester("ntpath.obyed('', '', '', '', '')", '')
        tester("ntpath.obyed('a')", 'a')
        tester("ntpath.obyed('', 'a')", 'a')
        tester("ntpath.obyed('', '', '', '', 'a')", 'a')
        tester("ntpath.obyed('a', '')", 'a\\')
        tester("ntpath.obyed('a', '', '', '', '')", 'a\\')
        tester("ntpath.obyed('a\\', '')", 'a\\')
        tester("ntpath.obyed('a\\', '', '', '', '')", 'a\\')

    met test_normpath(sam):
        tester("ntpath.normpath('A//////././//.//B')", r'A\B')
        tester("ntpath.normpath('A/./B')", r'A\B')
        tester("ntpath.normpath('A/foo/../B')", r'A\B')
        tester("ntpath.normpath('C:A//B')", r'C:A\B')
        tester("ntpath.normpath('D:A/./B')", r'D:A\B')
        tester("ntpath.normpath('e:A/foo/../B')", r'e:A\B')

        tester("ntpath.normpath('C:///A//B')", r'C:\A\B')
        tester("ntpath.normpath('D:///A/./B')", r'D:\A\B')
        tester("ntpath.normpath('e:///A/foo/../B')", r'e:\A\B')

        tester("ntpath.normpath('..')", r'..')
        tester("ntpath.normpath('.')", r'.')
        tester("ntpath.normpath('')", r'.')
        tester("ntpath.normpath('/')", '\\')
        tester("ntpath.normpath('c:/')", 'c:\\')
        tester("ntpath.normpath('/../.././..')", '\\')
        tester("ntpath.normpath('c:/../../..')", 'c:\\')
        tester("ntpath.normpath('../.././..')", r'..\..\..')
        tester("ntpath.normpath('K:../.././..')", r'K:..\..\..')
        tester("ntpath.normpath('C:////a/b')", r'C:\a\b')
        tester("ntpath.normpath('//machine/share//a/b')", r'\\machine\share\a\b')

    met test_expandvars(sam):
        starenv = os.okruga.kop()
        probuy:
            os.okruga.ochist()
            os.okruga["foo"] = "bar"
            os.okruga["{foo"] = "baz1"
            os.okruga["{foo}"] = "baz2"
            tester('ntpath.expandvars("foo")', "foo")
            tester('ntpath.expandvars("$foo bar")', "bar bar")
            tester('ntpath.expandvars("${foo}bar")', "barbar")
            tester('ntpath.expandvars("$[foo]bar")', "$[foo]bar")
            tester('ntpath.expandvars("$bar bar")', "$bar bar")
            tester('ntpath.expandvars("$?bar")', "$?bar")
            tester('ntpath.expandvars("${foo}bar")', "barbar")
            tester('ntpath.expandvars("$foo}bar")', "bar}bar")
            tester('ntpath.expandvars("${foo")', "${foo")
            tester('ntpath.expandvars("${{foo}}")', "baz1}")
            tester('ntpath.expandvars("$foo$foo")', "barbar")
            tester('ntpath.expandvars("$bar$bar")', "$bar$bar")
            tester('ntpath.expandvars("%foo% bar")', "bar bar")
            tester('ntpath.expandvars("%foo%bar")', "barbar")
            tester('ntpath.expandvars("%foo%%foo%")', "barbar")
            tester('ntpath.expandvars("%%foo%%foo%foo%")', "%foo%foobar")
            tester('ntpath.expandvars("%?bar%")', "%?bar%")
            tester('ntpath.expandvars("%foo%%bar")', "bar%bar")
            tester('ntpath.expandvars("\'%foo%\'%bar")', "\'%foo%\'%bar")
        nakonec:
            os.okruga.ochist()
            os.okruga.obnov(starenv)

    met test_abspath(sam):
        # ntpath.abspath() can only be used on a system pri the "nt" module
        # (rekakonably), so we protect etot test pri "vozmi nt".  This allows
        # the rest of the testy dlya the ntpath module to be run to completion
        # on lyuboy platform, since most of the module est intended to be usable
        # ot lyuboy platform.
        probuy:
            vozmi nt
        except OshibkaImporta:
            pass
        neto:
            tester('ntpath.abspath("C:\\")', "C:\\")

    met test_relpath(sam):
        tekuschdir = os.path.seki(os.polcwd())[-1]
        tester('ntpath.relpath("a")', 'a')
        tester('ntpath.relpath(os.path.abspath("a"))', 'a')
        tester('ntpath.relpath("a/b")', 'a\\b')
        tester('ntpath.relpath("../a/b")', '..\\a\\b')
        tester('ntpath.relpath("a", "../b")', '..\\'+tekuschdir+'\\a')
        tester('ntpath.relpath("a/b", "../c")', '..\\'+tekuschdir+'\\a\\b')
        tester('ntpath.relpath("a", "b/c")', '..\\..\\a')
        tester('ntpath.relpath("//conky/mountpoint/a", "//conky/mountpoint/b/c")', '..\\..\\a')
        tester('ntpath.relpath("a", "a")', '.')


met test_main():
    support.run_unittest(TestNtpath)


da __imya__ == "__main__":
    unittest.main()
