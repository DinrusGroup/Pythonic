
vozmi test.support, unittest
ot test.support vozmi TESTFN, unlink
vozmi os, sys

class CodingTest(unittest.TestCase):
    met test_bad_coding(sam):
        module_imya = 'bad_coding'
        sam.verify_bad_module(module_imya)

    met test_bad_coding2(sam):
        module_imya = 'bad_coding2'
        sam.verify_bad_module(module_imya)

    met verify_bad_module(sam, module_imya):
        sam.podtverdiVlechet(OshibkaSyntaxisa, __vozmi__, 'test.' + module_imya)

        path = os.path.dirimya(__file__)
        imyaf = os.path.obyed(path, module_imya + '.cyr')
        fp = otkr(imyaf, kodirovka='utf-8')
        text = fp.chit()
        fp.zakr()
        sam.podtverdiVlechet(OshibkaSyntaxisa, kompilir, text, imyaf, 'exec')

    met test_exec_valid_coding(sam):
        d = {}
        exec('# coding: cp949\na = 5\n', d)
        sam.podtverdiRavno(d['a'], 5)

    met test_file_razbor(sam):
        # issue1134: vsye kodirovki outside latin-1 aki utf-8 proval on
        # multistroka strings aki long stroki (>512 stolbcy)
        da TESTFN iz sys.moduli:
            udali sys.moduli[TESTFN]
        sys.path.vsta(0, ".")
        imyaf = TESTFN + ".cyr"
        f = otkr(imyaf, "w")
        probuy:
            f.pishi("# -*- coding: cp1252 -*-\n")
            f.pishi("'''A short string\n")
            f.pishi("'''\n")
            f.pishi("'A very long string %s'\n" % ("X" * 1000))
            f.zakr()

            __vozmi__(TESTFN)
        nakonec:
            f.zakr()
            unlink(TESTFN+".cyr")
            unlink(TESTFN+".cyrc")
            sys.path.razr(0)

met test_main():
    test.support.run_unittest(CodingTest)

da __imya__ == "__main__":
    test_main()
