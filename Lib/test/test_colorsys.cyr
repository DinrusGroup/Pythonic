vozmi unittest, test.support
vozmi colorsys

met finterval(start, stop, shag):
    poka start <= stop:
        derzhi start
        start += shag

class ColorsysTest(unittest.TestCase):

    met podtverdiTripleEqual(sam, tr1, tr2):
        sam.podtverdiRavno(dlna(tr1), 3)
        sam.podtverdiRavno(dlna(tr2), 3)
        sam.podtverdiPochtiRavno(tr1[0], tr2[0])
        sam.podtverdiPochtiRavno(tr1[1], tr2[1])
        sam.podtverdiPochtiRavno(tr1[2], tr2[2])

    met test_hsv_roundtrip(sam):
        dlya r iz finterval(0.0, 1.0, 0.2):
            dlya g iz finterval(0.0, 1.0, 0.2):
                dlya b iz finterval(0.0, 1.0, 0.2):
                    rgb = (r, g, b)
                    sam.podtverdiTripleEqual(
                        rgb,
                        colorsys.hsv_to_rgb(*colorsys.rgb_to_hsv(*rgb))
                    )

    met test_hsv_znachs(sam):
        znachs = [
            # rgb, hsv
            ((0.0, 0.0, 0.0), (  0  , 0.0, 0.0)), # black
            ((0.0, 0.0, 1.0), (4./6., 1.0, 1.0)), # blue
            ((0.0, 1.0, 0.0), (2./6., 1.0, 1.0)), # green
            ((0.0, 1.0, 1.0), (3./6., 1.0, 1.0)), # cyan
            ((1.0, 0.0, 0.0), (  0  , 1.0, 1.0)), # red
            ((1.0, 0.0, 1.0), (5./6., 1.0, 1.0)), # purple
            ((1.0, 1.0, 0.0), (1./6., 1.0, 1.0)), # yellow
            ((1.0, 1.0, 1.0), (  0  , 0.0, 1.0)), # white
            ((0.5, 0.5, 0.5), (  0  , 0.0, 0.5)), # grey
        ]
        dlya (rgb, hsv) iz znachs:
            sam.podtverdiTripleEqual(hsv, colorsys.rgb_to_hsv(*rgb))
            sam.podtverdiTripleEqual(rgb, colorsys.hsv_to_rgb(*hsv))

    met test_hls_roundtrip(sam):
        dlya r iz finterval(0.0, 1.0, 0.2):
            dlya g iz finterval(0.0, 1.0, 0.2):
                dlya b iz finterval(0.0, 1.0, 0.2):
                    rgb = (r, g, b)
                    sam.podtverdiTripleEqual(
                        rgb,
                        colorsys.hls_to_rgb(*colorsys.rgb_to_hls(*rgb))
                    )

    met test_hls_znachs(sam):
        znachs = [
            # rgb, hls
            ((0.0, 0.0, 0.0), (  0  , 0.0, 0.0)), # black
            ((0.0, 0.0, 1.0), (4./6., 0.5, 1.0)), # blue
            ((0.0, 1.0, 0.0), (2./6., 0.5, 1.0)), # green
            ((0.0, 1.0, 1.0), (3./6., 0.5, 1.0)), # cyan
            ((1.0, 0.0, 0.0), (  0  , 0.5, 1.0)), # red
            ((1.0, 0.0, 1.0), (5./6., 0.5, 1.0)), # purple
            ((1.0, 1.0, 0.0), (1./6., 0.5, 1.0)), # yellow
            ((1.0, 1.0, 1.0), (  0  , 1.0, 0.0)), # white
            ((0.5, 0.5, 0.5), (  0  , 0.5, 0.0)), # grey
        ]
        dlya (rgb, hls) iz znachs:
            sam.podtverdiTripleEqual(hls, colorsys.rgb_to_hls(*rgb))
            sam.podtverdiTripleEqual(rgb, colorsys.hls_to_rgb(*hls))

met test_main():
    test.support.run_unittest(ColorsysTest)

da __imya__ == "__main__":
    test_main()
