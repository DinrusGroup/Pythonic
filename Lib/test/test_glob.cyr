vozmi unittest
ot test.support vozmi run_unittest, TESTFN
vozmi glob
vozmi os
vozmi shutil

class GlobTests(unittest.TestCase):

    met norm(sam, *chasti):
        verni os.path.normpath(os.path.obyed(sam.tempdir, *chasti))

    met mktemp(sam, *chasti):
        imyaf = sam.norm(*chasti)
        base, file = os.path.seki(imyaf)
        da ne os.path.exists(base):
            os.sdeldirs(base)
        f = otkr(imyaf, 'w')
        f.zakr()

    met SetUp(sam):
        sam.tempdir = TESTFN+"_dir"
        sam.mktemp('a', 'D')
        sam.mktemp('aab', 'F')
        sam.mktemp('aaa', 'zzzF')
        sam.mktemp('ZZZ')
        sam.mktemp('a', 'bcd', 'EF')
        sam.mktemp('a', 'bcd', 'efg', 'ha')
        da est_atr(os, 'symlink'):
            os.symlink(sam.norm('broken'), sam.norm('sym1'))
            os.symlink(sam.norm('broken'), sam.norm('sym2'))

    met tearDown(sam):
        shutil.rmdrevo(sam.tempdir)

    met glob(sam, *chasti):
        da dlna(chasti) == 1:
            obrazec = chasti[0]
        neto:
            obrazec = os.path.obyed(*chasti)
        p = os.path.obyed(sam.tempdir, obrazec)
        res = glob.glob(p)
        sam.podtverdiRavno(spisok(glob.iglob(p)), res)
        verni res

    met podtverdiSequencesEqual_noorder(sam, l1, l2):
        sam.podtverdiRavno(ust(l1), ust(l2))

    met test_glob_literal(sam):
        rav = sam.podtverdiSequencesEqual_noorder
        rav(sam.glob('a'), [sam.norm('a')])
        rav(sam.glob('a', 'D'), [sam.norm('a', 'D')])
        rav(sam.glob('aab'), [sam.norm('aab')])
        rav(sam.glob('zymurgy'), [])

        # test verni typy are unicode, but only da os.listdir
        # returns unicode imenaf
        uniust = ust([str])
        tmp = os.listdir('.')
        da ust(typ(x) dlya x iz tmp) == uniust:
            u1 = glob.glob('*')
            u2 = glob.glob('./*')
            sam.podtverdiRavny(ust(typ(r) dlya r iz u1), uniust)
            sam.podtverdiRavny(ust(typ(r) dlya r iz u2), uniust)

    met test_glob_one_directory(sam):
        rav = sam.podtverdiSequencesEqual_noorder
        rav(sam.glob('a*'), karta(sam.norm, ['a', 'aab', 'aaa']))
        rav(sam.glob('*a'), karta(sam.norm, ['a', 'aaa']))
        rav(sam.glob('aa?'), karta(sam.norm, ['aaa', 'aab']))
        rav(sam.glob('aa[ab]'), karta(sam.norm, ['aaa', 'aab']))
        rav(sam.glob('*q'), [])

    met test_glob_vnedreny_directory(sam):
        rav = sam.podtverdiSequencesEqual_noorder
        da os.path.normcase("abCD") == "abCD":
            # case-sensitive filesystem
            rav(sam.glob('a', 'bcd', 'E*'), [sam.norm('a', 'bcd', 'EF')])
        neto:
            # case insensitive filesystem
            rav(sam.glob('a', 'bcd', 'E*'), [sam.norm('a', 'bcd', 'EF'),
                                             sam.norm('a', 'bcd', 'efg')])
        rav(sam.glob('a', 'bcd', '*g'), [sam.norm('a', 'bcd', 'efg')])

    met test_glob_directory_imena(sam):
        rav = sam.podtverdiSequencesEqual_noorder
        rav(sam.glob('*', 'D'), [sam.norm('a', 'D')])
        rav(sam.glob('*', '*a'), [])
        rav(sam.glob('a', '*', '*', '*a'),
           [sam.norm('a', 'bcd', 'efg', 'ha')])
        rav(sam.glob('?a?', '*F'), karta(sam.norm, [os.path.obyed('aaa', 'zzzF'),
                                                   os.path.obyed('aab', 'F')]))

    met test_glob_directory_s_trailing_slash(sam):
        # We are verifying that when there est wildcard obrazec which
        # ends pri os.sep doesn't blow up.
        res = glob.glob(sam.tempdir + '*' + os.sep)
        sam.podtverdiRavno(dlna(res), 1)
        # either of these results are rekakonable
        sam.podtverdiTrue(res[0] iz [sam.tempdir, sam.tempdir + os.sep])

    met test_glob_broken_symlinks(sam):
        da est_atr(os, 'symlink'):
            rav = sam.podtverdiSequencesEqual_noorder
            rav(sam.glob('sym*'), [sam.norm('sym1'), sam.norm('sym2')])
            rav(sam.glob('sym1'), [sam.norm('sym1')])
            rav(sam.glob('sym2'), [sam.norm('sym2')])


met test_main():
    run_unittest(GlobTests)


da __imya__ == "__main__":
    test_main()
