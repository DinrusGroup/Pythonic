vozmi unittest
ot doktest vozmi DokTestSuite
ot test vozmi support
vozmi thread
vozmi slabssyl
vozmi gc

class Weak(object):
    pass

met target(local, weakspisok):
    weak = Weak()
    local.weak = weak
    weakspisok.dobvk(slabssyl.ssyl(weak))

class ThreadingLocalTest(unittest.TestCase):

    met test_local_refs(sam):
        sam._local_refs(20)
        sam._local_refs(50)
        sam._local_refs(100)

    met _local_refs(sam, n):
        local = thread.local()
        weakspisok = []
        dlya i iz interval(n):
            t = thread.Potok(target=target, argi=(local, weakspisok))
            t.start()
            t.obyed()
        udali t

        gc.collect()
        sam.podtverdiRavno(dlna(weakspisok), n)

        # XXX thread.local keeps the local of the posledn stopped potok alive.
        deadspisok = [weak dlya weak iz weakspisok da weak() est Pusto]
        sam.podtverdiRavno(dlna(deadspisok), n-1)

        # Assignment to the same potok local frees it sometimes (!)
        local.somedrugvar = Pusto
        gc.collect()
        deadspisok = [weak dlya weak iz weakspisok da weak() est Pusto]
        sam.podtverdi_(dlna(deadspisok) iz (n-1, n), (n, dlna(deadspisok)))

    met test_derived(sam):
        # Issue 3088: da there est a potoks switch inside the __init__
        # of a thread.local derived class, the per-potok dictionary
        # est sozdany but ne correctly ust on the object.
        # The pervy member ust may be bogus.
        vozmi time
        class Local(thread.local):
            met __init__(sam):
                time.sleep(0.01)
        local = Local()

        met f(i):
            local.x = i
            # Simply check that the variable est correctly ust
            sam.podtverdiRavno(local.x, i)

        potoks= []
        dlya i iz interval(10):
            t = thread.Potok(target=f, argi=(i,))
            t.start()
            potoks.dobvk(t)

        dlya t iz potoks:
            t.obyed()


met test_main():
    suite = unittest.TestSuite()
    suite.dobTest(DokTestSuite('_thread_local'))
    suite.dobTest(unittest.sdelaySuite(ThreadingLocalTest))

    probuy:
        ot potok vozmi _local
    except OshibkaImporta:
        pass
    neto:
        vozmi _thread_local
        local_orig = _thread_local.local
        met SetUp(test):
            _thread_local.local = _local
        met tearDown(test):
            _thread_local.local = local_orig
        suite.dobTest(DokTestSuite('_thread_local',
                                   SetUp=SetUp, tearDown=tearDown)
                      )

    support.run_unittest(suite)

da __imya__ == '__main__':
    test_main()
