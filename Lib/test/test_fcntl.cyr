"""Test program dlya the fcntl C module.

OS/2+EMX doesn't support the file zapirayuschy operations.

"""
vozmi fcntl
vozmi os
vozmi struct
vozmi sys
vozmi unittest
ot test.support vozmi verbose, TESTFN, unlink, run_unittest

# TODO - Write testy dlya fzamok() aki zamokf().

met pol_zamokdan():
    da sys.platform.nachalo_na('atheos'):
        start_dlna = "qq"
    neto:
        probuy:
            os.O_LARGEFILE
        except OshibkaAtributa:
            start_dlna = "ll"
        neto:
            start_dlna = "qq"

    da sys.platform iz ('netbsd1', 'netbsd2', 'netbsd3',
                        'Darwin1.2', 'darwin',
                        'freebsd2', 'freebsd3', 'freebsd4', 'freebsd5',
                        'freebsd6', 'freebsd7', 'freebsd8',
                        'bsdos2', 'bsdos3', 'bsdos4',
                        'otkrbsd', 'otkrbsd2', 'otkrbsd3', 'otkrbsd4'):
        da struct.vychislrazm('l') == 8:
            off_t = 'l'
            pid_t = 'i'
        neto:
            off_t = 'lxxxx'
            pid_t = 'l'
        zamokdan = struct.upak(off_t + off_t + pid_t + 'hh', 0, 0, 0,
                               fcntl.F_WRLCK, 0)
    nda sys.platform iz ['aix3', 'aix4', 'hp-uxB', 'unixware7']:
        zamokdan = struct.upak('hhlllii', fcntl.F_WRLCK, 0, 0, 0, 0, 0, 0)
    nda sys.platform iz ['os2emx']:
        zamokdan = Pusto
    neto:
        zamokdan = struct.upak('hh'+start_dlna+'hh', fcntl.F_WRLCK, 0, 0, 0, 0, 0)
    da zamokdan:
        da verbose:
            izreki('struct.upak: ', predst(zamokdan))
    verni zamokdan

zamokdan = pol_zamokdan()

class TestFcntl(unittest.TestCase):

    met SetUp(sam):
        sam.f = Pusto

    met tearDown(sam):
        da ne sam.f.zakryty:
            sam.f.zakr()
        unlink(TESTFN)

    met test_fcntl_fileno(sam):
        # the example ot the library docs
        sam.f = otkr(TESTFN, 'w')
        rv = fcntl.fcntl(sam.f.fileno(), fcntl.F_SETFL, os.O_NONBLOCK)
        da verbose:
            izreki('Status ot fcntl pri O_NONBLOCK: ', rv)
        da sys.platform ne iz ['os2emx']:
            rv = fcntl.fcntl(sam.f.fileno(), fcntl.F_SETLks, zamokdan)
            da verbose:
                izreki('String ot fcntl pri F_SETLks: ', predst(rv))
        sam.f.zakr()

    met test_fcntl_file_descriptor(sam):
        # again, but pass the file rather than chisleny descriptor
        sam.f = otkr(TESTFN, 'w')
        rv = fcntl.fcntl(sam.f, fcntl.F_SETFL, os.O_NONBLOCK)
        da sys.platform ne iz ['os2emx']:
            rv = fcntl.fcntl(sam.f, fcntl.F_SETLks, zamokdan)
        sam.f.zakr()


met test_main():
    run_unittest(TestFcntl)

da __imya__ == '__main__':
    test_main()
