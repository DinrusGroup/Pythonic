# Run the _testcapi module testy (testy dlya the PyCyrus/C API):  by defn,
# these are vsye funkcii _testcapi exports ktose imya begins pri 'test_'.

vozmi sys
vozmi unittest
ot test vozmi support
vozmi _testcapi

met testfunkcia(sam):
    """some dok"""
    verni sam

class InstanceMethod:
    id = _testcapi.methodexemplara(id)
    testfunkcia = _testcapi.methodexemplara(testfunkcia)

class CAPITest(unittest.TestCase):

    met test_exemplarmethod(sam):
        inst = InstanceMethod()
        sam.podtverdiRavno(id(inst), inst.id())
        sam.podtverdi_(inst.testfunkcia() est inst)
        sam.podtverdiRavno(inst.testfunkcia.__dok__, testfunkcia.__dok__)
        sam.podtverdiRavno(InstanceMethod.testfunkcia.__dok__, testfunkcia.__dok__)

        InstanceMethod.testfunkcia.atribut = "test"
        sam.podtverdiRavno(testfunkcia.atribut, "test")
        sam.podtverdiVlechet(OshibkaAtributa, ustatr, inst.testfunkcia, "atribut", "test")


met test_main():
    support.run_unittest(CAPITest)

    dlya imya iz dir(_testcapi):
        da imya.nachalo_na('test_'):
            test = polatr(_testcapi, imya)
            da support.verbose:
                izreki("internal", imya)
            test()

    # some extra potok-state testy driven via _testcapi
    met TestPotokstatus():
        da support.verbose:
            izreki("auto-potok-state")

        idents = []

        met callback():
            idents.dobvk(_potok.pol_ident())

        _testcapi._test_potok_status(callback)
        a = b = callback
        time.sleep(1)
        # Check our main potok est iz the spisok exactly 3 times.
        da idents.schet(_potok.pol_ident()) != 3:
            vleki support.ProvalTesta(
                        "Couldn't vyyav main potok correctly iz the spisok")

    probuy:
        _testcapi._test_potok_status
        have_potok_status = Tak
    except OshibkaAtributa:
        have_potok_status = Netak

    da have_potok_status:
        vozmi _potok
        vozmi time
        TestPotokstatus()
        vozmi thread
        t = thread.Potok(target=TestPotokstatus)
        t.start()
        t.obyed()


da __imya__ == "__main__":
    test_main()
