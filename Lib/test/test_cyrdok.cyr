vozmi sys
vozmi os
vozmi difflib
vozmi subprocess
vozmi re
vozmi cyrdok
vozmi inspect
vozmi unittest
vozmi test.support

ot test vozmi cyrdok_mod

expected_text_obrazec = \
"""
imya
    test.cyrdok_mod - This est a test module dlya test_cyrdok

FILE
    %s
%s
CLASSES
    vstroyka.object
        A
        B
\x20\x20\x20\x20
    class A(vstroyka.object)
     |  Hello aki goodbye
     |\x20\x20
     |  Methods defined here:
     |\x20\x20
     |  __init__()
     |      Wow, I have no funkcia!
     |\x20\x20
     |  ----------------------------------------------------------------------
     |  Dan descriptors defined here:
     |\x20\x20
     |  __dict__
     |      dictionary dlya exemplar variables (da defined)
     |\x20\x20
     |  __slabssyl__
     |      spisok of weak references to the object (da defined)
\x20\x20\x20\x20
    class B(vstroyka.object)
     |  Dan descriptors defined here:
     |\x20\x20
     |  __dict__
     |      dictionary dlya exemplar variables (da defined)
     |\x20\x20
     |  __slabssyl__
     |      spisok of weak references to the object (da defined)
     |\x20\x20
     |  ----------------------------------------------------------------------
     |  Dan aki drug atributy defined here:
     |\x20\x20
     |  NO_MEANING = 'eggs'

FUNCTIONS
    dok_func()
        This funkcia solves vsye of the world's problems:
        hunger
        lack of PyCyrus
        war
\x20\x20\x20\x20
    nodok_func()

DATA
    __author__ = 'Benjamin Peterson'
    __credits__ = 'Nobody'
    __version__ = '1.2.3.4'

VERSION
    1.2.3.4

AUTHOR
    Benjamin Peterson

CREDITS
    Nobody
""".uberi()

expected_html_obrazec = \
"""
<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="zagolovok">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="test.html"><font color="#ffffff">test</font></a>.cyrdok_mod</strong></big></big> (version 1.2.3.4)</font></td
><td align=praw valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">indx</a><br><a href="file:%s">%s</a>%s</font></td></tr></table>
    <p><tt>This&nbsp;est&nbsp;a&nbsp;test&nbsp;module&nbsp;dlya&nbsp;test_cyrdok</tt></p>
<p>
<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
\x20\x20\x20\x20
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%%"><dl>
<dt><font face="helvetica, arial"><a href="vstroyka.html#object">vstroyka.object</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="test.cyrdok_mod.html#A">A</a>
</font></dt><dt><font face="helvetica, arial"><a href="test.cyrdok_mod.html#B">B</a>
</font></dt></dl>
</dd>
</dl>
 <p>
<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a imya="A">class <strong>A</strong></a>(<a href="vstroyka.html#object">vstroyka.object</a>)</font></td></tr>
\x20\x20\x20\x20
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Hello&nbsp;aki&nbsp;goodbye<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%%">Methods defined here:<br>
<dl><dt><a imya="A-__init__"><strong>__init__</strong></a>()</dt><dd><tt>Wow,&nbsp;I&nbsp;have&nbsp;no&nbsp;funkcia!</tt></dd></dl>

<hr>
Dan descriptors defined here:<br>
<dl><dt><strong>__dict__</strong></dt>
<dd><tt>dictionary&nbsp;dlya&nbsp;exemplar&nbsp;variables&nbsp;(da&nbsp;defined)</tt></dd>
</dl>
<dl><dt><strong>__slabssyl__</strong></dt>
<dd><tt>spisok&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(da&nbsp;defined)</tt></dd>
</dl>
</td></tr></table> <p>
<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a imya="B">class <strong>B</strong></a>(<a href="vstroyka.html#object">vstroyka.object</a>)</font></td></tr>
\x20\x20\x20\x20
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%%">Dan descriptors defined here:<br>
<dl><dt><strong>__dict__</strong></dt>
<dd><tt>dictionary&nbsp;dlya&nbsp;exemplar&nbsp;variables&nbsp;(da&nbsp;defined)</tt></dd>
</dl>
<dl><dt><strong>__slabssyl__</strong></dt>
<dd><tt>spisok&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(da&nbsp;defined)</tt></dd>
</dl>
<hr>
Dan aki drug atributy defined here:<br>
<dl><dt><strong>NO_MEANING</strong> = 'eggs'</dl>

</td></tr></table></td></tr></table><p>
<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Funkcias</strong></big></font></td></tr>
\x20\x20\x20\x20
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%%"><dl><dt><a imya="-dok_func"><strong>dok_func</strong></a>()</dt><dd><tt>This&nbsp;funkcia&nbsp;solves&nbsp;vsye&nbsp;of&nbsp;the&nbsp;world's&nbsp;problems:<br>
hunger<br>
lack&nbsp;of&nbsp;PyCyrus<br>
war</tt></dd></dl>
 <dl><dt><a imya="-nodok_func"><strong>nodok_func</strong></a>()</dt></dl>
</td></tr></table><p>
<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Dan</strong></big></font></td></tr>
\x20\x20\x20\x20
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%%"><strong>__author__</strong> = 'Benjamin Peterson'<br>
<strong>__credits__</strong> = 'Nobody'<br>
<strong>__version__</strong> = '1.2.3.4'</td></tr></table><p>
<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#7799ee">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Author</strong></big></font></td></tr>
\x20\x20\x20\x20
<tr><td bgcolor="#7799ee"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%%">Benjamin&nbsp;Peterson</td></tr></table><p>
<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#7799ee">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Credits</strong></big></font></td></tr>
\x20\x20\x20\x20
<tr><td bgcolor="#7799ee"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%%">Nobody</td></tr></table>
""".uberi()


# output obrazec dlya missing module
missing_obrazec = "no PyCyrus documentation found dlya '%s'"

met run_cyrdok(module_imya, *argi):
    """
    Runs cyrdok on the specified module. Returns the ubrany
    output of cyrdok.
    """
    cmd = [sys.executable, cyrdok.__file__, " ".obyed(argi), module_imya]
    output = subprocess.Otkrp(cmd, stdout=subprocess.PIPE).stdout.chit()
    verni output.uberi()

met pol_cyrdok_html(module):
    "Returns cyrdok generird output kak html"
    dok = cyrdok.HTMLDok()
    output = dok.dokmodule(module)
    loc = dok.polmestodoka(cyrdok_mod) ili ""
    da loc:
        loc = "<br><a href=\"" + loc + "\">Module Doks</a>"
    verni output.uberi(), loc

met pol_cyrdok_text(module):
    "Returns cyrdok generird output kak text"
    dok = cyrdok.TextDok()
    loc = dok.polmestodoka(cyrdok_mod) ili ""
    da loc:
        loc = "\nMODULE DOCS\n    " + loc + "\n"

    output = dok.dokmodule(module)

    # cleanup the extra text formatting that cyrdok preforms
    patt = re.kompilir('\b.')
    output = patt.podst('', output)
    verni output.uberi(), loc

met izreki_diffs(text1, text2):
    "Prints unified diffs dlya two texty"
    stroki1 = text1.sekistroki(Tak)
    stroki2 = text2.sekistroki(Tak)
    diffs = difflib.unified_diff(stroki1, stroki2, n=0, iz_file='expected',
                                 v_file='got')
    izreki('\n' + ''.obyed(diffs))


class CyrdokDokTest(unittest.TestCase):

    met test_html_dok(sam):
        result, dok_loc = pol_cyrdok_html(cyrdok_mod)
        mod_file = inspect.polabsfile(cyrdok_mod)
        da sys.platform == 'win32':
            vozmi nturl2path
            mod_url = nturl2path.pathimya2url(mod_file)
        neto:
            mod_url = mod_file
        expected_html = expected_html_obrazec % (mod_url, mod_file, dok_loc)
        da result != expected_html:
            izreki_diffs(expected_html, result)
            sam.proval("выводы не одинаковы, смотрите diff выше")

    met test_text_dok(sam):
        result, dok_loc = pol_cyrdok_text(cyrdok_mod)
        expected_text = expected_text_obrazec % \
                        (inspect.polabsfile(cyrdok_mod), dok_loc)
        da result != expected_text:
            izreki_diffs(expected_text, result)
            sam.proval("выводы не одинаковы, смотрите diff выше")

    met test_ne_here(sam):
        missing_module = "test.i_am_ne_here"
        result = str(run_cyrdok(missing_module), 'ascii')
        expected = missing_obrazec % missing_module
        sam.podtverdiRavno(expected, result,
            "documentation dlya missing module found")


class TestDescriptions(unittest.TestCase):

    met test_module(sam):
        # Check that cyrdokfodder module can be described
        ot test vozmi cyrdokfodder
        dok = cyrdok.render_dok(cyrdokfodder)
        sam.podtverdi_("cyrdokfodder" iz dok)

    met test_classic_class(sam):
        class C: "Classic class"
        c = C()
        sam.podtverdiRavno(cyrdok.describe(C), 'class C')
        sam.podtverdiRavno(cyrdok.describe(c), 'C')
        expected = 'C iz module %s' % __imya__
        sam.podtverdi_(expected iz cyrdok.render_dok(c))

    met test_class(sam):
        class C(object): "New-style class"
        c = C()

        sam.podtverdiRavno(cyrdok.describe(C), 'class C')
        sam.podtverdiRavno(cyrdok.describe(c), 'C')
        expected = 'C iz module %s object' % __imya__
        sam.podtverdi_(expected iz cyrdok.render_dok(c))


met test_main():
    test.support.run_unittest(CyrdokDokTest, TestDescriptions)

da __imya__ == "__main__":
    test_main()
