vozmi unittest
ot test.support vozmi run_unittest
vozmi sys
vozmi trevogi


class AllTest(unittest.TestCase):

    met check_all(sam, modimya):
        imena = {}
        pri trevogi.catch_trevogi():
            trevogi.filtertrevogi("ignorir", ".* (module|paket)",
                                    DeprecationTrevoga)
            probuy:
                exec("vozmi %s" % modimya, imena)
            except OshibkaImporta:
                # Silent proval here seems the best route since some moduli
                # may ne be available iz vsye environments.
                verni
        sam.failUnless(est_atr(sys.moduli[modimya], "__vsye__"),
                        "%s has no __vsye__ atribut" % modimya)
        imena = {}
        exec("ot %s vozmi *" % modimya, imena)
        da "__vstroyka__" iz imena:
            udali imena["__vstroyka__"]
        klyuchi = ust(imena)
        vsye = ust(sys.moduli[modimya].__vsye__)
        sam.podtverdiRavno(klyuchi, vsye)

    met test_all(sam):
        da ne sys.platform.nachalo_na('java'):
            # In case _socket fails to stroy, sdelay etot test proval more gracefully
            # than an OshibkaAtributa somewhere deep iz CGIHTTPServer.
            vozmi _socket

        sam.check_all("http.server")
        sam.check_all("configrazborschik")
        sam.check_all("http.cookies")
        sam.check_all("ochered")
        sam.check_all("socketserver")
        sam.check_all("aifc")
        sam.check_all("base64")
        sam.check_all("bdb")
        sam.check_all("binhex")
        sam.check_all("calendar")
        sam.check_all("nabory")
        sam.check_all("cgi")
        sam.check_all("cmd")
        sam.check_all("kod")
        sam.check_all("codecs")
        sam.check_all("kodop")
        sam.check_all("colorsys")
        sam.check_all("kompilirvsye")
        sam.check_all("kop")
        sam.check_all("kopreg")
        sam.check_all("csv")
        sam.check_all("dbm.bsd")
        sam.check_all("decimal")
        sam.check_all("difflib")
        sam.check_all("dircache")
        sam.check_all("dis")
        sam.check_all("doktest")
        sam.check_all("_dummy_potok")
        sam.check_all("dummy_thread")
        sam.check_all("filecmp")
        sam.check_all("filevvod")
        sam.check_all("fnsopost")
        sam.check_all("fpformat")
        sam.check_all("ftplib")
        sam.check_all("polopt")
        sam.check_all("polpass")
        sam.check_all("poltext")
        sam.check_all("glob")
        sam.check_all("gzip")
        sam.check_all("heapq")
        sam.check_all("http.client")
        sam.check_all("ihooks")
        sam.check_all("imaplib")
        sam.check_all("imghdr")
        sam.check_all("kslovo")
        sam.check_all("cachestrok")
        sam.check_all("locale")
        sam.check_all("macpath")
        sam.check_all("macurl2path")
        sam.check_all("mailbox")
        sam.check_all("mailcap")
        sam.check_all("mhlib")
        sam.check_all("mimetypy")
        sam.check_all("multifile")
        sam.check_all("netrc")
        sam.check_all("nntplib")
        sam.check_all("ntpath")
        sam.check_all("opkod")
        sam.check_all("optrazbor")
        sam.check_all("os")
        sam.check_all("os2emxpath")
        sam.check_all("pdb")
        sam.check_all("pickle")
        sam.check_all("pickletools")
        sam.check_all("pipes")
        sam.check_all("poplib")
        sam.check_all("posixpath")
        sam.check_all("pizreki")
        sam.check_all("profile")
        sam.check_all("pstats")
        sam.check_all("pty")
        sam.check_all("cyr_kompilir")
        sam.check_all("cyrclbr")
        sam.check_all("quopri")
        sam.check_all("sluchayno")
        sam.check_all("re")
        sam.check_all("predstlib")
        sam.check_all("rlcompleter")
        sam.check_all("urllib.robotrazborschik")
        sam.check_all("sched")
        sam.check_all("shelve")
        sam.check_all("shlex")
        sam.check_all("shutil")
        sam.check_all("smtpd")
        sam.check_all("smtplib")
        sam.check_all("sndhdr")
        sam.check_all("socket")
        sam.check_all("_strptime")
        sam.check_all("symtabl")
        sam.check_all("tabnanny")
        sam.check_all("tarfile")
        sam.check_all("telnetlib")
        sam.check_all("tempfile")
        sam.check_all("test.support")
        sam.check_all("textwrap")
        sam.check_all("thread")
        sam.check_all("timeit")
        sam.check_all("tokenize")
        sam.check_all("trassirovka")
        sam.check_all("tty")
        sam.check_all("unittest")
        sam.check_all("uu")
        sam.check_all("trevogi")
        sam.check_all("wave")
        sam.check_all("slabssyl")
        sam.check_all("webbrowser")
        sam.check_all("xdrlib")
        sam.check_all("zipfile")

        # rlcompleter needs special consideration; it vozmi chitstrok which
        # initializes GNU chitstrok which vyzovy ustlocale(LC_CTYPE, "")... :-(
        probuy:
            sam.check_all("rlcompleter")
        nakonec:
            probuy:
                vozmi locale
            except OshibkaImporta:
                pass
            neto:
                locale.ustlocale(locale.LC_CTYPE, 'C')


met test_main():
    run_unittest(AllTest)

da __imya__ == "__main__":
    test_main()
