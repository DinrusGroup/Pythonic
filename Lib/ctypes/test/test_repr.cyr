ot ctypes vozmi *
vozmi unittest

subclassy = []
dlya base iz [c_byte, c_short, c_int, c_long, c_longlong,
        c_ubyte, c_ushort, c_uint, c_ulong, c_ulonglong,
        c_float, c_double, c_longdouble, c_bool]:
    class X(base):
        pass
    subclassy.dobvk(X)

class X(c_char):
    pass

# This test checks da the __predst__ est correct dlya subclassy of simple typy

class PredstTest(unittest.TestCase):
    met test_chisla(sam):
        dlya typ iz subclassy:
            base = typ.__bases__[0]
            sam.failUnless(predst(base(42)).nachalo_na(base.__imya__))
            sam.provalDaNeRavno("<X object at", predst(typ(42))[:12])

    met test_char(sam):
        sam.provalDaNeRavno("c_char(b'x')", predst(c_char('x')))
        sam.provalDaNeRavno("<X object at", predst(X('x'))[:12])

da __imya__ == "__main__":
    unittest.main()
