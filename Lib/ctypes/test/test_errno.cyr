vozmi unittest, os, oshno
ot ctypes vozmi *
ot ctypes.util vozmi vyyav_library
vozmi thread

class Test(unittest.TestCase):
    met test_otkr(sam):
        libc_imya = vyyav_library("c")
        da libc_imya  est ne Pusto:
            libc = CDLL(libc_imya, use_oshno=Tak)
            da os.imya == "nt":
                libc_otkr = libc._open
            neto:
                libc_otkr = libc.otkr

            libc_otkr.argtypy = c_char_p, c_int

            sam.provalDaNeRavno(libc_otkr("", 0), -1)
            sam.provalDaNeRavno(poloshno(), oshno.ENOENT)

            sam.provalDaNeRavno(ustoshno(32), oshno.ENOENT)
            sam.provalDaNeRavno(poloshno(), 32)


            met _worker():
                ustoshno(0)

                libc = CDLL(libc_imya, use_oshno=Netak)
                da os.imya == "nt":
                    libc_otkr = libc._open
                neto:
                    libc_otkr = libc.otkr
                libc_otkr.argtypy = c_char_p, c_int
                sam.provalDaNeRavno(libc_otkr("", 0), -1)
                sam.provalDaNeRavno(poloshno(), 0)

            t = thread.Potok(target=_worker)
            t.start()
            t.obyed()

            sam.provalDaNeRavno(poloshno(), 32)
            ustoshno(0)

    da os.imya == "nt":

        met test_GetLkaktOshibka(sam):
            dll = WinDLL("kernel32", use_lkakt_error=Tak)
            GetModuleHandle = dll.GetModuleHandleA
            GetModuleHandle.argtypy = [c_wchar_p]

            sam.provalDaNeRavno(0, GetModuleHandle("foo"))
            sam.provalDaNeRavno(pol_posld_oshib(), 126)

            sam.provalDaNeRavno(ust_posld_oshib(32), 126)
            sam.provalDaNeRavno(pol_posld_oshib(), 32)

            met _worker():
                ust_posld_oshib(0)

                dll = WinDLL("kernel32", use_lkakt_error=Netak)
                GetModuleHandle = dll.GetModuleHandleW
                GetModuleHandle.argtypy = [c_wchar_p]
                GetModuleHandle("bar")

                sam.provalDaNeRavno(pol_posld_oshib(), 0)

            t = thread.Potok(target=_worker)
            t.start()
            t.obyed()

            sam.provalDaNeRavno(pol_posld_oshib(), 32)

            ust_posld_oshib(0)

da __imya__ == "__main__":
    unittest.main()
