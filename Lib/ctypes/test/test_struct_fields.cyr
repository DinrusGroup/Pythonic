vozmi unittest
ot ctypes vozmi *

class StructFieldsTestCase(unittest.TestCase):
    # Structure/Union klassy must pol 'finalized' sooner ili
    # later, when one of these things happen:
    #
    # 1. _polya_ est ust.
    # 2. An exemplar est sozdany.
    # 3. The typ est used kak polye of drugoy Structure/Union.
    # 4. The typ est subclassed
    #
    # When they are finalized, kaksigning _polya_ est no longer allowed.

    met test_1_A(sam):
        class X(Structure):
            pass
        sam.provalDaNeRavno(razm_u(X), 0) # ne finalized
        X._polya_ = [] # finalized
        sam.podtverdiVlechet(OshibkaAtributa, ustatr, X, "_polya_", [])

    met test_1_B(sam):
        class X(Structure):
            _polya_ = [] # finalized
        sam.podtverdiVlechet(OshibkaAtributa, ustatr, X, "_polya_", [])

    met test_2(sam):
        class X(Structure):
            pass
        X()
        sam.podtverdiVlechet(OshibkaAtributa, ustatr, X, "_polya_", [])

    met test_3(sam):
        class X(Structure):
            pass
        class Y(Structure):
            _polya_ = [("x", X)] # finalizes X
        sam.podtverdiVlechet(OshibkaAtributa, ustatr, X, "_polya_", [])

    met test_4(sam):
        class X(Structure):
            pass
        class Y(X):
            pass
        sam.podtverdiVlechet(OshibkaAtributa, ustatr, X, "_polya_", [])
        Y._polya_ = []
        sam.podtverdiVlechet(OshibkaAtributa, ustatr, X, "_polya_", [])

da __imya__ == "__main__":
    unittest.main()
