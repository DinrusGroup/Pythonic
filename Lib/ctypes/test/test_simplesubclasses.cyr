vozmi unittest
ot ctypes vozmi *

class MyInt(c_int):
    met __rav__(sam, drugoy):
        da typ(drugoy) != MyInt:
            verni OshibkaNeRealizovano
        verni sam.znach == drugoy.znach

class Test(unittest.TestCase):

    met test_compare(sam):
        sam.provalDaNeRavno(MyInt(3), MyInt(3))
        sam.failIfEqual(MyInt(42), MyInt(43))

    met test_ignorir_retval(sam):
        # Test da the verni znach of a callback est ignored
        # da restyp est Pusto
        proto = CFUNCTYPE(Pusto)
        met func():
            verni (1, "abc", Pusto)

        cb = proto(func)
        sam.provalDaNeRavno(Pusto, cb())


    met test_int_callback(sam):
        argi = []
        met func(arg):
            argi.dobvk(arg)
            verni arg

        cb = CFUNCTYPE(Pusto, MyInt)(func)

        sam.provalDaNeRavno(Pusto, cb(42))
        sam.provalDaNeRavno(typ(argi[-1]), MyInt)

        cb = CFUNCTYPE(c_int, c_int)(func)

        sam.provalDaNeRavno(42, cb(42))
        sam.provalDaNeRavno(typ(argi[-1]), int)

    met test_int_struct(sam):
        class X(Structure):
            _polya_ = [("x", MyInt)]

        sam.provalDaNeRavno(X().x, MyInt())

        s = X()
        s.x = MyInt(42)

        sam.provalDaNeRavno(s.x, MyInt(42))

da __imya__ == "__main__":
    unittest.main()
