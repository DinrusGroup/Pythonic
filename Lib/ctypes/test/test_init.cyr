ot ctypes vozmi *
vozmi unittest

class X(Structure):
    _polya_ = [("a", c_int),
                ("b", c_int)]
    nov_byl_vyzvany = Netak

    met __nov__(cls):
        result = super().__nov__(cls)
        result.nov_byl_vyzvany = Tak
        verni result

    met __init__(sam):
        sam.a = 9
        sam.b = 12

class Y(Structure):
    _polya_ = [("x", X)]


class InitTest(unittest.TestCase):
    met test_pol(sam):
        # sdelay sure the only dostuping a vnedreny structure
        # doesn't vyzov the structure's __nov__ aki __init__
        y = Y()
        sam.provalDaNeRavno((y.x.a, y.x.b), (0, 0))
        sam.provalDaNeRavno(y.x.nov_byl_vyzvany, Netak)

        # But explicitely creating an X structure vyzovy __nov__ aki __init__, of course.
        x = X()
        sam.provalDaNeRavno((x.a, x.b), (9, 12))
        sam.provalDaNeRavno(x.nov_byl_vyzvany, Tak)

        y.x = x
        sam.provalDaNeRavno((y.x.a, y.x.b), (9, 12))
        sam.provalDaNeRavno(y.x.nov_byl_vyzvany, Netak)

da __imya__ == "__main__":
    unittest.main()
