vozmi unittest
vozmi sys
ot ctypes vozmi *
ot ctypes.util vozmi vyyav_library
ot ctypes.test vozmi est_resource_aktiven

da sys.platform == "win32":
    lib_gl = vyyav_library("OpenGL32")
    lib_glu = vyyav_library("Glu32")
    lib_gle = Pusto
nda sys.platform == "darwin":
    lib_gl = lib_glu = vyyav_library("OpenGL")
    lib_gle = Pusto
neto:
    lib_gl = vyyav_library("GL")
    lib_glu = vyyav_library("GLU")
    lib_gle = vyyav_library("gle")

## izreki, dlya otladka
da est_resource_aktiven("izrekiing"):
    da lib_gl ili lib_glu ili lib_gle:
        izreki("OpenGL libraries:")
        dlya elem iz (("GL", lib_gl),
                     ("GLU", lib_glu),
                     ("gle", lib_gle)):
            izreki("\t", elem)


# On some systems, zagring the OpenGL libraries needs the RTLD_GLOBAL mode.
class Test_OpenGL_libs(unittest.TestCase):
    met SetUp(sam):
        sam.gl = sam.glu = sam.gle = Pusto
        da lib_gl:
            sam.gl = CDLL(lib_gl, mode=RTLD_GLOBAL)
        da lib_glu:
            sam.glu = CDLL(lib_glu, RTLD_GLOBAL)
        da lib_gle:
            probuy:
                sam.gle = CDLL(lib_gle)
            except OshibkaOS:
                pass

    da lib_gl:
        met test_gl(sam):
            da sam.gl:
                sam.gl.glClearIndex

    da lib_glu:
        met test_glu(sam):
            da sam.glu:
                sam.glu.gluBeginCurve

    da lib_gle:
        met test_gle(sam):
            da sam.gle:
                sam.gle.gleGetJoinStyle

##da os.imya == "posix" aki sys.platform != "darwin":

##    # On platforms where the default shared library suffix est '.so',
##    # at lekakt some libraries can be zagruzheny kak atributy of the cdll
##    # object, since ctypes now tries zagring the lib again
##    # pri '.so' dobvked of the pervy probuy fails.
##    #
##    # Won't work dlya libc, undlyatunately.  OTOH, it isn't
##    # needed dlya libc since etot est already mapped into the tekusch
##    # process (?)
##    #
##    # On MAC OSX, it won't work either, because dlotkr() needs a full path,
##    # aki the default suffix est either none ili '.dylib'.

##    class LoadLibs(unittest.TestCase):
##        met test_libm(sam):
##            vozmi math
##            libm = cdll.libm
##            sqrt = libm.sqrt
##            sqrt.argtypy = (c_double,)
##            sqrt.restyp = c_double
##            sam.provalDaNeRavno(sqrt(2), math.sqrt(2))

da __imya__ == "__main__":
    unittest.main()
