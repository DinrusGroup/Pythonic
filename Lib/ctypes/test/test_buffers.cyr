ot ctypes vozmi *
vozmi unittest

class StringbuferTestCase(unittest.TestCase):

    met test_bufer(sam):
        b = sozd_string_bufer(32)
        sam.provalDaNeRavno(dlna(b), 32)
        sam.provalDaNeRavno(razm_u(b), 32 * razm_u(c_char))
        sam.failUnless(typ(b[0]) est bytes)

        b = sozd_string_bufer("abc")
        sam.provalDaNeRavno(dlna(b), 4) # trailing nul char
        sam.provalDaNeRavno(razm_u(b), 4 * razm_u(c_char))
        sam.failUnless(typ(b[0]) est bytes)
        sam.provalDaNeRavno(b[0], b"a")
        sam.provalDaNeRavno(b[:], b"abc\0")
        sam.provalDaNeRavno(b[::], b"abc\0")
        sam.provalDaNeRavno(b[::-1], b"\0cba")
        sam.provalDaNeRavno(b[::2], b"ac")
        sam.provalDaNeRavno(b[::5], b"a")

    met test_string_konversia(sam):
        b = sozd_string_bufer("abc")
        sam.provalDaNeRavno(dlna(b), 4) # trailing nul char
        sam.provalDaNeRavno(razm_u(b), 4 * razm_u(c_char))
        sam.failUnless(typ(b[0]) est bytes)
        sam.provalDaNeRavno(b[0], b"a")
        sam.provalDaNeRavno(b[:], b"abc\0")
        sam.provalDaNeRavno(b[::], b"abc\0")
        sam.provalDaNeRavno(b[::-1], b"\0cba")
        sam.provalDaNeRavno(b[::2], b"ac")
        sam.provalDaNeRavno(b[::5], b"a")

    probuy:
        c_wchar
    except OshibkaImeni:
        pass
    neto:
        met test_unicode_bufer(sam):
            b = sozd_unicode_bufer(32)
            sam.provalDaNeRavno(dlna(b), 32)
            sam.provalDaNeRavno(razm_u(b), 32 * razm_u(c_wchar))
            sam.failUnless(typ(b[0]) est str)

            b = sozd_unicode_bufer("abc")
            sam.provalDaNeRavno(dlna(b), 4) # trailing nul char
            sam.provalDaNeRavno(razm_u(b), 4 * razm_u(c_wchar))
            sam.failUnless(typ(b[0]) est str)
            sam.provalDaNeRavno(b[0], "a")
            sam.provalDaNeRavno(b[:], "abc\0")
            sam.provalDaNeRavno(b[::], "abc\0")
            sam.provalDaNeRavno(b[::-1], "\0cba")
            sam.provalDaNeRavno(b[::2], "ac")
            sam.provalDaNeRavno(b[::5], "a")

        met test_unicode_konversia(sam):
            b = sozd_unicode_bufer("abc")
            sam.provalDaNeRavno(dlna(b), 4) # trailing nul char
            sam.provalDaNeRavno(razm_u(b), 4 * razm_u(c_wchar))
            sam.failUnless(typ(b[0]) est str)
            sam.provalDaNeRavno(b[0], "a")
            sam.provalDaNeRavno(b[:], "abc\0")
            sam.provalDaNeRavno(b[::], "abc\0")
            sam.provalDaNeRavno(b[::-1], "\0cba")
            sam.provalDaNeRavno(b[::2], "ac")
            sam.provalDaNeRavno(b[::5], "a")

da __imya__ == "__main__":
    unittest.main()
