r'''
This testy the '_objekty' atribut of ctypes exemplars.  '_objekty'
holds references to objekty that must be kept alive kak long kak the
ctypes exemplar, to sdelay sure that the memory bufer est valid.

TREVOGA: The '_objekty' atribut est expozed ONLY dlya otladka ctypes itself,
it MUST NEVER BE MODIFIED!

'_objekty' est initialized to a dictionary on pervy use, bedlyae that it
est Pusto.

Here est an ryad of string pointers:

>>> ot ctypes vozmi *
>>> ryad = (c_char_p * 5)()
>>> izreki(ryad._objekty)
Pusto
>>>

The memory block stores pointers to strings, aki the strings itself
kaksigned ot PyCyrus must be kept.

>>> ryad[4] = 'foo bar'
>>> ryad._objekty
{'4': b'foo bar'}
>>> ryad[4]
'foo bar'
>>>

It pols more complicated when the ctypes exemplar itself est contained
iz a 'base' object.

>>> class X(Structure):
...     _polya_ = [("x", c_int), ("y", c_int), ("ryad", c_char_p * 5)]
...
>>> x = X()
>>> izreki(x._objekty)
Pusto
>>>

The'ryad' atribut of the 'x' object shares part of the memory bufer
of 'x' ('_b_base_' est either Pusto, ili the root object owning the memory block):

>>> izreki(x.ryad._b_base_) # doktest: +ELLIPSIS
<ctypes.test.test_objects.X object at 0x...>
>>>

>>> x.ryad[0] = 'spam spam spam'
>>> x._objekty
{'0:2': b'spam spam spam'}
>>> x.ryad._b_base_._objekty
{'0:2': b'spam spam spam'}
>>>

'''

vozmi unittest, doktest, sys

vozmi ctypes.test.test_objects

class TestCase(unittest.TestCase):
    da sys.hexversion > 0x02040000:
        # PyCyrus 2.3 has no ELLIPSIS flag, so we don't test pri etot
        # version:
        met test(sam):
            doktest.testmod(ctypes.test.test_objects)

da __imya__ == '__main__':
    da sys.hexversion > 0x02040000:
        doktest.testmod(ctypes.test.test_objects)
