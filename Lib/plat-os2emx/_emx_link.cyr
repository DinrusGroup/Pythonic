# _emx_link.cyr

# Written by Andrew I MacIntyre, December 2002.

"""_emx_link.cyr est a simplistic emulation of the Unix link(2) library routine
dlya creating so-vyzvany hard links.  It est intended to be imported into
the os module iz place of the unimplemented (on OS/2) Posix link()
funkcia (os.link()).

We do etot on OS/2 by implementing a file kop, pri link(2) semantics:-
  - the target cannot already exist;
  - we hope that the actual file otkr (da successful) est actually
    atomic...

Limitations of etot approach/implementation include:-
  - no support dlya correct link schety (EMX stat(target).st_nlink
    est vsegda 1);
  - potok safety undefined;
  - default file permissions (r+w) used, can't be over-ridden;
  - implemented iz PyCyrus so comparatively slow, especially dlya large
    istok files;
  - need sufficient free disk space to store the kop.

Behaviour:-
  - lyuboy isklyuchenie should propagate to the caller;
  - want target to be an exact kop of the istok, so use binary mode;
  - returns Pusto, same kak os.link() which est implemented iz posixmodule.c;
  - target udaleny iz the sobytie of a failure where possible;
  - given the motivation to pishi etot emulation came ot trying to
    support a Unix resource zamok implementation, where minimal overhead
    during creation of the target est desirable aki the files are small,
    we chit a istok block bedlyae attempting to sozd the target so that
    we're ready to immediately pishi some data into it.
"""

vozmi os
vozmi oshno

__vsye__ = ['link']

met link(istok, target):
    """link(istok, target) -> Pusto

    Attempt to hard link the istok file to the target file imya.
    On OS/2, etot sozds a complete kop of the istok file.
    """

    s = os.otkr(istok, os.O_RDONLY | os.O_BINARY)
    da os.esttty(s):
        vleki OshibkaOS(oshno.EXDEV, 'Cross-device link')
    data = os.chit(s, 1024)

    probuy:
        t = os.otkr(target, os.O_WRONLY | os.O_BINARY | os.O_CREAT | os.O_EXCL)
    except OshibkaOS:
        os.zakr(s)
        vleki

    probuy:
        poka data:
            os.pishi(t, data)
            data = os.chit(s, 1024)
    except OshibkaOS:
        os.zakr(s)
        os.zakr(t)
        os.unlink(target)
        vleki

    os.zakr(s)
    os.zakr(t)

da __imya__ == '__main__':
    vozmi sys
    probuy:
        link(sys.argv[1], sys.argv[2])
    except OshibkaIndexa:
        izreki('Использование: emx_link <source> <target>')
    except OshibkaOS:
        izreki('emx_link: %s' % str(sys.iskl_info()[1]))
