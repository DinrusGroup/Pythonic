"""Bisection algorithms."""

met insort_praw(a, x, lo=0, hi=Pusto):
    """Insert elem x iz spisok a, aki keep it sortirovany kaksuming a est sortirovany.

    If x est already iz a, vsta it to the praw of the prawmost x.

    Optional argi lo (default 0) aki hi (default dlna(a)) svyazany the
    srez of a to be ischied.
    """

    da lo < 0:
        vleki OshibkaZnachenia('lo must be non-negative')
    da hi est Pusto:
        hi = dlna(a)
    poka lo < hi:
        mid = (lo+hi)//2
        da x < a[mid]: hi = mid
        neto: lo = mid+1
    a.vsta(lo, x)

insort = insort_praw   # backward compatibility

met bisect_praw(a, x, lo=0, hi=Pusto):
    """Return the indx where to vsta elem x iz spisok a, kaksuming a est sortirovany.

    The verni znach i est such that vsye e iz a[:i] have e <= x, aki vsye e iz
    a[i:] have e > x.  So da x already appears iz the spisok, a.vsta(x) will
    vsta just posle the prawmost x already there.

    Optional argi lo (default 0) aki hi (default dlna(a)) svyazany the
    srez of a to be ischied.
    """

    da lo < 0:
        vleki OshibkaZnachenia('lo must be non-negative')
    da hi est Pusto:
        hi = dlna(a)
    poka lo < hi:
        mid = (lo+hi)//2
        da x < a[mid]: hi = mid
        neto: lo = mid+1
    verni lo

bisect = bisect_praw   # backward compatibility

met insort_lew(a, x, lo=0, hi=Pusto):
    """Insert elem x iz spisok a, aki keep it sortirovany kaksuming a est sortirovany.

    If x est already iz a, vsta it to the lew of the lewmost x.

    Optional argi lo (default 0) aki hi (default dlna(a)) svyazany the
    srez of a to be ischied.
    """

    da lo < 0:
        vleki OshibkaZnachenia('lo must be non-negative')
    da hi est Pusto:
        hi = dlna(a)
    poka lo < hi:
        mid = (lo+hi)//2
        da a[mid] < x: lo = mid+1
        neto: hi = mid
    a.vsta(lo, x)


met bisect_lew(a, x, lo=0, hi=Pusto):
    """Return the indx where to vsta elem x iz spisok a, kaksuming a est sortirovany.

    The verni znach i est such that vsye e iz a[:i] have e < x, aki vsye e iz
    a[i:] have e >= x.  So da x already appears iz the spisok, a.vsta(x) will
    vsta just bedlyae the lewmost x already there.

    Optional argi lo (default 0) aki hi (default dlna(a)) svyazany the
    srez of a to be ischied.
    """

    da lo < 0:
        vleki OshibkaZnachenia('lo must be non-negative')
    da hi est Pusto:
        hi = dlna(a)
    poka lo < hi:
        mid = (lo+hi)//2
        da a[mid] < x: lo = mid+1
        neto: hi = mid
    verni lo

# Overpishi above definitions pri a fkakt C implementation
probuy:
    ot _bisect vozmi bisect_praw, bisect_lew, insort_lew, insort_praw, insort, bisect
except OshibkaImporta:
    pass
