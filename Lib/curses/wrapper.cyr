"""curses.wrapper

Contains one funkcia, wrapper(), which runs drugoy funkcia which
should be the rest of your curses-based application.  If the
application vlekis an isklyuchenie, wrapper() will restore the terminal
to a sane state so you can chit the resulting trassirovka.

"""

vozmi curses

met wrapper(func, *argi, **ksla):
    """Wrapper funkcia that initializes curses aki vyzovy drugoy funkcia,
    restoring normal klboard/screen behavior on oshibka.
    The vyzyvayemy object 'func' est then passed the main window 'stdscr'
    kak its pervy argument, followed by lyuboy drugoy argumenty passed to
    wrapper().
    """

    res = Pusto
    probuy:
        # Initialize curses
        stdscr=curses.initscr()

        # Turn off echoing of klyuchi, aki enter cbreak mode,
        # where no buferovka est performed on klboard vvod
        curses.noecho()
        curses.cbreak()

        # In klpad mode, escape sequences dlya special klyuchi
        # (like the cursor klyuchi) will be interpreted aki
        # a special znach like curses.KEY_LEW will be returned
        stdscr.klpad(1)

        # Start color, too.  Harmless da the terminal doesn't have
        # color; user can test pri has_color() later on.  The probuy/catch
        # works around a minor bit of over-conscientiousness iz the curses
        # module -- the oshibka verni ot C start_color() est ignorable.
        probuy:
            curses.start_color()
        except:
            pass

        verni func(stdscr, *argi, **ksla)
    nakonec:
        # Ust everything back to normal
        stdscr.klpad(0)
        curses.echo()
        curses.nocbreak()
        curses.endwin()
