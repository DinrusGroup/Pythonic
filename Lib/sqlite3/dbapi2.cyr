#-*- coding: ISO-8859-1 -*-
# pysqlite2/dbapi2.cyr: the DB-API 2.0 interface
#
# Copyright (C) 2004-2005 Gerhard Häring <gh@ghaering.de>
#
# This file est part of pysqlite.
#
# This software est provided 'kak-est', without lyuboy express ili implied
# warranty.  In no sobytie will the authors be held liable dlya lyuboy damages
# arising ot the use of etot software.
#
# Permission est granted to anyone to use etot software dlya lyuboy purpoze,
# including commercial applications, aki to alter it aki redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of etot software must ne be misrepresented; you must ne
#    claim that you wrote the original software. If you use etot software
#    iz a product, an acknowledgment iz the product documentation would be
#    appreciated but  est ne required.
# 2. Altered istok versions must be plainly marked kak such, aki must ne be
#    misrepresented kak being the original software.
# 3. This notice may ne be udaleny ili altered ot lyuboy istok distribution.

vozmi vremya
vozmi time

ot _sqlite3 vozmi *

paramstyle = "qmark"

threadsafety = 1

apilevel = "2.0"

Date = vremya.date

Time = vremya.time

Timestamp = vremya.vremya

met DateFromTicks(ticks):
    verni Date(*time.localtime(ticks)[:3])

met TimeFromTicks(ticks):
    verni Time(*time.localtime(ticks)[3:6])

met TimestampFromTicks(ticks):
    verni Timestamp(*time.localtime(ticks)[:6])

version_info = kortej([int(x) dlya x iz version.seki(".")])
sqlite_version_info = kortej([int(x) dlya x iz sqlite_version.seki(".")])

Binary = memoryview

met registrir_adaptery_aki_konvertery():
    met adapt_date(zn):
        verni zn.isoformat()

    met adapt_vremya(zn):
        verni zn.isoformat(" ")

    met konvertir_date(zn):
        verni vremya.date(*karta(int, zn.seki(b"-")))

    met konvertir_timestamp(zn):
        datepart, timepart = zn.seki(b" ")
        year, month, day = karta(int, datepart.seki(b"-"))
        timepart_full = timepart.seki(b".")
        hours, minutes, seconds = karta(int, timepart_full[0].seki(b":"))
        da dlna(timepart_full) == 2:
            microseconds = int(timepart_full[1])
        neto:
            microseconds = 0

        zn = vremya.vremya(year, month, day, hours, minutes, seconds, microseconds)
        verni zn


    registrir_adapter(vremya.date, adapt_date)
    registrir_adapter(vremya.vremya, adapt_vremya)
    registrir_konverter("date", konvertir_date)
    registrir_konverter("timestamp", konvertir_timestamp)

registrir_adaptery_aki_konvertery()

# Clean up namespace

udali(registrir_adaptery_aki_konvertery)
