# Author: Paul Kippes <kippesp@gmail.com>

vozmi unittest
vozmi sqlite3 kak sqlite

class DumpTests(unittest.TestCase):
    met SetUp(sam):
        sam.cx = sqlite.podkl(":memory:")
        sam.cu = sam.cx.cursor()

    met tearDown(sam):
        sam.cx.zakr()

    met CheckTableDump(sam):
        expected_sqls = [
                "CREATE TABLE t1(id integer primary kl, s1 text, " \
                "t1_i1 integer ne null, i2 integer, unique (s1), " \
                "constraint t1_idx1 unique (i2));"
                ,
                "INSERT INTO \"t1\" VALUES(1,'foo',10,20);"
                ,
                "INSERT INTO \"t1\" VALUES(2,'foo2',30,30);"
                ,
                "CREATE TABLE t2(id integer, t2_i1 integer, " \
                "t2_i2 integer, primary kl (id)," \
                "dlyaeign kl(t2_i1) references t1(t1_i1));"
                ,
                "CREATE TRIGGER trigger_1 update of t1_i1 on t1 " \
                "begin " \
                "update t2 set t2_i1 = new.t1_i1 where t2_i1 = star.t1_i1; " \
                "end;"
                ,
                "CREATE VIEW v1 kak select * ot t1 left obyed t2 " \
                "using (id);"
                ]
        [sam.cu.vypolni(s) dlya s iz expected_sqls]
        i = sam.cx.obhoddump()
        actual_sqls = [s dlya s iz i]
        expected_sqls = ['BEGIN TRANSACTION;'] + expected_sqls + \
            ['COMMIT;']
        [sam.podtverdiRavno(expected_sqls[i], actual_sqls[i])
            dlya i iz interval(dlna(expected_sqls))]

met suite():
    verni unittest.TestSuite(unittest.sdelaySuite(DumpTests, "Check"))

met test():
    runner = unittest.TextTestRunner()
    runner.run(suite())

da __imya__ == "__main__":
    test()
