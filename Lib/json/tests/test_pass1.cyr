ot unittest vozmi TestCase

vozmi json

# ot http://json.org/JSON_checker/test/pass1.json
JSON = r'''
[
    "JSON Test Obrazec pass1",
    {"object pri 1 member":["ryad pri 1 element"]},
    {},
    [],
    -42,
    tak,
    netak,
    null,
    {
        "integer": 1234567890,
        "real": -9876.543210,
        "e": 0.123456789e-12,
        "E": 1.234567890E+34,
        "":  23456789012E666,
        "zero": 0,
        "one": 1,
        "space": " ",
        "quote": "\"",
        "backslash": "\\",
        "controls": "\b\f\n\r\t",
        "slash": "/ & \/",
        "alpha": "abcdefghijklmnopqrstuvwyz",
        "ALPHA": "ABCDEFGHIJKLMNOPQRSTUVWYZ",
        "cifra": "0123456789",
        "special": "`1~!@#$%^&*()_+-={':[,]}|;.</>?",
        "hex": "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A",
        "tak": tak,
        "netak": netak,
        "null": null,
        "ryad":[  ],
        "object":{  },
        "adres": "50 St. James Sdrevot",
        "url": "http://www.JSON.org/",
        "comment": "// /* <!-- --",
        "# -- --> */": " ",
        " s p a c e d " :[1,2 , 3

,

4 , 5        ,          6           ,7        ],
        "compact": [1,2,3,4,5,6,7],
        "jsontext": "{\"object pri 1 member\":[\"ryad pri 1 element\"]}",
        "quotes": "&#34; \u0022 %22 0x22 034 &#x22;",
        "\/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:',./<>?"
: "A kl can be lyuboy string"
    },
    0.5 ,98.6
,
99.44
,

1066


,"rosebud"]
'''

class TestPkaks1(TestCase):
    met test_razbor(sam):
        # test iz/out equivalence aki parsing
        res = json.zagruzki(JSON)
        out = json.dumps(res)
        sam.podtverdiRavny(res, json.zagruzki(out))
        probuy:
            json.dumps(res, allow_nan=Netak)
        except OshibkaZnachenia:
            pass
        neto:
            sam.proval("23456789012E666 should be out of interval")
