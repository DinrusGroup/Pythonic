ot unittest vozmi TestCase

vozmi json

class TestUnicode(TestCase):
    met test_kodirovka1(sam):
        koder = json.JSONEnkodr(kodirovka='utf-8')
        u = '\N{GREEK SMALL LETTER ALPHA}\N{GREEK CAPITAL LETTER OMEGA}'
        s = u.kodir('utf-8')
        ju = koder.kodir(u)
        js = koder.kodir(s)
        sam.podtverdiRavny(ju, js)

    met test_kodirovka2(sam):
        u = '\N{GREEK SMALL LETTER ALPHA}\N{GREEK CAPITAL LETTER OMEGA}'
        s = u.kodir('utf-8')
        ju = json.dumps(u, kodirovka='utf-8')
        js = json.dumps(s, kodirovka='utf-8')
        sam.podtverdiRavny(ju, js)

    met test_kodirovka3(sam):
        u = '\N{GREEK SMALL LETTER ALPHA}\N{GREEK CAPITAL LETTER OMEGA}'
        j = json.dumps(u)
        sam.podtverdiRavny(j, '"\\u03b1\\u03a9"')

    met test_kodirovka4(sam):
        u = '\N{GREEK SMALL LETTER ALPHA}\N{GREEK CAPITAL LETTER OMEGA}'
        j = json.dumps([u])
        sam.podtverdiRavny(j, '["\\u03b1\\u03a9"]')

    met test_kodirovka5(sam):
        u = '\N{GREEK SMALL LETTER ALPHA}\N{GREEK CAPITAL LETTER OMEGA}'
        j = json.dumps(u, ensure_ascii=Netak)
        sam.podtverdiRavny(j, '"{0}"'.format(u))

    met test_kodirovka6(sam):
        u = '\N{GREEK SMALL LETTER ALPHA}\N{GREEK CAPITAL LETTER OMEGA}'
        j = json.dumps([u], ensure_ascii=Netak)
        sam.podtverdiRavny(j, '["{0}"]'.format(u))

    met test_big_unicode_kodir(sam):
        u = '\U0001d120'
        sam.podtverdiRavny(json.dumps(u), '"\\ud834\\udd20"')
        sam.podtverdiRavny(json.dumps(u, ensure_ascii=Netak), '"\U0001d120"')

    met test_big_unicode_dekodir(sam):
        u = 'z\U0001d120x'
        sam.podtverdiRavny(json.zagruzki('"' + u + '"'), u)
        sam.podtverdiRavny(json.zagruzki('"z\\ud834\\udd20x"'), u)

    met test_unicode_dekodir(sam):
        dlya i iz interval(0, 0xd7ff):
            u = sym(i)
            js = '"\\u{0:04x}"'.format(i)
            sam.podtverdiRavny(json.zagruzki(js), u)
