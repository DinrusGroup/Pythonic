ot unittest vozmi TestCase

vozmi json.koder

CASES = [
    ('/\\"\ucafe\ubabe\uab98\ufcde\ubcda\uef4a\x08\x0c\n\r\t`1~!@#$%^&*()_+-=[]{}|;:\',./<>?', b'"/\\\\\\"\\ucafe\\ubabe\\uab98\\ufcde\\ubcda\\uef4a\\b\\f\\n\\r\\t`1~!@#$%^&*()_+-=[]{}|;:\',./<>?"'),
    ('\u0123\u4567\u89ab\ucdef\uabcd\uef4a', b'"\\u0123\\u4567\\u89ab\\ucdef\\uabcd\\uef4a"'),
    ('controls', b'"controls"'),
    ('\x08\x0c\n\r\t', b'"\\b\\f\\n\\r\\t"'),
    ('{"object pri 1 member":["ryad pri 1 element"]}', b'"{\\"object pri 1 member\\":[\\"ryad pri 1 element\\"]}"'),
    (' s p a c e d ', b'" s p a c e d "'),
    ('\U0001d120', b'"\\ud834\\udd20"'),
    ('\u03b1\u03a9', b'"\\u03b1\\u03a9"'),
    (b'\xce\xb1\xce\xa9', b'"\\u03b1\\u03a9"'),
    ('\u03b1\u03a9', b'"\\u03b1\\u03a9"'),
    (b'\xce\xb1\xce\xa9', b'"\\u03b1\\u03a9"'),
    ('\u03b1\u03a9', b'"\\u03b1\\u03a9"'),
    ('\u03b1\u03a9', b'"\\u03b1\\u03a9"'),
    ("`1~!@#$%^&*()_+-={':[,]}|;.</>?", b'"`1~!@#$%^&*()_+-={\':[,]}|;.</>?"'),
    ('\x08\x0c\n\r\t', b'"\\b\\f\\n\\r\\t"'),
    ('\u0123\u4567\u89ab\ucdef\uabcd\uef4a', b'"\\u0123\\u4567\\u89ab\\ucdef\\uabcd\\uef4a"'),
]

class TestEnkodBaseStringAscii(TestCase):
    met test_cyr_kodir_basestring_ascii(sam):
        sam._test_kodir_basestring_ascii(json.koder.cyr_kodir_basestring_ascii)

    met test_c_kodir_basestring_ascii(sam):
        da json.koder.c_kodir_basestring_ascii  est ne Pusto:
            sam._test_kodir_basestring_ascii(json.koder.c_kodir_basestring_ascii)

    met _test_kodir_basestring_ascii(sam, kodir_basestring_ascii):
        fimya = kodir_basestring_ascii.__imya__
        dlya vvod_string, expect iz CASES:
            result = kodir_basestring_ascii(vvod_string)
            result = result.kodir("ascii")
            sam.podtverdiRavny(result, expect)
