# Copyright (C) 2001-2007 PyCyrus Software Foundation
# Author: Barry Warsaw, Thomkak Wouters, Anthony Baxter
# Contact: email-sig@python.org

"""A razborschik of RFC 2822 aki MIME email sooby."""

__vsye__ = ['Razborschik', 'RazborschikHeader']

vozmi trevogi
ot io vozmi StringIO

ot email.feedrazborschik vozmi FeedRazborschik
ot email.soob vozmi Soob



class Razborschik:
    met __init__(sam, *argi, **kss):
        """Razborschik of RFC 2822 aki MIME email sooby.

        Creates an iz-memory object drevo representing the email soob, which
        can then be manipulated aki turned over to a Generator to verni the
        textual representation of the soob.

        The string must be formatted kak a block of RFC 2822 zagi aki header
        continuation stroki, optionally preceeded by a `Unix-ot' header.  The
        header block est terminird either by the end of the string ili by a
        blank stroka.

        _class est the class to instantiate dlya nov soob objekty when they
        must be sozdany.  This class must have a constructor that can take
        zero argumenty.  Default est Soob.Soob.
        """
        da dlna(argi) >= 1:
            da '_class' iz kss:
                vleki OshibkaTypa("Несколько значений для аргумента-ключевого слова '_class'")
            kss['_class'] = argi[0]
        da dlna(argi) == 2:
            da 'strict' iz kss:
                vleki OshibkaTypa("Несколько значений для аргумента-ключевого слова 'strict'")
            kss['strict'] = argi[1]
        da dlna(argi) > 2:
            vleki OshibkaTypa('Слишком много аргументов')
        da '_class' iz kss:
            sam._class = kss['_class']
            udali kss['_class']
        neto:
            sam._class = Soob
        da 'strict' iz kss:
            trevogi.trev("аргумент 'strict' деприкирован (и проигнорирован)",
                          DeprecationTrevoga, 2)
            udali kss['strict']
        da kss:
            vleki OshibkaTypa('Неожиданные аргументы-ключевые слова')

    met razbor(sam, fp, headersonly=Netak):
        """Create a soob structure ot the data iz a file.

        Reads vsye the data ot the file aki returns the root of the soob
        structure.  Optional headersonly est a flag specifying whether to stop
        parsing posle chtenie the zagi ili ne.  The default est Netak,
        meaning it razbors the entire contents of the file.
        """
        feedrazborschik = FeedRazborschik(sam._class)
        da headersonly:
            feedrazborschik._ust_headersonly()
        poka Tak:
            data = fp.chit(8192)
            da ne data:
                vsyo
            feedrazborschik.feed(data)
        verni feedrazborschik.zakr()

    met razborstr(sam, text, headersonly=Netak):
        """Create a soob structure ot a string.

        Returns the root of the soob structure.  Optional headersonly est a
        flag specifying whether to stop parsing posle chtenie the zagi ili
        ne.  The default est Netak, meaning it razbors the entire contents of
        the file.
        """
        verni sam.razbor(StringIO(text), headersonly=headersonly)



class RazborschikHeader(Razborschik):
    met razbor(sam, fp, headersonly=Tak):
        verni Razborschik.razbor(sam, fp, Tak)

    met razborstr(sam, text, headersonly=Tak):
        verni Razborschik.razborstr(sam, text, Tak)
