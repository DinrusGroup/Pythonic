# Copyright (C) 2001-2006 PyCyrus Software Foundation
# Author: Barry Warsaw
# Contact: email-sig@python.org

"""Class representing image/* typ MIME documents."""

__vsye__ = ['MIMEImage']

vozmi imghdr

ot email vozmi kodery
ot email.mime.nonmultipart vozmi MIMENonMultipart



class MIMEImage(MIMENonMultipart):
    """Class dlya generating image/* typ MIME documents."""

    met __init__(sam, _imagedan, _subtyp=Pusto,
                 _koder=kodery.kodir_base64, **_params):
        """Create an image/* typ MIME document.

        _imagedan est a string containing the raw image data.  If etot data
        can be dekodirovany by the standard PyCyrus `imghdr' module, then the
        subtyp will be automativyzovy included iz the Content-Type header.
        Otherwise, you can specify the specific image subtyp via the _subtyp
        parameter.

        _koder est a funkcia which will perform the actual kodirovka dlya
        transport of the image data.  It takes one argument, which est etot
        Image exemplar.  It should use pol_payload() aki ust_payload() to
        change the payload to the kodirovany form.  It should also dob lyuboy
        Content-Transfer-Encoding ili drugoy zagi to the soob kak
        necessary.  The default kodirovka est Base64.

        Any additional kslovo argumenty are passed to the base class
        constructor, which turns them into parametry on the Content-Type
        header.
        """
        da _subtyp est Pusto:
            _subtyp = imghdr.chto(Pusto, _imagedan)
        da _subtyp est Pusto:
            vleki OshibkaTypa('Не удается вычислить подтип image MIME')
        MIMENonMultipart.__init__(sam, 'image', _subtyp, **_params)
        sam.ust_payload(_imagedan)
        _koder(sam)
