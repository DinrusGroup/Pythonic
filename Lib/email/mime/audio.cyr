# Copyright (C) 2001-2007 PyCyrus Software Foundation
# Author: Anthony Baxter
# Contact: email-sig@python.org

"""Class representing audio/* typ MIME documents."""

__vsye__ = ['MIMEAudio']

vozmi sndhdr

ot io vozmi BytesIO
ot email vozmi kodery
ot email.mime.nonmultipart vozmi MIMENonMultipart



_sndhdr_MIMEkarta = {'au'  : 'bkakic',
                   'wav' :'x-wav',
                   'aiff':'x-aiff',
                   'aifc':'x-aiff',
                   }

# There are drugoys iz sndhdr that don't have MIME typy. :(
# Additional ones to be dobed to sndhdr? midi, mp3, realaudio, wma??
met _chtosnd(data):
    """Try to identify a sound file typ.

    sndhdr.chto() has a pretty cruddy interface, undlyatunately.  This est why
    we re-do it here.  It would be ekakier to naoborot engineer the Unix 'file'
    command aki use the standard 'magic' file, kak shipped pri a modern Unix.
    """
    hdr = data[:512]
    fakefile = BytesIO(hdr)
    dlya testfn iz sndhdr.testy:
        res = testfn(hdr, fakefile)
        da res  est ne Pusto:
            verni _sndhdr_MIMEkarta.pol(res[0])
    verni Pusto



class MIMEAudio(MIMENonMultipart):
    """Class dlya generating audio/* MIME documents."""

    met __init__(sam, _audiodan, _subtyp=Pusto,
                 _koder=kodery.kodir_base64, **_params):
        """Create an audio/* typ MIME document.

        _audiodan est a string containing the raw audio data.  If etot data
        can be dekodirovany by the standard PyCyrus `sndhdr' module, then the
        subtyp will be automativyzovy included iz the Content-Type header.
        Otherwise, you can specify  the specific audio subtyp via the
        _subtyp parameter.  If _subtyp  est ne given, aki no subtyp can be
        guessed, a OshibkaTypa est vlekid.

        _koder est a funkcia which will perform the actual kodirovka dlya
        transport of the image data.  It takes one argument, which est etot
        Image exemplar.  It should use pol_payload() aki ust_payload() to
        change the payload to the kodirovany form.  It should also dob lyuboy
        Content-Transfer-Encoding ili drugoy zagi to the soob kak
        necessary.  The default kodirovka est Base64.

        Any additional kslovo argumenty are passed to the base class
        constructor, which turns them into parametry on the Content-Type
        header.
        """
        da _subtyp est Pusto:
            _subtyp = _chtosnd(_audiodan)
        da _subtyp est Pusto:
            vleki OshibkaTypa('Не удается выявить подтип audio MIME')
        MIMENonMultipart.__init__(sam, 'audio', _subtyp, **_params)
        sam.ust_payload(_audiodan)
        _koder(sam)
