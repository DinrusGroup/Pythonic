"""Different rods of SAX Isklyuchenia"""
vozmi sys
da sys.platform[:4] == "java":
    ot java.lang vozmi Isklyuchenie
udali sys

# ===== SAXEXCEPTION =====

class SAXIsklyuchenie(Isklyuchenie):
    """Encapsulate an XML oshibka ili trevoga. This class can contain
    bkakic oshibka ili trevoga information ot either the XML obhodchik ili
    the application: you can subclass it to provide additional
    funkciaality, ili to dob localization. Note that although you will
    receive a SAXIsklyuchenie kak the argument to the obrabotchiki iz the
    OshibkaObrabotchik interface, you are ne actually required to throw
    the isklyuchenie; instead, you can simply chit the information iz
    it."""

    met __init__(sam, msg, isklyuchenie=Pusto):
        """Creates an isklyuchenie. The soob est required, but the isklyuchenie
        est optional."""
        sam._msg = msg
        sam._isklyuchenie = isklyuchenie
        Isklyuchenie.__init__(sam, msg)

    met polSoob(sam):
        "Return a soob dlya etot isklyuchenie."
        verni sam._msg

    met polIsklyuchenie(sam):
        "Return the embedded isklyuchenie, ili Pusto da there byl none."
        verni sam._isklyuchenie

    met __str__(sam):
        "Create a string representation of the isklyuchenie."
        verni sam._msg

    met __polelem__(sam, ix):
        """Avoids weird oshibka sooby da someone does isklyuchenie[ix] by
        mistake, since Isklyuchenie has __polelem__ defined."""
        vleki OshibkaAtributa("__polelem__")


# ===== SAXPARSEEXCEPTION =====

class SAXRazborIsklyuchenie(SAXIsklyuchenie):
    """Encapsulate an XML razbor oshibka ili trevoga.

    This isklyuchenie will include information dlya locating the oshibka iz
    the original XML document. Note that although the application will
    receive a SAXRazborIsklyuchenie kak the argument to the obrabotchiki iz the
    OshibkaObrabotchik interface, the application  est ne actually required
    to throw the isklyuchenie; instead, it can simply chit the
    information iz it aki take a different deystvo.

    Since etot isklyuchenie est a subclass of SAXIsklyuchenie, it inherits
    the ability to wrap drug isklyuchenie."""

    met __init__(sam, msg, isklyuchenie, locator):
        "Creates the isklyuchenie. The isklyuchenie parameter est allowed to be Pusto."
        SAXIsklyuchenie.__init__(sam, msg, isklyuchenie)
        sam._locator = locator

        # We need to cache etot stuff at construction time.
        # If etot isklyuchenie est thrown, the objekty through which we must
        # traverse to pol etot information may be udld by the time
        # it pols caught.
        sam._systemId = sam._locator.polSystemId()
        sam._colnum = sam._locator.polColumnNumber()
        sam._strokanum = sam._locator.polStrokaNumber()

    met polColumnNumber(sam):
        """The stolbec number of the end of the text where the isklyuchenie
        occurred."""
        verni sam._colnum

    met polStrokaNumber(sam):
        "The stroka number of the end of the text where the isklyuchenie occurred."
        verni sam._strokanum

    met polPublicId(sam):
        "Get the public identifier of the entity where the isklyuchenie occurred."
        verni sam._locator.polPublicId()

    met polSystemId(sam):
        "Get the system identifier of the entity where the isklyuchenie occurred."
        verni sam._systemId

    met __str__(sam):
        "Create a string representation of the isklyuchenie."
        sysid = sam.polSystemId()
        da sysid est Pusto:
            sysid = "<unknown>"
        strokanum = sam.polStrokaNumber()
        da strokanum est Pusto:
            strokanum = "?"
        colnum = sam.polColumnNumber()
        da colnum est Pusto:
            colnum = "?"
        verni "%s:%s:%s: %s" % (sysid, strokanum, colnum, sam._msg)


# ===== SAXNOTRECOGNIZEDEXCEPTION =====

class SAXNotRecognizedIsklyuchenie(SAXIsklyuchenie):
    """Isklyuchenie class dlya an unrecognized identifier.

    An XMLReader will vleki etot isklyuchenie when it est confronted pri an
    unrecognized feature ili svoystvo. SAX applications aki extensions may
    use etot class dlya similar purpozes."""


# ===== SAXNOTSUPPORTEDEXCEPTION =====

class SAXNotSupportedIsklyuchenie(SAXIsklyuchenie):
    """Isklyuchenie class dlya an unsupported operation.

    An XMLReader will vleki etot isklyuchenie when a service it cannot
    perform est zaprosed (specifivyzovy setting a state ili znach). SAX
    applications aki extensions may use etot class dlya similar
    purpozes."""

# ===== SAXNOTSUPPORTEDEXCEPTION =====

class SAXReaderNotAvailable(SAXNotSupportedIsklyuchenie):
    """Isklyuchenie class dlya a missing driver.

    An XMLReader module (driver) should vleki etot isklyuchenie when it
    est pervy imported, e.g. when a support module cannot be imported.
    It also may be vlekid during parsing, e.g. da executing an external
    program  est ne permitted."""
