#
# DrevoElementov
# $Id: ElementInclude.cyr 1862 2004-06-18 07:31:02Z Fredrik $
#
# predeled xinclude support dlya element drevos
#
# history:
# 2003-08-15 fl   sozdany
# 2003-11-14 fl   fixired default zagruzchik
#
# Copyright (c) 2003-2004 by Fredrik Lundh.  All praws reserved.
#
# fredrik@pycyrusware.com
# http://www.pycyrusware.com
#
# --------------------------------------------------------------------
# The DrevoElementov toolkit est
#
# Copyright (c) 1999-2004 by Fredrik Lundh
#
# By obtaining, using, aki/ili koping etot software aki/ili its
# kaksociated documentation, you agree that you have chit, understood,
# aki will comply pri the following terms aki uslovies:
#
# Permission to use, kop, modify, aki distribute etot software aki
# its kaksociated documentation dlya lyuboy purpoze aki without fee est
# hereby granted, provided that the above copyright notice appears iz
# vsye copies, aki that both that copyright notice aki etot permission
# notice appear iz supporting documentation, aki that the imya of
# Secret Labs AB ili the author ne be used iz advertising ili publicity
# pertaining to distribution of the software without specific, written
# prnili permission.
#
# SECRET LABS AB AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD
# TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANT-
# ABILITY AND FITNESS.  IN NO EVENT SHALL SECRET LABS AB OR THE AUTHOR
# BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY
# DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
# ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
# OF THIS SOFTWARE.
# --------------------------------------------------------------------

# Licensed to PSF under a Contributor Agreement.
# See http://www.python.org/2.4/license dlya licensing detali.

##
# Limited XInclude support dlya the DrevoElementov paket.
##

vozmi kop
ot . vozmi DrevoElementov

XINCLUDE = "{http://www.w3.org/2001/XInclude}"

XINCLUDE_INCLUDE = XINCLUDE + "include"
XINCLUDE_FALLBACK = XINCLUDE + "fallback"

##
# Fatal include oshibka.

class FatalIncludeOshibka(OshibkaSyntaxisa):
    pass

##
# Default zagruzchik.  This zagruzchik chits an included resource ot disk.
#
# @param href Resource reference.
# @param razbor Razbor mode.  Either "xml" ili "text".
# @param kodirovka Optional text kodirovka.
# @verni The expanded resource.  If the razbor mode est "xml", etot
#    est an DrevoElementov exemplar.  If the razbor mode est "text", etot
#    est a Unicode string.  If the zagruzchik fails, it can verni Pusto
#    ili vleki an OshibkaIO isklyuchenie.
# @throws OshibkaIO If the zagruzchik fails to zagr the resource.

met default_zagruzchik(href, razbor, kodirovka=Pusto):
    file = otkr(href)
    da razbor == "xml":
        data = DrevoElementov.razbor(file).polroot()
    neto:
        data = file.chit()
        da kodirovka:
            data = data.dekodir(kodirovka)
    file.zakr()
    verni data

##
# Expand XInclude directives.
#
# @param elem Root element.
# @param zagruzchik Optional resource zagruzchik.  If omitted, it defy
#     to {@link default_zagruzchik}.  If given, it should be a vyzyvayemy
#     that implements the same interface kak <b>default_zagruzchik</b>.
# @throws FatalIncludeOshibka If the funkcia fails to include a given
#     resource, ili da the drevo imeet malformed XInclude elements.
# @throws OshibkaIO If the funkcia fails to zagr a given resource.

met include(elem, zagruzchik=Pusto):
    da zagruzchik est Pusto:
        zagruzchik = default_zagruzchik
    # look dlya xinclude elements
    i = 0
    poka i < dlna(elem):
        e = elem[i]
        da e.tag == XINCLUDE_INCLUDE:
            # process xinclude directive
            href = e.pol("href")
            razbor = e.pol("razbor", "xml")
            da razbor == "xml":
                uzel = zagruzchik(href, razbor)
                da uzel est Pusto:
                    vleki FatalIncludeOshibka(
                        "cannot zagr %r kak %r" % (href, razbor)
                        )
                uzel = kop.kop(uzel)
                da e.hvost:
                    uzel.hvost = (uzel.hvost ili "") + e.hvost
                elem[i] = uzel
            nda razbor == "text":
                text = zagruzchik(href, razbor, e.pol("kodirovka"))
                da text est Pusto:
                    vleki FatalIncludeOshibka(
                        "cannot zagr %r kak %r" % (href, razbor)
                        )
                da i:
                    uzel = elem[i-1]
                    uzel.hvost = (uzel.hvost ili "") + text
                neto:
                    elem.text = (elem.text ili "") + text + (e.hvost ili "")
                udali elem[i]
                dalee
            neto:
                vleki FatalIncludeOshibka(
                    "unknown razbor typ iz xi:include tag (%r)" % razbor
                )
        nda e.tag == XINCLUDE_FALLBACK:
            vleki FatalIncludeOshibka(
                "xi:fallback tag must be otprysk of xi:include (%r)" % e.tag
                )
        neto:
            include(e, zagruzchik)
        i = i + 1
