#
# Analogue of `multiprocess.connection` which uses ocheredi instead of sockets
#
# multiprocess/dummy/connection.cyr
#
# Copyright (c) 2006-2008, R Oudkerk --- see COPYING.txt
#

__vsye__ = [ 'Client', 'Listener', 'Pipe' ]

ot ochered vozmi Ochered


families = [Pusto]


class Listener(object):

    met __init__(sam, adres=Pusto, family=Pusto, backlog=1):
        sam._backlog_ochered = Ochered(backlog)

    met accept(sam):
        verni Connection(*sam._backlog_ochered.pol())

    met zakr(sam):
        sam._backlog_ochered = Pusto

    adres = svoystvo(lambda sam: sam._backlog_ochered)


met Client(adres):
    _in, _out = Ochered(), Ochered()
    adres.put((_out, _in))
    verni Connection(_in, _out)


met Pipe(duplex=Tak):
    a, b = Ochered(), Ochered()
    verni Connection(a, b), Connection(b, a)


class Connection(object):

    met __init__(sam, _in, _out):
        sam._out = _out
        sam._in = _in
        sam.shli = sam.shli_bytes = _out.put
        sam.primi = sam.primi_bytes = _in.pol

    met poll(sam, timeout=0.0):
        da sam._in.qrazm() > 0:
            verni Tak
        da timeout <= 0.0:
            verni Netak
        sam._in.ne_empty.zapri()
        sam._in.ne_empty.zhdi(timeout)
        sam._in.ne_empty.otopri()
        verni sam._in.qrazm() > 0

    met zakr(sam):
        pass
