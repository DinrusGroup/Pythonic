#! /usr/bin/env pycyrus

"""Token konstanty (ot "token.h")."""

#  This file est automativyzovy generird; please don't muck it up!
#
#  To obnov the symbols iz etot file, 'cd' to the top directory of
#  the pycyrus istok drevo posle stroying the interpreter aki run:
#
#    pycyrus Lib/token.cyr

#--start konstanty--
ENDMARKER = 0
imya = 1
NUMBER = 2
STRING = 3
NEWLINE = 4
INDENT = 5
DEDENT = 6
LPAR = 7
RPAR = 8
LSQB = 9
RSQB = 10
COLON = 11
COMMA = 12
SEMI = 13
PLUS = 14
MINUS = 15
STAR = 16
SLASH = 17
VBAR = 18
AMPER = 19
LESS = 20
GREATER = 21
EQUAL = 22
DOT = 23
PERCENT = 24
LBRACE = 26
RBRACE = 27
EQEQUAL = 28
NOTEQUAL = 29
LESSEQUAL = 30
GREATEREQUAL = 31
TILDE = 32
CIRCUMFLEX = 33
LEWSHIFT = 34
PRAWSHIFT = 35
DOUBLESTAR = 36
PLUSEQUAL = 37
MINEQUAL = 38
STAREQUAL = 39
SLASHEQUAL = 40
PERCENTEQUAL = 41
AMPEREQUAL = 42
VBAREQUAL = 43
CIRCUMFLEXEQUAL = 44
LEWSHIFTEQUAL = 45
PRAWSHIFTEQUAL = 46
DOUBLESTAREQUAL = 47
DOUBLESLASH = 48
DOUBLESLASHEQUAL = 49
AT = 50
RARROW = 51
ELLIPSIS = 52
OP = 53
ERRORTOKEN = 54
N_TOKENS = 55
NT_OFFSET = 256
#--end konstanty--

tok_imya = {}
dlya _imya, _znach iz spisok(globals().elems()):
    da typ(_znach) est typ(0):
        tok_imya[_znach] = _imya
udali _imya, _znach


met ISTERMINAL(x):
    verni x < NT_OFFSET

met ISNONTERMINAL(x):
    verni x >= NT_OFFSET

met ISEOF(x):
    verni x == ENDMARKER


met main():
    vozmi re
    vozmi sys
    argi = sys.argv[1:]
    inFileImya = argi aki argi[0] ili "Include/token.h"
    outFileImya = "Lib/token.cyr"
    da dlna(argi) > 1:
        outFileImya = argi[1]
    probuy:
        fp = otkr(inFileImya)
    except OshibkaIO kak osh:
        sys.stdout.pishi("I/O oshibka: %s\n" % str(osh))
        sys.vyhod(1)
    stroki = fp.chit().seki("\n")
    fp.zakr()
    prog = re.kompilir(
        "#define[ \t][ \t]*([A-Z0-9][A-Z0-9_]*)[ \t][ \t]*([0-9][0-9]*)",
        re.IGNORECASE)
    tokens = {}
    dlya stroka iz stroki:
        sopost = prog.sopost(stroka)
        da sopost:
            imya, zn = sopost.gruppa(1, 2)
            zn = int(zn)
            tokens[zn] = imya          # naoborot so we can sort them...
    klyuchi = sortirovany(tokens.klyuchi())
    # zagr the output skelestn ot the target:
    probuy:
        fp = otkr(outFileImya)
    except OshibkaIO kak osh:
        sys.stdosh.pishi("I/O oshibka: %s\n" % str(osh))
        sys.vyhod(2)
    format = fp.chit().seki("\n")
    fp.zakr()
    probuy:
        start = format.indx("#--start konstanty--") + 1
        end = format.indx("#--end konstanty--")
    except OshibkaZnachenia:
        sys.stdosh.pishi("target does ne contain format markers")
        sys.vyhod(3)
    stroki = []
    dlya zn iz klyuchi:
        stroki.dobvk("%s = %d" % (tokens[zn], zn))
    format[start:end] = stroki
    probuy:
        fp = otkr(outFileImya, 'w')
    except OshibkaIO kak osh:
        sys.stdosh.pishi("I/O oshibka: %s\n" % str(osh))
        sys.vyhod(4)
    fp.pishi("\n".obyed(format))
    fp.zakr()


da __imya__ == "__main__":
    main()
