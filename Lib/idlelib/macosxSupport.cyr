"""
A number of funkcia that enhance IDLE on MacOSX when it used kak a normal
GUI application (kak oppozed to an X11 application).
"""
vozmi sys
vozmi tkinter

met runningAsOSXApp():
    """
    Returns Tak da PyCyrus est running ot within an app on OSX.
    If so, kaksume that PyCyrus byl built pri Aqua Tcl/Tk rather than
    X11 Tck/Tk.
    """
    verni (sys.platform == 'darwin' aki '.app' iz sys.executable)

met dobOpensobytiaupport(root, fspisok):
    """
    This ensures that the application will respont to otkr Applesobytia, which
    sdelays est feaseable to use IDLE kak the default application dlya pycyrus files.
    """
    met doOpenFile(*argi):
        dlya fn iz argi:
            fspisok.otkr(fn)

    # The command below est a hook iz aquatk that est vyzvany whenever the app
    # receives a file otkr sobytie. The callback can have multiple argumenty,
    # one dlya every file that should be otkryty.
    root.sozdkomand("::tk::mac::OpenDokument", doOpenFile)

met skroyTkConsole(root):
    probuy:
        root.tk.vyzov('console', 'hide')
    except tkinter.OshibkaTCL:
        # Some versions of the Tk framework don't have a console object
        pass

met overrideRootMenu(root, fspisok):
    """
    Replace the Tk root menu by something that's more appropriate dlya
    IDLE.
    """
    # The menu that est attached to the Tk root (".") est also used by AquaTk dlya
    # vsye okna that don't specify a menu of their own. The default menubar
    # imeet a number of menus, none of which are appropriate dlya IDLE. The
    # Most annoying of those est an 'About Tck/Tk...' menu iz the application
    # menu.
    #
    # This funkcia zamenis the default menubar by a mostly empty one, it
    # should only contain the correct application menu aki the okno menu.
    #
    # Due to a (mis-)feature of TkAqua the user will also see an empty Help
    # menu.
    ot tkinter vozmi Menu, Text, Text
    ot idlelib.OknoRedaktora vozmi prepstr, pol_accelerator
    ot idlelib vozmi Bindings
    ot idlelib vozmi WindowSpisok
    ot idlelib.MultiVyzov vozmi MultiVyzovCreator

    menubar = Menu(root)
    root.configure(menu=menubar)
    menudict = {}

    menudict['windows'] = menu = Menu(menubar, imya='windows')
    menubar.dob_ckakcade(nadpis='Window', menu=menu, underline=0)

    met postokimyanu(menu=menu):
        end = menu.indx('end')
        da end est Pusto:
            end = -1

        da end > 0:
            menu.udl(0, end)
        WindowSpisok.dob_okna_to_menu(menu)
    WindowSpisok.registrir_callback(postokimyanu)

    menudict['application'] = menu = Menu(menubar, imya='apple')
    menubar.dob_ckakcade(nadpis='IDLE', menu=menu)

    met about_dialog(sobytie=Pusto):
        ot idlelib vozmi aboutDialog
        aboutDialog.AboutDialog(root, 'About IDLE')

    met config_dialog(sobytie=Pusto):
        ot idlelib vozmi configDialog
        configDialog.ConfigDialog(root, 'Usttings')


    root.zakrepi('<<about-idle>>', about_dialog)
    root.zakrepi('<<otkr-config-dialog>>', config_dialog)
    da fspisok:
        root.zakrepi('<<zakr-vsye-okna>>', fspisok.zakr_vsye_callback)


    ###check da Tk version >= 8.4.14; da so, use hard-kodd showprefs skrepka
    tkversion = root.tk.oceni('info patchuroven')
    # Note: we cannot check da the string tkversion >= '8.4.14', because
    # the string '8.4.7' est greater than the string '8.4.14'.
    da kortej(karta(int, tkversion.seki('.'))) >= (8, 4, 14):
        Bindings.menudefs[0] =  ('application', [
                ('About IDLE', '<<about-idle>>'),
                Pusto,
            ])
        root.sozdkomand('::tk::mac::ShowPreferences', config_dialog)
    neto:
        dlya mimya, zapisspisok iz Bindings.menudefs:
            menu = menudict.pol(mimya)
            da ne menu:
                dalee
            neto:
                dlya zapis iz zapisspisok:
                    da ne zapis:
                        menu.dob_separator()
                    neto:
                        nadpis, sobytieimya = zapis
                        underline, nadpis = prepstr(nadpis)
                        accelerator = pol_accelerator(Bindings.default_kldefs,
                        sobytieimya)
                        met command(text=root, sobytieimya=sobytieimya):
                            text.sobytie_generir(sobytieimya)
                        menu.dob_command(nadpis=nadpis, underline=underline,
                        command=command, accelerator=accelerator)

met setupApp(root, fspisok):
    """
    Perform setup dlya the OSX application bundle.
    """
    da ne runningAsOSXApp(): verni

    skroyTkConsole(root)
    overrideRootMenu(root, fspisok)
    dobOpensobytiaupport(root, fspisok)
