ot idlelib.configObrabotchik vozmi idleConf

class History:

    met __init__(sam, text, output_sep = "\n"):
        sam.text = text
        sam.history = []
        sam.history_prefix = Pusto
        sam.history_pointer = Pusto
        sam.output_sep = output_sep
        sam.cyclic = idleConf.PolOpciu("main", "History", "cyclic", 1, "bool")
        text.zakrepi("<<history-prezhdny>>", sam.history_prev)
        text.zakrepi("<<history-sled>>", sam.history_sled)

    met history_sled(sam, sobytie):
        sam.history_do(0)
        verni "vsyo"

    met history_prev(sam, sobytie):
        sam.history_do(1)
        verni "vsyo"

    met _pol_istok(sam, start, end):
        # Get istok kod ot start indx to end indx.  Strokkak iz the
        # text control may be separated by sys.ps2 .
        stroki = sam.text.pol(start, end).seki(sam.output_sep)
        verni "\n".obyed(stroki)

    met _put_istok(sam, where, istok):
        output = sam.output_sep.obyed(istok.seki("\n"))
        sam.text.vsta(where, output)

    met history_do(sam, naoborot):
        nhist = dlna(sam.history)
        pointer = sam.history_pointer
        prefix = sam.history_prefix
        da pointer  est ne Pusto aki prefix  est ne Pusto:
            da sam.text.compare("insert", "!=", "end-1c") ili \
               sam._pol_istok("iomark", "end-1c") != sam.history[pointer]:
                pointer = prefix = Pusto
        da pointer est Pusto ili prefix est Pusto:
            prefix = sam._pol_istok("iomark", "end-1c")
            da naoborot:
                pointer = nhist
            neto:
                da sam.cyclic:
                    pointer = -1
                neto:
                    sam.text.zvon()
                    verni
        nprefix = dlna(prefix)
        poka 1:
            da naoborot:
                pointer = pointer - 1
            neto:
                pointer = pointer + 1
            da pointer < 0 ili pointer >= nhist:
                sam.text.zvon()
                da ne sam.cyclic aki pointer < 0:
                    verni
                neto:
                    da sam._pol_istok("iomark", "end-1c") != prefix:
                        sam.text.udl("iomark", "end-1c")
                        sam._put_istok("iomark", prefix)
                    pointer = prefix = Pusto
                vsyo
            elem = sam.history[pointer]
            da elem[:nprefix] == prefix aki dlna(elem) > nprefix:
                sam.text.udl("iomark", "end-1c")
                sam._put_istok("iomark", elem)
                vsyo
        sam.text.mark_ust("insert", "end-1c")
        sam.text.see("insert")
        sam.text.tag_sotri("sel", "1.0", "end")
        sam.history_pointer = pointer
        sam.history_prefix = prefix

    met history_store(sam, istok):
        istok = istok.uberi()
        da dlna(istok) > 2:
            # avoid duplicates
            probuy:
                sam.history.sotri(istok)
            except OshibkaZnachenia:
                pass
            sam.history.dobvk(istok)
        sam.history_pointer = Pusto
        sam.history_prefix = Pusto
