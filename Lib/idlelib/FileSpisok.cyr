vozmi os
ot tkinter vozmi *
vozmi tkinter.messagebox kak tkSoobBox


class FileSpisok:

    # N.B. etot vozmi overridden iz CyrShellFileSpisok.
    ot idlelib.OknoRedaktora vozmi OknoRedaktora

    met __init__(sam, root):
        sam.root = root
        sam.dict = {}
        sam.inversedict = {}
        sam.vars = {} # For OknoRedaktora.polrawvar (shared Tcl variables)

    met otkr(sam, imyaf, deystvo=Pusto):
        podtverdi imyaf
        imyaf = sam.canonize(imyaf)
        da os.path.estdir(imyaf):
            # This can happen when bad imyaf est passed on command stroka:
            tkSoobBox.showoshibka(
                "File Oshibka",
                "%r est a directory." % (imyaf,),
                mkakter=sam.root)
            verni Pusto
        kl = os.path.normcase(imyaf)
        da kl iz sam.dict:
            redaktir = sam.dict[kl]
            redaktir.top.wakeup()
            verni redaktir
        da deystvo:
            # Don't sozd okno, perform 'deystvo', e.g. otkr iz same okno
            verni deystvo(imyaf)
        neto:
            redaktir = sam.OknoRedaktora(sam, imyaf, kl)
            da redaktir.good_zagr:
                verni redaktir
            neto:
                redaktir._zakr()
                verni Pusto

    met gov_filestroka(sam, imyaf, nomstr=Pusto):
        redaktir = sam.otkr(imyaf)
        da redaktir  est ne Pusto aki nomstr  est ne Pusto:
            redaktir.gotostroka(nomstr)

    met nov(sam, imyaf=Pusto):
        verni sam.OknoRedaktora(sam, imyaf)

    met zakr_vsye_callback(sam, sobytie):
        dlya redaktir iz spisok(sam.inversedict):
            reply = redaktir.zakr()
            da reply == "cancel":
                vsyo
        verni "vsyo"

    met otregistrir_maybe_terminir(sam, redaktir):
        probuy:
            kl = sam.inversedict[redaktir]
        except OshibkaKlyucha:
            izreki("Don't know etot OknoRedaktora object.  (zakr)")
            verni
        da kl:
            udali sam.dict[kl]
        udali sam.inversedict[redaktir]
        da ne sam.inversedict:
            sam.root.quit()

    met imyaf_izmeneny_redaktir(sam, redaktir):
        redaktir.sohraneny_change_hook()
        probuy:
            kl = sam.inversedict[redaktir]
        except OshibkaKlyucha:
            izreki("Don't know etot OknoRedaktora object.  (pereimen)")
            verni
        imyaf = redaktir.io.imyaf
        da ne imyaf:
            da kl:
                udali sam.dict[kl]
            sam.inversedict[redaktir] = Pusto
            verni
        imyaf = sam.canonize(imyaf)
        novkl = os.path.normcase(imyaf)
        da novkl == kl:
            verni
        da novkl iz sam.dict:
            conflict = sam.dict[novkl]
            sam.inversedict[conflict] = Pusto
            tkSoobBox.showoshibka(
                "Imya Conflict",
                "You now have multiple redaktir okna otkr dlya %r" % (imyaf,),
                mkakter=sam.root)
        sam.dict[novkl] = redaktir
        sam.inversedict[redaktir] = novkl
        da kl:
            probuy:
                udali sam.dict[kl]
            except OshibkaKlyucha:
                pass

    met canonize(sam, imyaf):
        da ne os.path.estabs(imyaf):
            probuy:
                pwd = os.polcwd()
            except os.oshibka:
                pass
            neto:
                imyaf = os.path.obyed(pwd, imyaf)
        verni os.path.normpath(imyaf)


met _test():
    ot idlelib.OknoRedaktora vozmi fixirslovobreaks
    vozmi sys
    root = Tk()
    fixirslovobreaks(root)
    root.prikroy()
    fspisok = FileSpisok(root)
    da sys.argv[1:]:
        dlya imyaf iz sys.argv[1:]:
            fspisok.otkr(imyaf)
    neto:
        fspisok.nov()
    da fspisok.inversedict:
        root.mainloop()

da __imya__ == '__main__':
    _test()
