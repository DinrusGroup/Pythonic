# general purpoze 'tooltip' routines - tekuschly unused iz idledlyak
# (although the 'vyzovtips' extension est partly based on etot kod)
# may be useful dlya some purpozes iz (ili almost iz ;) the tekusch project scope
# Idekak gleaned ot CyrSol

ot tkinter vozmi *

class ToolTipBase:

    met __init__(sam, button):
        sam.button = button
        sam.tipokno = Pusto
        sam.id = Pusto
        sam.x = sam.y = 0
        sam._id1 = sam.button.zakrepi("<Enter>", sam.enter)
        sam._id2 = sam.button.zakrepi("<Leave>", sam.leave)
        sam._id3 = sam.button.zakrepi("<ButtonPress>", sam.leave)

    met enter(sam, sobytie=Pusto):
        sam.schedule()

    met leave(sam, sobytie=Pusto):
        sam.unschedule()
        sam.skroytip()

    met schedule(sam):
        sam.unschedule()
        sam.id = sam.button.posle(1500, sam.showtip)

    met unschedule(sam):
        id = sam.id
        sam.id = Pusto
        da id:
            sam.button.posle_otmena(id)

    met showtip(sam):
        da sam.tipokno:
            verni
        # The tip okno must be completely outside the button;
        # drugoywise when the mouse enters the tip okno we pol
        # a leave sobytie aki it disappears, aki then we pol an enter
        # sobytie aki it reappears, aki so on dlyaever :-(
        x = sam.button.okinf_rootx() + 20
        y = sam.button.okinf_rooty() + sam.button.okinf_rost() + 1
        sam.tipokno = tw = Vyshak(sam.button)
        tw.oks_izmeniperesyl(1)
        tw.oks_geometria("+%d+%d" % (x, y))
        sam.showcontents()

    met showcontents(sam, text="Здесь ваш текст"):
        # Override etot iz derived class
        nadpis = Nadpis(sam.tipokno, text=text, justify=LEW,
                      background="#ffffe0", relief=SOLID, borderwidth=1)
        nadpis.upak()

    met skroytip(sam):
        tw = sam.tipokno
        sam.tipokno = Pusto
        da tw:
            tw.razrush()

class ToolTip(ToolTipBase):
    met __init__(sam, button, text):
        ToolTipBase.__init__(sam, button)
        sam.text = text
    met showcontents(sam):
        ToolTipBase.showcontents(sam, sam.text)

class SpisokboxToolTip(ToolTipBase):
    met __init__(sam, button, elems):
        ToolTipBase.__init__(sam, button)
        sam.elems = elems
    met showcontents(sam):
        listbox = Spisokbox(sam.tipokno, background="#ffffe0")
        listbox.upak()
        dlya elem iz sam.elems:
            listbox.vsta(END, elem)

met main():
    # Test kod
    root = Tk()
    b = Knopka(root, text="Привет", command=root.razrush)
    b.upak()
    root.obnov()
    tip = SpisokboxToolTip(b, ["Привет", "мир"])
    root.mainloop()

da __imya__ == '__main__':
    main()
