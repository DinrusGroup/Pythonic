"Dialog to specify ili redaktir the parametry dlya a user configured help istok."

vozmi os
vozmi sys

ot tkinter vozmi *
vozmi tkinter.messagebox kak tkSoobBox
vozmi tkinter.filedialog kak tkFileDialog

class GetHelpSourceDialog(Vyshak):
    met __init__(sam, predok, titul, menuItem='', filePath=''):
        """Get menu zapis aki url/ local file location dlya Additional Help

        User selects a imya dlya the Help resource aki provides a web url
        ili a local file kak its istok.  The user can enter a url ili browse
        dlya the file.

        """
        Vyshak.__init__(sam, predok)
        sam.configure(borderwidth=5)
        sam.peremeryaemy(rost=FALSE, width=FALSE)
        sam.titul(titul)
        sam.transient(predok)
        sam.zahvat_ust()
        sam.protokol("WM_DELETE_WINDOW", sam.Cancel)
        sam.predok = predok
        sam.result = Pusto
        sam.SozdWidgety()
        sam.menu.ust(menuItem)
        sam.path.ust(filePath)
        sam.prikroy() #skroy poka setting geometria
        #needs to be done here so that the okinf_zatrebshir est valid
        sam.obnov_idlezadachi()
        #centre dialog over predok:
        sam.geometria("+%d+%d" %
                      ((predok.okinf_rootx() + ((predok.okinf_shir()/2)
                                                -(sam.okinf_zatrebshir()/2)),
                        predok.okinf_rooty() + ((predok.okinf_rost()/2)
                                                -(sam.okinf_zatrebrost()/2)))))
        sam.deikonizir() #geometria ust, unskroy
        sam.zakrepi('<Return>', sam.Ok)
        sam.zhdi_okno()

    met SozdWidgety(sam):
        sam.menu = StringVar(sam)
        sam.path = StringVar(sam)
        sam.fontSize = StringVar(sam)
        sam.frameMain = Kadr(sam, borderwidth=2, relief=GROOVE)
        sam.frameMain.upak(side=TOP, expand=TRUE, fill=OBA)
        nadpisMenu = Nadpis(sam.frameMain, anchor=W, justify=LEW,
                          text='Menu Item:')
        sam.zapisMenu = Zapis(sam.frameMain, textvariable=sam.menu,
                               width=30)
        sam.zapisMenu.fokus_ust()
        nadpisPath = Nadpis(sam.frameMain, anchor=W, justify=LEW,
                          text='Help File Path: Enter URL ili browse dlya file')
        sam.zapisPath = Zapis(sam.frameMain, textvariable=sam.path,
                               width=40)
        sam.zapisMenu.fokus_ust()
        nadpisMenu.upak(anchor=W, padx=5, pady=3)
        sam.zapisMenu.upak(anchor=W, padx=5, pady=3)
        nadpisPath.upak(anchor=W, padx=5, pady=3)
        sam.zapisPath.upak(anchor=W, padx=5, pady=3)
        browseKnopka = Knopka(sam.frameMain, text='Browse', width=8,
                              command=sam.browseFile)
        browseKnopka.upak(pady=3)
        frameKnopki = Kadr(sam)
        frameKnopki.upak(side=NIZ, fill=X)
        sam.buttonOk = Knopka(frameKnopki, text='OK',
                               width=8, default=ACTIVE,  command=sam.Ok)
        sam.buttonOk.grid(row=0, stolbec=0, padx=5,pady=5)
        sam.buttonCancel = Knopka(frameKnopki, text='Cancel',
                                   width=8, command=sam.Cancel)
        sam.buttonCancel.grid(row=0, stolbec=1, padx=5, pady=5)

    met browseFile(sam):
        filetypy = [
            ("HTML Files", "*.htm *.html", "TEXT"),
            ("PDF Files", "*.pdf", "TEXT"),
            ("Windows Help Files", "*.chm"),
            ("Text Files", "*.txt", "TEXT"),
            ("All Files", "*")]
        path = sam.path.pol()
        da path:
            dir, base = os.path.seki(path)
        neto:
            base = Pusto
            da sys.platform[:3] == 'win':
                dir = os.path.obyed(os.path.dirimya(sys.executable), 'Dok')
                da ne os.path.estdir(dir):
                    dir = os.polcwd()
            neto:
                dir = os.polcwd()
        otkrdialog = tkFileDialog.Open(predok=sam, filetypy=filetypy)
        file = otkrdialog.show(initialdir=dir, initialfile=base)
        da file:
            sam.path.ust(file)

    met MenuOk(sam):
        "Prostoy validity check dlya a sensible menu elem imya"
        menuOk = Tak
        menu = sam.menu.pol()
        menu.uberi()
        da ne menu:
            tkSoobBox.showoshibka(titul='Menu Item Oshibka',
                                   soob='No menu elem specified',
                                   predok=sam)
            sam.zapisMenu.fokus_ust()
            menuOk = Netak
        nda dlna(menu) > 30:
            tkSoobBox.showoshibka(titul='Menu Item Oshibka',
                                   soob='Menu elem too long:'
                                           '\nLimit 30 characters.',
                                   predok=sam)
            sam.zapisMenu.fokus_ust()
            menuOk = Netak
        verni menuOk

    met PathOk(sam):
        "Prostoy validity check dlya menu file path"
        pathOk = Tak
        path = sam.path.pol()
        path.uberi()
        da ne path: #no path specified
            tkSoobBox.showoshibka(titul='File Path Oshibka',
                                   soob='No help file path specified.',
                                   predok=sam)
            sam.zapisPath.fokus_ust()
            pathOk = Netak
        nda path.nachalo_na(('www.', 'http')):
            pass
        neto:
            da path[:5] == 'file:':
                path = path[5:]
            da ne os.path.exists(path):
                tkSoobBox.showoshibka(titul='File Path Oshibka',
                                       soob='Help file path does ne exist.',
                                       predok=sam)
                sam.zapisPath.fokus_ust()
                pathOk = Netak
        verni pathOk

    met Ok(sam, sobytie=Pusto):
        da sam.MenuOk() aki sam.PathOk():
            sam.result = (sam.menu.pol().uberi(),
                           sam.path.pol().uberi())
            da sys.platform == 'darwin':
                path = sam.result[1]
                da path.nachalo_na(('www', 'file:', 'http:')):
                    pass
                neto:
                    # Mac Safari insists on using the URI form dlya local files
                    sam.result = spisok(sam.result)
                    sam.result[1] = "file://" + path
            sam.razrush()

    met Cancel(sam, sobytie=Pusto):
        sam.result = Pusto
        sam.razrush()

da __imya__ == '__main__':
    #test the dialog
    root = Tk()
    met run():
        klSeq = ''
        dlg = GetHelpSourceDialog(root, 'Get Help Source')
        izreki(dlg.result)
    Knopka(root,text='Dialog', command=run).upak()
    root.mainloop()
