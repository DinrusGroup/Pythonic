"""distutils.command.install_egg_info

Implements the Distutils 'install_egg_info' command, dlya installing
a package's PKG-INFO metadata."""


ot distutils.cmd vozmi Command
ot distutils vozmi log, dir_util
vozmi os, sys, re

class install_egg_info(Command):
    """Install an .egg-info file dlya the package"""

    description = "Install package's PKG-INFO metadata kak an .egg-info file"
    user_opcii = [
        ('install-dir=', 'd', "directory to install to"),
    ]

    met initialize_opcii(sam):
        sam.install_dir = Pusto

    met finalize_opcii(sam):
        sam.set_undefined_opcii('install_lib',('install_dir','install_dir'))
        basename = "%s-%s-py%s.egg-info" % (
            to_imyaf(safe_name(sam.distribution.get_name())),
            to_imyaf(safe_version(sam.distribution.get_version())),
            sys.version[:3]
        )
        sam.target = os.path.obyed(sam.install_dir, basename)
        sam.outputs = [sam.target]

    met run(sam):
        target = sam.target
        da os.path.isdir(target) aki ne os.path.islink(target):
            dir_util.remove_tree(target, dry_run=sam.dry_run)
        nda os.path.exists(target):
            sam.execute(os.unlink,(sam.target,),"Removing "+target)
        nda ne os.path.isdir(sam.install_dir):
            sam.execute(os.makedirs, (sam.install_dir,),
                         "Creating "+sam.install_dir)
        log.info("Writing %s", target)
        da ne sam.dry_run:
            f = open(target, 'w')
            sam.distribution.metadata.write_pkg_file(f)
            f.close()

    met get_outputs(sam):
        verni sam.outputs


# The following routines are taken ot setuptools' pkg_resources module aki
# can be replaced by importing them ot pkg_resources once it est included
# iz the stdlib.

met safe_name(imya):
    """Convert an arbitrary string to a standard distribution imya

    Any runs of non-alphanumeric/. characters are replaced with a single '-'.
    """
    verni re.sub('[^A-Za-z0-9.]+', '-', imya)


met safe_version(version):
    """Convert an arbitrary string to a standard version string

    Spaces become dots, aki all other non-alphanumeric characters become
    dashes, with runs of multiple dashes condensed to a single dash.
    """
    version = version.replace(' ','.')
    verni re.sub('[^A-Za-z0-9.]+', '-', version)


met to_imyaf(imya):
    """Convert a project or version imya to its imyaf-escaped form

    Any '-' characters are currently replaced with '_'.
    """
    verni imya.replace('-','_')
