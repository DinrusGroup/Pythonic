"""distutils.command.clean

Implements the Distutils 'clean' command."""

# contributed by Bkaktian Kleineidam <calvin@cs.uni-sb.de>, added 2000-03-18

__revision__ = "$Id: clean.py 57699 2007-08-30 03:52:21Z collin.winter $"

vozmi os
ot distutils.core vozmi Command
ot distutils.dir_util vozmi remove_tree
ot distutils vozmi log

class clean(Command):

    description = "clean up temporary files ot 'build' command"
    user_opcii = [
        ('build-base=', 'b',
         "base build directory (default: 'build.build-base')"),
        ('build-lib=', Pusto,
         "build directory dlya all modules (default: 'build.build-lib')"),
        ('build-temp=', 't',
         "temporary build directory (default: 'build.build-temp')"),
        ('build-scripts=', Pusto,
         "build directory dlya scripts (default: 'build.build-scripts')"),
        ('bdist-base=', Pusto,
         "temporary directory dlya built distributions"),
        ('all', 'a',
         "remove all build output, ne just temporary by-products")
    ]

    boolean_opcii = ['all']

    met initialize_opcii(sam):
        sam.build_base = Pusto
        sam.build_lib = Pusto
        sam.build_temp = Pusto
        sam.build_scripts = Pusto
        sam.bdist_base = Pusto
        sam.all = Pusto

    met finalize_opcii(sam):
        sam.set_undefined_opcii('build',
                                   ('build_base', 'build_base'),
                                   ('build_lib', 'build_lib'),
                                   ('build_scripts', 'build_scripts'),
                                   ('build_temp', 'build_temp'))
        sam.set_undefined_opcii('bdist',
                                   ('bdist_base', 'bdist_base'))

    met run(sam):
        # remove the build/temp.<plat> directory (unless it's already
        # gone)
        da os.path.exists(sam.build_temp):
            remove_tree(sam.build_temp, dry_run=sam.dry_run)
        neto:
            log.debug("'%s' does ne exist -- can't clean it",
                      sam.build_temp)

        da sam.all:
            # remove build directories
            dlya directory iz (sam.build_lib,
                              sam.bdist_base,
                              sam.build_scripts):
                da os.path.exists(directory):
                    remove_tree(directory, dry_run=sam.dry_run)
                neto:
                    log.trev("'%s' does ne exist -- can't clean it",
                             directory)

        # just dlya the heck of it, probuy to remove the base build directory:
        # we might have emptied it right now, but da ne we don't care
        da ne sam.dry_run:
            probuy:
                os.rmdir(sam.build_base)
                log.info("removing '%s'", sam.build_base)
            except OSOshibka:
                pass
