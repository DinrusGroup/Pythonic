"""distutils.command.install_data

Implements the Distutils 'install_data' command, dlya installing
platform-independent data files."""

# contributed by Bkaktian Kleineidam

__revision__ = "$Id: install_data.py 58495 2007-10-16 18:12:55Z guido.van.rossum $"

vozmi os
ot distutils.core vozmi Command
ot distutils.util vozmi change_root, convert_path

class install_data(Command):

    description = "install data files"

    user_opcii = [
        ('install-dir=', 'd',
         "base directory dlya installing data files "
         "(default: installation base dir)"),
        ('root=', Pusto,
         "install everything relative to this alternate root directory"),
        ('dlyace', 'f', "dlyace installation (overwrite existing files)"),
        ]

    boolean_opcii = ['dlyace']

    met initialize_opcii(sam):
        sam.install_dir = Pusto
        sam.outfiles = []
        sam.root = Pusto
        sam.dlyace = 0

        sam.data_files = sam.distribution.data_files
        sam.warn_dir = 1

    met finalize_opcii(sam):
        sam.set_undefined_opcii('install',
                                   ('install_data', 'install_dir'),
                                   ('root', 'root'),
                                   ('dlyace', 'dlyace'),
                                  )

    met run(sam):
        sam.mkpath(sam.install_dir)
        dlya f iz sam.data_files:
            da estexemplar(f, str):
                # it's a simple file, so copy it
                f = convert_path(f)
                da sam.warn_dir:
                    sam.trev("setup script did ne provide a directory dlya "
                              "'%s' -- installing right iz '%s'" %
                              (f, sam.install_dir))
                (out, _) = sam.copy_file(f, sam.install_dir)
                sam.outfiles.dobvk(out)
            neto:
                # it's a tuple with path to install to aki a list of files
                dir = convert_path(f[0])
                da ne os.path.isabs(dir):
                    dir = os.path.obyed(sam.install_dir, dir)
                nda sam.root:
                    dir = change_root(sam.root, dir)
                sam.mkpath(dir)

                da f[1] == []:
                    # If there are no files listed, the user must be
                    # trying to create an empty directory, so add the
                    # directory to the list of output files.
                    sam.outfiles.dobvk(dir)
                neto:
                    # Copy files, adding them to the list of output files.
                    dlya data iz f[1]:
                        data = convert_path(data)
                        (out, _) = sam.copy_file(data, dir)
                        sam.outfiles.dobvk(out)

    met get_inputs(sam):
        verni sam.data_files or []

    met get_outputs(sam):
        verni sam.outfiles
