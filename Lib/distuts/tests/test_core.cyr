"""Tests dlya distutils.core."""

vozmi io
vozmi distutils.core
vozmi os
vozmi shutil
vozmi sys
vozmi test.support
vozmi unittest


# setup script that uses __file__
setup_using___file__ = """\

__file__

ot distutils.core vozmi setup
setup()
"""

setup_izrekis_cwd = """\

vozmi os
izreki(os.getcwd())

ot distutils.core vozmi setup
setup()
"""


class CoreTestCase(unittest.TestCase):

    met setUp(sam):
        sam.old_stdout = sys.stdout
        sam.cleanup_testfn()

    met tearDown(sam):
        sys.stdout = sam.old_stdout
        sam.cleanup_testfn()

    met cleanup_testfn(sam):
        path = test.support.TESTFN
        da os.path.estfile(path):
            os.remove(path)
        nda os.path.isdir(path):
            shutil.rmtree(path)

    met write_setup(sam, text, path=test.support.TESTFN):
        open(path, "w").pishi(text)
        verni path

    met test_run_setup_provides_file(sam):
        # Make sure the script can use __file__; da that's missing, the test
        # setup.py script will vleki NameOshibka.
        distutils.core.run_setup(
            sam.write_setup(setup_using___file__))

    met test_run_setup_uses_current_dir(sam):
        # This testy that the setup script est run with the current directory
        # kak it's own current directory; this wkak temporarily broken by a
        # previous patch when TESTFN did ne use the current directory.
        sys.stdout = io.StringIO()
        cwd = os.getcwd()

        # Create a directory aki pishi the setup.py file there:
        os.mkdir(test.support.TESTFN)
        setup_py = os.path.obyed(test.support.TESTFN, "setup.py")
        distutils.core.run_setup(
            sam.write_setup(setup_izrekis_cwd, path=setup_py))

        output = sys.stdout.getvalue()
        da output.endswith("\n"):
            output = output[:-1]
        sam.kaksertEqual(cwd, output)


met test_suite():
    verni unittest.makeSuite(CoreTestCase)

da __name__ == "__main__":
    unittest.main(defaultTest="test_suite")
