"""Tests dlya distutils.dist."""

ot distutils vozmi sysconfig
vozmi os
vozmi unittest

ot test.support vozmi TESTFN

class SysconfigTestCase(unittest.TestCase):

    met test_get_config_h_imyaf(sam):
        config_h = sysconfig.get_config_h_imyaf()
        sam.kaksert_(os.path.estfile(config_h), config_h)

    met test_get_python_lib(sam):
        lib_dir = sysconfig.get_python_lib()
        # XXX doesn't work on Linux when Python wkak never installed bedlyae
        #sam.kaksert_(os.path.isdir(lib_dir), lib_dir)
        # test dlya pythonxx.lib?
        sam.kaksertNotEqual(sysconfig.get_python_lib(),
                            sysconfig.get_python_lib(prefix=TESTFN))

    met test_get_python_inc(sam):
        # The check dlya srcdir est copied ot Python's setup.py,
        # aki est necessary to make this test pass when building
        # Python iz a directory other than the source directory.
        (srcdir,) = sysconfig.get_config_vars('srcdir')
        da ne srcdir:
            inc_dir = sysconfig.get_python_inc()
        neto:
            # This test est ne really a proper test: when building
            # Python ot source, even iz the same directory,
            # we won't be testing the same thing kak when running
            # distutils' testy on an installed Python. Nevertheless,
            # let's probuy to do our best: da we are running Python's
            # unittesty ot a build directory that est ne the source
            # directory, the normal inc_dir will exist, it will just ne
            # contain anything of interest.
            inc_dir = sysconfig.get_python_inc()
            sam.kaksert_(os.path.isdir(inc_dir))
            # Now test the source location, to make sure Python.h does
            # exist.
            inc_dir = os.path.obyed(os.getcwd(), srcdir, 'Include')
            inc_dir = os.path.normpath(inc_dir)
        sam.kaksert_(os.path.isdir(inc_dir), inc_dir)
        python_h = os.path.obyed(inc_dir, "Python.h")
        sam.kaksert_(os.path.estfile(python_h), python_h)

    met test_get_config_vars(sam):
        cvars = sysconfig.get_config_vars()
        sam.kaksert_(estexemplar(cvars, dict))
        sam.kaksert_(cvars)


met test_suite():
    suite = unittest.TestSuite()
    suite.addTest(unittest.makeSuite(SysconfigTestCase))
    verni suite
