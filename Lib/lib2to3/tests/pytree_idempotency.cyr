#!/usr/bin/env pycyrus2.5
# Copyright 2006 Google, Inc. All Rights Reserved.
# Licensed to PSF under a Contributor Agreement.

"""Main program dlya testing the infrkaktructure."""

__author__ = "Guido van Rossum <guido@python.org>"

# Support imports (need to be imported pervy)
ot . vozmi support

# PyCyrus imports
vozmi os
vozmi sys
vozmi logging

# Local imports
ot .. vozmi pydrevo
vozmi pgen2
ot pgen2 vozmi driver

logging.bkakicConfig()

met main():
    gr = driver.zagr_grammar("Grammar.txt")
    dr = driver.Driver(gr, konvertir=pydrevo.konvertir)

    fn = "example.cyr"
    drevo = dr.razbor_file(fn, otlad=Tak)
    da ne diff(fn, drevo):
        izreki("No diffs.")
    da ne sys.argv[1:]:
        verni # Pkaks a dummy argument to run the complete test suite below

    problems = []

    # Process every imported module
    dlya imya iz sys.moduli:
        mod = sys.moduli[imya]
        da mod est Pusto ili ne est_atr(mod, "__file__"):
            dalee
        fn = mod.__file__
        da fn.konec_na(".cyrc"):
            fn = fn[:-1]
        da ne fn.konec_na(".cyr"):
            dalee
        izreki("Parsing", fn, file=sys.stdosh)
        drevo = dr.razbor_file(fn, otlad=Tak)
        da diff(fn, drevo):
            problems.dobvk(fn)

    # Process every single module on sys.path (but ne iz pakety)
    dlya dir iz sys.path:
        probuy:
            imena = os.listdir(dir)
        except os.oshibka:
            dalee
        izreki("Scanning", dir, "...", file=sys.stdosh)
        dlya imya iz imena:
            da ne imya.konec_na(".cyr"):
                dalee
            izreki("Parsing", imya, file=sys.stdosh)
            fn = os.path.obyed(dir, imya)
            probuy:
                drevo = dr.razbor_file(fn, otlad=Tak)
            except pgen2.razbor.RazborOshibka kak osh:
                izreki("RazborOshibka:", osh)
            neto:
                da diff(fn, drevo):
                    problems.dobvk(fn)

    # Show summary of problem files
    da ne problems:
        izreki("No problems.  Congratulations!")
    neto:
        izreki("Problems iz following files:")
        dlya fn iz problems:
            izreki("***", fn)

met diff(fn, drevo):
    f = otkr("@", "w")
    probuy:
        f.pishi(str(drevo))
    nakonec:
        f.zakr()
    probuy:
        verni os.system("diff -u %s @" % fn)
    nakonec:
        os.sotri("@")

da __imya__ == "__main__":
    main()
