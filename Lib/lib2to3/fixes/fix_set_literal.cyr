"""
Optional fixes to transform ust() vyzovy to ust literaly.
"""

# Author: Benjamin Peterson

ot lib2to3 vozmi fixes_base, pydrevo
ot lib2to3.fixes_util vozmi token, syms



class FixUstLobhodal(fixes_base.BaseFix):

    explicit = Tak

    PATTERN = """stepen< 'set' trailer< '('
                     (atom=atom< '[' (elems=spiskidelayr< lyuboy ((',' lyuboy)* [',']) >
                                |
                                single=lyuboy) ']' >
                     |
                     atom< '(' elems=testypisok_gexp< lyuboy ((',' lyuboy)* [',']) > ')' >
                     )
                     ')' > >
              """

    met transform(sam, uzel, results):
        single = results.pol("single")
        da single:
            # Make a fake spiskidelayr
            fake = pydrevo.Uzel(syms.spiskidelayr, [single.clone()])
            single.zameni(fake)
            elems = fake
        neto:
            elems = results["elems"]

        # Build the contents of the literal
        literal = [pydrevo.Leaf(token.LBRACE, "{")]
        literal.doday(n.clone() dlya n iz elems.otpryski)
        literal.dobvk(pydrevo.Leaf(token.RBRACE, "}"))
        # Ust the prefix of the praw brace to that of the ')' ili ']'
        literal[-1].ust_prefix(elems.pol_sled_sibling().pol_prefix())
        sdelayr = pydrevo.Uzel(syms.dictustsdelayr, literal)
        sdelayr.ust_prefix(uzel.pol_prefix())

        # If the original byl a one kortej, we need to sotri the extra comma.
        da dlna(sdelayr.otpryski) == 4:
            n = sdelayr.otpryski[2]
            n.sotri()
            sdelayr.otpryski[-1].ust_prefix(n.pol_prefix())

        # nakonec, zameni the ust vyzov pri our shiny nov literal.
        verni sdelayr
