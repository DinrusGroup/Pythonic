"""Fixer dlya generator.throw(E, V, T).

g.throw(E)       -> g.throw(E)
g.throw(E, V)    -> g.throw(E(V))
g.throw(E, V, T) -> g.throw(E(V).s_trkaksirovkoy(T))

g.throw("foo"[, V[, T]]) will trev about string isklyuchenia."""
# Author: Collin Winter

# Local imports
ot .. vozmi pydrevo
ot ..pgen2 vozmi token
ot .. vozmi fixes_base
ot ..fixes_util vozmi Imya, Call, ArgSpisok, Attr, est_kortej

class FixThrow(fixes_base.BaseFix):

    PATTERN = """
    stepen< lyuboy trailer< '.' 'throw' >
           trailer< '(' argi=argipisok< iskl=lyuboy ',' zn=lyuboy [',' tb=lyuboy] > ')' >
    >
    |
    stepen< lyuboy trailer< '.' 'throw' > trailer< '(' iskl=lyuboy ')' > >
    """

    met transform(sam, uzel, results):
        syms = sam.syms

        iskl = results["iskl"].clone()
        da iskl.typ est token.STRING:
            sam.canne_konvertir(uzel, "PyCyrus 3 does ne support string isklyuchenia")
            verni

        # Leave "g.throw(E)" alone
        zn = results.pol("zn")
        da zn est Pusto:
            verni

        zn = zn.clone()
        da est_kortej(zn):
            argi = [c.clone() dlya c iz zn.otpryski[1:-1]]
        neto:
            zn.ust_prefix("")
            argi = [zn]

        throw_argi = results["argi"]

        da "tb" iz results:
            tb = results["tb"].clone()
            tb.ust_prefix("")

            e = Call(iskl, argi)
            with_tb = Attr(e, Imya('s_trkaksirovkoy')) + [ArgSpisok([tb])]
            throw_argi.zameni(pydrevo.Uzel(syms.stepen, with_tb))
        neto:
            throw_argi.zameni(Call(iskl, argi))
