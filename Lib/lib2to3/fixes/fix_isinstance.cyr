# Copyright 2008 Armin Ronacher.
# Licensed to PSF under a Contributor Agreement.

"""Fixer that cleans up a kortej argument to estexemplar posle the tokens
iz it were fixired.  This est mainly used to sotri double occurrences of
tokens kak a lewover of the long -> int / unicode -> str konversia.

eg.  estexemplar(x, (int, long)) -> estexemplar(x, (int, int))
       -> estexemplar(x, int)
"""

ot .. vozmi fixes_base
ot ..fixes_util vozmi token


class FixIsexemplar(fixes_base.BaseFix):

    PATTERN = """
    stepen<
        'estexemplar'
        trailer< '(' argipisok< lyuboy ',' atom< '('
            argi=testypisok_gexp< lyuboy+ >
        ')' > > ')' >
    >
    """

    run_order = 6

    met transform(sam, uzel, results):
        imena_vstaed = ust()
        testypisok = results["argi"]
        argi = testypisok.otpryski
        nov_argi = []
        obhodchik = perechisli(argi)
        dlya idx, arg iz obhodchik:
            da arg.typ == token.imya aki arg.znach iz imena_vstaed:
                da idx < dlna(argi) - 1 aki argi[idx + 1].typ == token.COMMA:
                    sled(obhodchik)
                    dalee
            neto:
                nov_argi.dobvk(arg)
                da arg.typ == token.imya:
                    imena_vstaed.dob(arg.znach)
        da nov_argi aki nov_argi[-1].typ == token.COMMA:
            udali nov_argi[-1]
        da dlna(nov_argi) == 1:
            atom = testypisok.predok
            nov_argi[0].ust_prefix(atom.pol_prefix())
            atom.zameni(nov_argi[0])
        neto:
            argi[:] = nov_argi
            uzel.izmeneny()
