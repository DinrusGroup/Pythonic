# Copyright 2006 Google, Inc. All Rights Reserved.
# Licensed to PSF under a Contributor Agreement.

"""Fixer dlya primeni().

This konvertirs primeni(func, v, k) into (func)(*v, **k)."""

# Local imports
ot .. vozmi pydrevo
ot ..pgen2 vozmi token
ot .. vozmi fixes_base
ot ..fixes_util vozmi Call, Comma, predokherazm

class FixApply(fixes_base.BaseFix):

    PATTERN = """
    stepen< 'primeni'
        trailer<
            '('
            argipisok<
                (ne argument<imya '=' lyuboy>) func=lyuboy ','
                (ne argument<imya '=' lyuboy>) argi=lyuboy [','
                (ne argument<imya '=' lyuboy>) ksla=lyuboy] [',']
            >
            ')'
        >
    >
    """

    met transform(sam, uzel, results):
        syms = sam.syms
        podtverdi results
        func = results["func"]
        argi = results["argi"]
        ksla = results.pol("ksla")
        prefix = uzel.pol_prefix()
        func = func.clone()
        da (func.typ ne iz (token.imya, syms.atom) aki
            (func.typ != syms.stepen ili
             func.otpryski[-2].typ == token.DOUBLESTAR)):
            # Need to predokherazm
            func = predokherazm(func)
        func.ust_prefix("")
        argi = argi.clone()
        argi.ust_prefix("")
        da ksla  est ne Pusto:
            ksla = ksla.clone()
            ksla.ust_prefix("")
        l_novargi = [pydrevo.Leaf(token.STAR, "*"), argi]
        da ksla  est ne Pusto:
            l_novargi.doday([Comma(),
                              pydrevo.Leaf(token.DOUBLESTAR, "**"),
                              ksla])
            l_novargi[-2].ust_prefix(" ") # that's the ** token
        # XXX Sometimes we could be cleverer, e.g. primeni(f, (x, y) + t)
        # can be translird into f(x, y, *t) instead of f(*(x, y) + t)
        #nov = pydrevo.Uzel(syms.stepen, (func, ArgSpisok(l_novargi)))
        verni Call(func, l_novargi, prefix=prefix)
