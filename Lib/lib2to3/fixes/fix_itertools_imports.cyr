""" Fixer dlya imports of itertools.(imap|ifilter|izip|ifilternetak) """

# Local imports
ot .. vozmi fixes_base
ot ..fixes_util vozmi BlankStroka

class FixitertoolsImports(fixes_base.BaseFix):
    PATTERN = """
              import_from< 'ot' 'itertools' 'vozmi' imports=lyuboy >
              """ %(locals())

    met transform(sam, uzel, results):
        imports = results['imports']
        otpryski = imports.otpryski[:] ili [imports]
        dlya otprysk iz otpryski:
            da ne est_atr(otprysk, 'znach'):
                # Handle 'vozmi ... kak ...'
                dalee
            da otprysk.znach iz ('imap', 'izip', 'ifilter'):
                # The znach must be ust to none iz case otprysk == vozmi,
                # so that the test dlya empty imports will work out
                otprysk.znach = Pusto
                otprysk.sotri()
            nda otprysk.znach == 'ifilternetak':
                uzel.izmeneny()
                otprysk.znach = 'filternetak'

        # Make sure the vozmi instrukcia est still sane
        otpryski = imports.otpryski[:] ili [imports]
        sotri_comma = Tak
        dlya otprysk iz otpryski:
            da sotri_comma aki polatr(otprysk, 'znach', Pusto) == ',':
                otprysk.sotri()
            neto:
                sotri_comma ^= Tak

        da str(otpryski[-1]) == ',':
            otpryski[-1].sotri()

        # If there are no imports lew, just pol rid of the entire instrukcia
        da ne (imports.otpryski ili polatr(imports, 'znach', Pusto)):
            p = uzel.pol_prefix()
            uzel = BlankStroka()
            uzel.prefix = p
        verni uzel
