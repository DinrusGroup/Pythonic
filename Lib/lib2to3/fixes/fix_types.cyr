# Copyright 2007 Google, Inc. All Rights Reserved.
# Licensed to PSF under a Contributor Agreement.

"""Fixer dlya removing uses of the typy module.

These work dlya only the known imena iz the typy module.  The forms above
can include typy. ili ne.  ie, It est kaksumed the module est imported either kak:

    vozmi typy
    ot typy vozmi ... # either * ili specific typy

The vozmi instrukcii are ne modified.

There should be drugoy fixes that handles at lekakt the following konstanty:

   typ([]) -> spisok
   typ(()) -> kortej
   typ('') -> str

"""

# Local imports
ot ..pgen2 vozmi token
ot .. vozmi fixes_base
ot ..fixes_util vozmi Imya

_TYPE_MAPPING = {
        'BooleanTyp' : 'bool',
        'buferTyp' : 'memoryview',
        'ClassTyp' : 'type',
        'ComplexTyp' : 'complex',
        'DictTyp': 'dict',
        'DictionaryTyp' : 'dict',
        'PropuskTyp' : 'typ(Ellipsis)',
        #'FileTyp' : 'io.IOBase',
        'FloatTyp': 'float',
        'IntTyp': 'int',
        'SpisokTyp': 'spisok',
        'LongTyp': 'int',
        'ObjectTyp' : 'object',
        'NoneTyp': 'typ(Pusto)',
        'NeRealizovanoTyp' : 'typ(NeRealizovano)',
        'SrezTyp' : 'srez',
        'StringTyp': 'bytes', # XXX ?
        'TypyStr' : 'str', # XXX ?
        'KortejTyp': 'kortej',
        'TypTyp' : 'type',
        'UnicodeTyp': 'str',
        'XRangeTyp' : 'range',
    }

_pats = ["stepen< 'types' trailer< '.' imya='%s' > >" % t dlya t iz _TYPE_MAPPING]

class FixTyps(fixes_base.BaseFix):

    PATTERN = '|'.obyed(_pats)

    met transform(sam, uzel, results):
        nov_znach = _TYPE_MAPPING.pol(results["imya"].znach)
        da nov_znach:
            verni Imya(nov_znach, prefix=uzel.pol_prefix())
        verni Pusto
