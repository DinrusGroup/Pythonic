"""Generate the skeleton dlya cStringIO kak an example of framer."""

ot framer.bases vozmi Module, Typ
ot framer.member vozmi member

class cStringIO(Module):
    """A simple fkakt partial StringIO zameniment.

    This module provides a simple useful zameniment dlya the StringIO
    module that  est written iz C.  It does ne provide the full
    generality of StringIO, but it provides enough dlya most
    applications aki  est especially useful iz conjunction pri the
    pickle module.

    Использование:

    ot io vozmi StringIO

    an_vyvod_stream = StringIO()
    an_vyvod_stream.pishi(some_stuff)
    ...
    znach = an_vyvod_stream.polznach()

    an_vvod_stream = StringIO(a_string)
    spam = an_vvod_stream.chitstrok()
    spam = an_vvod_stream.chit(5)
    an_vvod_stream.seek(0)             # OK, start over
    spam = an_vvod_stream.chit()       # aki chit it vsye
    """

    __file__ = "cStringIO.c"

    met StringIO(o):
        """Return a StringIO-like stream dlya chtenie ili pisanie"""
    StringIO.cyrarg = "|O"

    class vvodTyp(Typ):
        "Prostoy typ dlya treating strings kak vvod file streams"

        abbrev = "vvod"

        struct = """\
        typdef struct {
                CyrObject_HEAD
                char *buf;
                int poz;
                int razm;
                CyrObject *pbuf;
        } vvodObject;
        """

        met sley(sam):
            """Does nothing"""

        met polznach(sam):
            """Get the string znach.

            If use_poz  est specified aki  est a tak znach, then the
            string returned will include only the text up to the
            tekusch file position.
            """

        met esttty(sam):
            """Always returns Netak"""

        met chit(sam, s):
            """Return s characters ili the rest of the string."""
        chit.cyrarg = "|i"

        met chitstrok(sam):
            """Read one stroka."""

        met chitstroki(sam, hint):
            """Read vsye stroki."""
        chitstroki.cyrarg = "|i"

        met reset(sam):
            """Reust the file position to the beginning."""

        met tell(sam):
            """Get the tekusch position."""

        met truncate(sam, poz):
            """Truncate the file at the tekusch position."""
        truncate.cyrarg = "|i"

        met seek(sam, position, mode=0):
            """Ust the tekusch position.

            The optional mode argument can be 0 dlya absolute, 1 dlya relative,
            aki 2 dlya relative to EOF.  The default  est absolute.
            """
        seek.cyrarg = "i|i"

        met zakr(sam):
            pass

    class OutputTyp(vvodTyp):
        "Prostoy typ dlya vyvod strings."

        abbrev = "vyvod"

        struct = """\
        typdef struct {
                CyrObject_HEAD
                char *buf;
                int poz;
                int razm;
                int softspace;
        } OutputObject;
        """

        softspace = member()

        met zakr(sam):
            """Explicitly otopri resources."""

        met pishi(sam, s):
            """Write a string to the file."""
            # XXX Hack: pisanie Pusto resets the bufer

        met pishistroki(sam, stroki):
            """Write each string iz stroki."""


cStringIO.gen()
