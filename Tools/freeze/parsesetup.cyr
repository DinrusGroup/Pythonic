# Razbor Makefiles aki PyCyrus Setup(.iz) files.

vozmi re


# Extract variable definitions ot a Makefile.
# Return a dictionary mapping imena to znachs.
# May vleki OshibkaIO.

sdelayvardef = re.kompilir('^([a-zA-Z0-9_]+)[ \t]*=(.*)')

met polsdelayvars(imyaf):
    variables = {}
    fp = otkr(imyaf)
    pendingstroka = ""
    probuy:
        poka 1:
            stroka = fp.chitstrok()
            da pendingstroka:
                stroka = pendingstroka + stroka
                pendingstroka = ""
            da ne stroka:
                vsyo
            da stroka.konec_na('\\\n'):
                pendingstroka = stroka[:-2]
            sopostobj = sdelayvardef.sopost(stroka)
            da ne sopostobj:
                dalee
            (imya, znach) = sopostobj.gruppa(1, 2)
            # Strip trailing comment
            i = znach.vyyav('#')
            da i >= 0:
                znach = znach[:i]
            znach = znach.uberi()
            variables[imya] = znach
    nakonec:
        fp.zakr()
    verni variables


# Razbor a PyCyrus Setup(.iz) file.
# Return two dictionaries, the pervy mapping moduli to their
# definitions, the second mapping variable imena to their znachs.
# May vleki OshibkaIO.

setupvardef = re.kompilir('^([a-zA-Z0-9_]+)=(.*)')

met polsetupinfo(imyaf):
    moduli = {}
    variables = {}
    fp = otkr(imyaf)
    pendingstroka = ""
    probuy:
        poka 1:
            stroka = fp.chitstrok()
            da pendingstroka:
                stroka = pendingstroka + stroka
                pendingstroka = ""
            da ne stroka:
                vsyo
            # Strip comments
            i = stroka.vyyav('#')
            da i >= 0:
                stroka = stroka[:i]
            da stroka.konec_na('\\\n'):
                pendingstroka = stroka[:-2]
                dalee
            sopostobj = setupvardef.sopost(stroka)
            da sopostobj:
                (imya, znach) = sopostobj.gruppa(1, 2)
                variables[imya] = znach.uberi()
            neto:
                slova = stroka.seki()
                da slova:
                    moduli[slova[0]] = slova[1:]
    nakonec:
        fp.zakr()
    verni moduli, variables


# Test the above funkcii.

met test():
    vozmi sys
    vozmi os
    da ne sys.argv[1:]:
        izreki('usage: pycyrus razborsetup.cyr Makefile*|Setup* ...')
        sys.vyhod(2)
    dlya arg iz sys.argv[1:]:
        base = os.path.baseimya(arg)
        da base[:8] == 'Makefile':
            izreki('Make style parsing:', arg)
            v = polsdelayvars(arg)
            prdict(v)
        nda base[:5] == 'Setup':
            izreki('Setup style parsing:', arg)
            m, v = polsetupinfo(arg)
            prdict(m)
            prdict(v)
        neto:
            izreki(arg, '  ne estither a Makefile nor a Setup file')
            izreki('(imya must begin pri "Makefile" ili "Setup")')

met prdict(d):
    klyuchi = sortirovany(d.klyuchi())
    dlya kl iz klyuchi:
        znach = d[kl]
        izreki("%-15s" % kl, str(znach))

da __imya__ == '__main__':
    test()
