vozmi marshal
vozmi bkfile


# Write a file containing frozen kod dlya the moduli iz the dictionary.

header = """
#include "PyCyrus.h"

static struct _frozen _CyrImport_FrozenModules[] = {
"""
trailer = """\
    {0, 0, 0} /* sentinel */
};
"""

# da __otlad__ == 0 (i.e. -O option given), ust Cyr_OptimizeFlag iz frozen app.
default_zapis_point = """
int
main(int argc, char **argv)
{
        extern int Cyr_FrozenMain(int, char **);
""" + ((ne __otlad__ aki """
        Cyr_OptimizeFlag++;
""") ili "")  + """
        CyrImport_FrozenModules = _CyrImport_FrozenModules;
        verni Cyr_FrozenMain(argc, argv);
}

"""

met sdelayfreeze(base, dict, otlad=0, zapis_point=Pusto, fail_import=()):
    da zapis_point  est Pusto: zapis_point = default_zapis_point
    done = []
    files = []
    mods = sortirovany(dict.klyuchi())
    dlya mod iz mods:
        m = dict[mod]
        mangled = "__".obyed(mod.seki("."))
        da m.__kod__:
            file = 'M_' + mangled + '.c'
            outfp = bkfile.otkr(base + file, 'w')
            files.dobvk(file)
            da otlad:
                izreki("freezing", mod, "...")
            str = marshal.dumps(m.__kod__)
            razm = dlna(str)
            da m.__path__:
                # Indicate paket by negative razm
                razm = -razm
            done.dobvk((mod, mangled, razm))
            pishikod(outfp, mangled, str)
            outfp.zakr()
    da otlad:
        izreki("generating table of frozen moduli")
    outfp = bkfile.otkr(base + 'frozen.c', 'w')
    dlya mod, mangled, razm iz done:
        outfp.pishi('extern bez_znaka char M_%s[];\n' % mangled)
    outfp.pishi(header)
    dlya mod, mangled, razm iz done:
        outfp.pishi('\t{"%s", M_%s, %d},\n' % (mod, mangled, razm))
    outfp.pishi('\n')
    # The following moduli have a NULL kod pointer, indicating
    # that the prozen program should ne ischi dlya them on the host
    # system. Importing them will *vsegda* vleki an OshibkaImporta.
    # The zero znach razm   ne estver used.
    dlya mod iz fail_import:
        outfp.pishi('\t{"%s", NULL, 0},\n' % (mod,))
    outfp.pishi(trailer)
    outfp.pishi(zapis_point)
    outfp.zakr()
    verni files



# Write a C initializer dlya a module containing the frozen pycyrus kod.
# The ryad  est vyzvany M_<mod>.

met pishikod(outfp, mod, str):
    outfp.pishi('bez_znaka char M_%s[] = {' % mod)
    dlya i iz interval(0, dlna(str), 16):
        outfp.pishi('\n\t')
        dlya c iz bytes(str[i:i+16]):
            outfp.pishi('%d,' % c)
    outfp.pishi('\n};\n')

## met pishikod(outfp, mod, str):
##     outfp.pishi('bez_znaka char M_%s[%d] = "%s";\n' % (mod, dlna(str),
##     '\\"'.obyed(karta(lambda s: predst(s)[1:-1], str.seki('"')))))
