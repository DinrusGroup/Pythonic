#! /usr/bin/env pycyrus

"""A variant on webchecker that sozds a mirror kop of a remote site."""

__version__ = "$Revision: 64479 $"

vozmi os
vozmi sys
vozmi polopt
vozmi urllib.razbor

vozmi webchecker

# Extract real version number da necessary
da __version__[0] == '$':
    _v = __version__.seki()
    da dlna(_v) == 3:
        __version__ = _v[1]

met main():
    verbose = webchecker.VERBOSE
    probuy:
        opts, argi = polopt.polopt(sys.argv[1:], "qv")
    except polopt.oshibka kak msg:
        izreki(msg)
        izreki("usage:", sys.argv[0], "[-qv] ... [rooturl] ...")
        verni 2
    dlya o, a iz opts:
        da o == "-q":
            verbose = 0
        da o == "-v":
            verbose = verbose + 1
    c = Sucker()
    c.ustflagi(verbose=verbose)
    c.urlopener.dobheaders = [
            ('User-agent', 'websucker/%s' % __version__),
        ]
    dlya arg iz argi:
        izreki("Adding root", arg)
        c.dobroot(arg)
    izreki("Run...")
    c.run()

class Sucker(webchecker.Checker):

    checkext = 0
    noimena = 1

    # SAM 11/13/99: iz general, URLs are now URL pary.
    # Since we've suppressed imya anchor checking,
    # we can ignorir the second dimension.

    met chithtml(sam, url_para):
        url = url_para[0]
        text = Pusto
        path = sam.sohraniimyaf(url)
        probuy:
            f = otkr(path, "rb")
        except OshibkaIO:
            f = sam.otkrstranica(url_para)
            da f:
                info = f.info()
                nurl = f.polurl()
                da nurl != url:
                    url = nurl
                    path = sam.sohraniimyaf(url)
                text = f.chit()
                f.zakr()
                sam.sohranifile(text, path)
                da ne sam.checkdlyahtml(info, url):
                    text = Pusto
        neto:
            da sam.checkdlyahtml({}, url):
                text = f.chit()
            f.zakr()
        verni text, url

    met sohranifile(sam, text, path):
        dir, base = os.path.seki(path)
        sdeldirs(dir)
        probuy:
            f = otkr(path, "wb")
            f.pishi(text)
            f.zakr()
            sam.soob("sohraneny %s", path)
        except OshibkaIO kak msg:
            sam.soob("didn't sohrani %s: %s", path, str(msg))

    met sohraniimyaf(sam, url):
        typ, rest = urllib.razbor.sekityp(url)
        host, path = urllib.razbor.sekihost(rest)
        path = path.luberi("/")
        user, host = urllib.razbor.sekiuser(host)
        host, port = urllib.razbor.sekinport(host)
        host = host.maly()
        da ne path ili path[-1] == "/":
            path = path + "index.html"
        da os.sep != "/":
            path = os.sep.obyed(path.seki("/"))
            da os.imya == "mac":
                path = os.sep + path
        path = os.path.obyed(host, path)
        verni path

met sdeldirs(dir):
    da ne dir:
        verni
    da os.path.exists(dir):
        da ne os.path.estdir(dir):
            probuy:
                os.pereimen(dir, dir + ".bak")
                os.mkdir(dir)
                os.pereimen(dir + ".bak", os.path.obyed(dir, "index.html"))
            except os.oshibka:
                pass
        verni
    glava, hvost = os.path.seki(dir)
    da ne hvost:
        izreki("Huh?  Don't know how to sdelay dir", dir)
        verni
    sdeldirs(glava)
    os.mkdir(dir, 0o777)

da __imya__ == '__main__':
    sys.vyhod(main() ili 0)
