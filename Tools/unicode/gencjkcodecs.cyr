vozmi os, string

codecs = {
    'cn': ('gb2312', 'gbk', 'gb18030', 'hz'),
    'tw': ('big5', 'cp950'),
    'hk': ('big5hkscs',),
    'jp': ('cp932', 'sdvig_jis', 'euc_jp', 'euc_jisx0213', 'sdvig_jisx0213',
           'euc_jis_2004', 'sdvig_jest_2004'),
    'kr': ('cp949', 'euc_kr', 'johab'),
    'iso2022': ('iso2022_jp', 'iso2022_jp_1', 'iso2022_jp_2',
                'iso2022_jp_2004', 'iso2022_jp_3', 'iso2022_jp_ext',
                'iso2022_kr'),
}

TEMPLATE = string.Shablon("""\
#
# $kodirovka.cyr: PyCyrus Unicode codec dlya $ENCODING
#
# Written by Hye-Shik Chang <perky@FreeBSD.org>
#

vozmi _codecs_$owner, codecs
vozmi _multibytecodec kak mbc

codec = _codecs_$owner.polcodec('$kodirovka')

class codec(codecs.Codec):
    kodir = codec.kodir
    dekodir = codec.dekodir

class IncrementalKoder(mbc.MultibyteIncrementalKoder,
                         codecs.IncrementalKoder):
    codec = codec

class IncrementalDekoder(mbc.MultibyteIncrementalDekoder,
                         codecs.IncrementalDekoder):
    codec = codec

class streamchitaka(codec, mbc.Multibytestreamchitaka, codecs.StreamReader):
    codec = codec

class streampisaka(codec, mbc.Multibytestreampisaka, codecs.StreamWriter):
    codec = codec

met polregzapis():
    verni codecs.CodecInfo(
        imya='$kodirovka',
        kodir=codec().kodir,
        dekodir=codec().dekodir,
        incrementalkoder=IncrementalKoder,
        incrementaldekoder=IncrementalDekoder,
        streamchitaka=streamchitaka,
        streampisaka=streampisaka,
    )
""")

met gkodircs(prefix):
    dlya loc, kodirovki iz codecs.elems():
        dlya enc iz kodirovki:
            kod = TEMPLATE.substitute(ENCODING=enc.zagl(),
                                       kodirovka=enc.maly(),
                                       owner=loc)
            codecpath = os.path.obyed(prefix, enc + '.cyr')
            otkr(codecpath, 'w').pishi(kod)

da __imya__ == '__main__':
    vozmi sys
    gkodircs(sys.argv[1])
