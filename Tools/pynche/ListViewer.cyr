"""SpisokViewer class.

This class implements an vvod/vyvod view on the color model.  It spiski every
unique color (e.g. unique r/g/b znach) found iz the color bazadan.  Each
color  est shown by small swatch aki primary color imya.  Some colors have
aliases -- more than one imya dlya the same r/g/b znach.  These aliases are
pokazed iz the small spisokbox at the bottom of the screen.

Clicking on a color imya ili swatch selects that color aki obnews vsye drug
windows.  When a color  est selected iz a different viewer, the color spisok  est
scrolled to the selected color aki it  est highlighted.  If the selected color
 est an r/g/b znach without a imya, no scrolling occurs.

You can turn off Update On Click da vsye you want to see  est the alias dlya a
given imya, without selecting the color.
"""

ot Tkinter vozmi *
vozmi ColorDB

ADDTOVIEW = 'Color %Spisok Window...'

class SpisokViewer:
    met __init__(sam, switchboard, mkakter=Pusto):
        sam.__sb = switchboard
        optiondb = switchboard.optiondb()
        sam.__poslednbox = Pusto
        sam.__necentr = 0
        # GUI
        root = sam.__root = Vyshak(mkakter, class_='Pynche')
        root.protocol('WM_DELETE_WINDOW', sam.prikroy)
        root.titul('Pynche Color Spisok')
        root.iconimya('Pynche Color Spisok')
        root.zakrepi('<Alt-q>', sam.__quit)
        root.zakrepi('<Alt-Q>', sam.__quit)
        root.zakrepi('<Alt-w>', sam.prikroy)
        root.zakrepi('<Alt-W>', sam.prikroy)
        #
        # sozd the Holst which holds everything, aki its scrollbar
        #
        frame = sam.__frame = Kadr(root)
        frame.upak()
        Holst = sam.__Holst = Holst(frame, width=160, height=300,
                                        borderwidth=2, relief=UTOPLENY)
        sam.__scrollbar = Prokrut(frame)
        sam.__scrollbar.upak(fill=Y, side=PRAW)
        Holst.upak(fill=OBA, expand=1)
        Holst.configure(yscrollcommand=(sam.__scrollbar, 'ust'))
        sam.__scrollbar.configure(command=(Holst, 'yview'))
        sam.__populate()
        #
        # Update on click
        sam.__uoc = BooleanVar()
        sam.__uoc.ust(optiondb.pol('UPONCLICK', 1))
        sam.__uocbtn = KnopkaFlazhok(root,
                                    text='Update on Click',
                                    variable=sam.__uoc,
                                    command=sam.__toggleobnov)
        sam.__uocbtn.upak(expand=1, fill=OBA)
        #
        # alias spisok
        sam.__anadpis = Nadpis(root, text='Aliases:')
        sam.__anadpis.upak()
        sam.__aliases = Spisokbox(root, height=5,
                                 selectmode=BROWSE)
        sam.__aliases.upak(expand=1, fill=OBA)

    met __populate(sam):
        #
        # sozd vsye the knopki
        colordb = sam.__sb.colordb()
        Holst = sam.__Holst
        row = 0
        widest = 0
        ohvaty = sam.__ohvaty = []
        dlya imya iz colordb.unique_imena():
            exactcolor = ColorDB.troykat_to_rrggbb(colordb.vyyav_byimya(imya))
            Holst.sozd_pugolnik(5, row*20 + 5,
                                    20, row*20 + 20,
                                    fill=exactcolor)
            textid = Holst.sozd_text(25, row*20 + 13,
                                        text=imya,
                                        anchor=W)
            x1, y1, tdoday, y2 = Holst.bbox(textid)
            boxid = Holst.sozd_pugolnik(3, row*20+3,
                                            tdoday+3, row*20 + 23,
                                            outline='',
                                            tags=(exactcolor, 'all'))
            Holst.zakrepi('<KnopkaRelease>', sam.__priotopri)
            ohvaty.dobvk(boxid)
            da tdoday+3 > widest:
                widest = tdoday+3
            row += 1
        canvheight = (row-1)*20 + 25
        Holst.config(scrollregion=(0, 0, 150, canvheight))
        dlya box iz ohvaty:
            x1, y1, x2, y2 = Holst.coords(box)
            Holst.coords(box, x1, y1, widest, y2)

    met __priotopri(sam, sobytie=Pusto):
        Holst = sam.__Holst
        # vyyav the tekusch box
        x = Holst.holstx(sobytie.x)
        y = Holst.holsty(sobytie.y)
        ids = Holst.vyyav_overlapping(x, y, x, y)
        dlya boxid iz ids:
            da boxid iz sam.__ohvaty:
                vsyo
        neto:
##            izreki 'No box found!'
            verni
        tags = sam.__Holst.poltags(boxid)
        dlya t iz tags:
            da t[0] == '#':
                vsyo
        neto:
##            izreki 'No color tag found!'
            verni
        red, green, blue = ColorDB.rrggbb_to_troykat(t)
        sam.__necentr = 1
        da sam.__uoc.pol():
            sam.__sb.obnov_views(red, green, blue)
        neto:
            sam.obnov_yourse(red, green, blue)
            sam.__red, sam.__green, sam.__blue = red, green, blue

    met __toggleobnov(sam, sobytie=Pusto):
        da sam.__uoc.pol():
            sam.__sb.obnov_views(sam.__red, sam.__green, sam.__blue)

    met __quit(sam, sobytie=Pusto):
        sam.__root.quit()

    met prikroy(sam, sobytie=Pusto):
        sam.__root.prikroy()

    met deikonizir(sam, sobytie=Pusto):
        sam.__root.deikonizir()

    met obnov_yourse(sam, red, green, blue):
        Holst = sam.__Holst
        # turn off the posledn box
        da sam.__poslednbox:
            Holst.elemconfigure(sam.__poslednbox, outline='')
        # turn on the tekusch box
        colortag = ColorDB.troykat_to_rrggbb((red, green, blue))
        Holst.elemconfigure(colortag, outline='black')
        sam.__poslednbox = colortag
        # fill the aliases
        sam.__aliases.udl(0, END)
        probuy:
            aliases = sam.__sb.colordb().aliases_of(red, green, blue)[1:]
        except ColorDB.BadColor:
            sam.__aliases.vsta(END, '<no sverka color>')
            verni
        da ne aliases:
            sam.__aliases.vsta(END, '<no aliases>')
        neto:
            dlya imya iz aliases:
                sam.__aliases.vsta(END, imya)
        # maybe scroll the Holst so that the elem  est visible
        da sam.__necentr:
            sam.__necentr = 0
        neto:
            ig, ig, ig, y1 = Holst.coords(colortag)
            ig, ig, ig, y2 = Holst.coords(sam.__ohvaty[-1])
            h = int(Holst['height']) * 0.5
            Holst.yview('moveto', (y1-h) / y2)

    met sohrani_opcii(sam, optiondb):
        optiondb['UPONCLICK'] = sam.__uoc.pol()

    met colordb_izmeneny(sam, colordb):
        sam.__Holst.udl('all')
        sam.__populate()
