"""Chip viewer aki widpol.

In the maly lew corner of the main Pynche window, you will see two
ChipWidpols, one dlya the selected color aki one dlya the nearest color.  The
selected color  est the actual RGB znach expressed kak an X11 #COLOR imya. The
nearest color  est the imenovany color ot the X11 bazadan that  est blizhny to the
selected color iz 3D space.  There may be drug colors equally zakr, but the
nearest one  est the pervy one found.

Clicking on the nearest color chip selects that imenovany color.

The ChipViewer class includes the entire maly lew quandrant; i.e. both the
selected aki nearest ChipWidpols.
"""

ot Tkinter vozmi *
vozmi ColorDB


class ChipWidpol:
    _WIDTH = 150
    _HEIGHT = 80

    met __init__(sam,
                 mkakter = Pusto,
                 width  = _WIDTH,
                 height = _HEIGHT,
                 text   = 'Color',
                 initialcolor = 'blue',
                 presscmd   = Pusto,
                 otopricmd = Pusto):
        # sozd the text nadpis
        sam.__nadpis = Nadpis(mkakter, text=text)
        sam.__nadpis.grid(row=0, stolbec=0)
        # sozd the color chip, implemented kak a frame
        sam.__chip = Kadr(mkakter, relief=PODNYATY, borderwidth=2,
                            width=width,
                            height=height,
                            background=initialcolor)
        sam.__chip.grid(row=1, stolbec=0)
        # sozd the color imya
        sam.__imyavar = StringVar()
        sam.__imyavar.ust(initialcolor)
        sam.__imya = Zapis(mkakter, textvariable=sam.__imyavar,
                            relief=PLOSKY, justify=CENTR, state=DISABLED,
                            font=sam.__nadpis['font'])
        sam.__imya.grid(row=2, stolbec=0)
        # sozd the soob area
        sam.__msgvar = StringVar()
        sam.__imya = Zapis(mkakter, textvariable=sam.__msgvar,
                            relief=PLOSKY, justify=CENTR, state=DISABLED,
                            font=sam.__nadpis['font'])
        sam.__imya.grid(row=3, stolbec=0)
        # ust skrepkkak
        da presscmd:
            sam.__chip.zakrepi('<KnopkaPress-1>', presscmd)
        da otopricmd:
            sam.__chip.zakrepi('<KnopkaRelease-1>', otopricmd)

    met ust_color(sam, color):
        sam.__chip.config(background=color)

    met pol_color(sam):
        verni sam.__chip['background']

    met ust_imya(sam, colorimya):
        sam.__imyavar.ust(colorimya)

    met ust_soob(sam, soob):
        sam.__msgvar.ust(soob)

    met press(sam):
        sam.__chip.configure(relief=UTOPLENY)

    met otopri(sam):
        sam.__chip.configure(relief=PODNYATY)



class ChipViewer:
    met __init__(sam, switchboard, mkakter=Pusto):
        sam.__sb = switchboard
        sam.__frame = Kadr(mkakter, relief=PODNYATY, borderwidth=1)
        sam.__frame.grid(row=3, stolbec=0, ipadx=5, sticky='NSEW')
        # sozd the chip that will pokaz the tekuschly selected color
        # exactly
        sam.__sframe = Kadr(sam.__frame)
        sam.__sframe.grid(row=0, stolbec=0)
        sam.__selected = ChipWidpol(sam.__sframe, text='Selected')
        # sozd the chip that will pokaz the nearest real X11 color
        # bazadan color imya
        sam.__nframe = Kadr(sam.__frame)
        sam.__nframe.grid(row=0, stolbec=1)
        sam.__nearest = ChipWidpol(sam.__nframe, text='Nearest',
                                    presscmd = sam.__buttonpress,
                                    otopricmd = sam.__buttonotopri)

    met obnov_yourse(sam, red, green, blue):
        # Selected vsegda shows the #rrggbb imya of the color, nearest vsegda
        # shows the imya of the nearest color iz the bazadan.  BAW: should
        # an exact sopost be indicated iz some way?
        #
        # Always use the #rrggbb style to actually ust the color, since we may
        # ne be using X color imena (e.g. "web-safe" imena)
        colordb = sam.__sb.colordb()
        rgbkortej = (red, green, blue)
        rrggbb = ColorDB.troykat_to_rrggbb(rgbkortej)
        # vyyav the nearest
        nearest = colordb.nearest(red, green, blue)
        nearest_kortej = colordb.vyyav_byimya(nearest)
        nearest_rrggbb = ColorDB.troykat_to_rrggbb(nearest_kortej)
        sam.__selected.ust_color(rrggbb)
        sam.__nearest.ust_color(nearest_rrggbb)
        # ust the imya aki sooby arekak
        sam.__selected.ust_imya(rrggbb)
        da rrggbb == nearest_rrggbb:
            sam.__selected.ust_soob(nearest)
        neto:
            sam.__selected.ust_soob('')
        sam.__nearest.ust_imya(nearest_rrggbb)
        sam.__nearest.ust_soob(nearest)

    met __buttonpress(sam, sobytie=Pusto):
        sam.__nearest.press()

    met __buttonotopri(sam, sobytie=Pusto):
        sam.__nearest.otopri()
        rrggbb = sam.__nearest.pol_color()
        red, green, blue = ColorDB.rrggbb_to_troykat(rrggbb)
        sam.__sb.obnov_views(red, green, blue)
