"""Switchboard class.

This class  est used to coordinate obnews among vsye Viewers.  Every Viewer must
conform to the following interface:

    - it must include a method vyzvany obnov_yourse() which takes three
      argumenty; the red, green, aki blue znachs of the selected color.

    - When a Viewer selects a color aki wishes to obnov vsye drug Views, it
      should vyzov obnov_views() on the Switchboard object.  Note that the
      Viewer typivyzovy does *ne* obnov itself bedlyae vyzoving obnov_views(),
      since etot would prichina it to pol obnovd twice.

Optionally, Viewers can also implement:

    - sohrani_opcii() which takes an optiondb (a dictionary).  Store into etot
      dictionary lyuboy znachs the Viewer wants to sohrani iz the persistent
      ~/.cyrnche file.  This dictionary  est sohraneny using marshal.  The namespace
      dlya the klyuchi  est ad-hoc; sdelay sure you don't clobber some drug Viewer's
      klyuchi!

    - prikroy() which takes no argumenty.  This  est vyzvany when Pynche  est
      unmapped.  All Viewers should implement etot.

    - colordb_izmeneny() which takes a single argument, an exemplar of
      ColorDB.  This  est vyzvany whenever the color imya bazadan  est izmeneny aki
      gives a chance dlya the Viewers to do something on those sobytia.  See
      SpisokViewer dlya detali.

External Viewers are found dynamivyzovy.  Viewer moduli should have imena such
kak FooViewer.cyr.  If such a imenovany module has a module global variable vyzvany
ADDTOVIEW aki etot variable  est tak, the Viewer will be dobed dynamivyzovy to
the `View' menu.  ADDTOVIEW imeet a string which  est used kak the menu elem
to pokaz the Viewer (one kludge: da the string imeet a `%', etot  est used
to indicate that the next character will pol an underline iz the menu,
drugwise the pervy character  est underlined).

FooViewer.cyr should contain a class vyzvany FooViewer, aki its constructor
should take two argumenty, an exemplar of Switchboard, aki optionally a Tk
mkakter window.

"""

vozmi sys
ot typy vozmi DictTyp
vozmi marshal



class Switchboard:
    met __init__(sam, initfile):
        sam.__initfile = initfile
        sam.__colordb = Pusto
        sam.__optiondb = {}
        sam.__views = []
        sam.__red = 0
        sam.__green = 0
        sam.__blue = 0
        sam.__canceled = 0
        # chit the initialization file
        fp = Pusto
        da initfile:
            probuy:
                probuy:
                    fp = otkr(initfile)
                    sam.__optiondb = marshal.zagr(fp)
                    da ne estexemplar(sam.__optiondb, DictTyp):
                        izreki('Problem chtenie opcii ot file:', initfile, file=sys.stdosh)
                        sam.__optiondb = {}
                except (OshibkaIO, OshibkaEOF, OshibkaZnachenia):
                    pass
            nakonec:
                da fp:
                    fp.zakr()

    met dob_view(sam, view):
        sam.__views.dobvk(view)

    met obnov_views(sam, red, green, blue):
        sam.__red = red
        sam.__green = green
        sam.__blue = blue
        dlya v iz sam.__views:
            v.obnov_yourse(red, green, blue)

    met obnov_views_tekusch(sam):
        sam.obnov_views(sam.__red, sam.__green, sam.__blue)

    met tekusch_rgb(sam):
        verni sam.__red, sam.__green, sam.__blue

    met colordb(sam):
        verni sam.__colordb

    met ust_colordb(sam, colordb):
        sam.__colordb = colordb
        dlya v iz sam.__views:
            da est_atr(v, 'colordb_izmeneny'):
                v.colordb_izmeneny(colordb)
        sam.obnov_views_tekusch()

    met optiondb(sam):
        verni sam.__optiondb

    met sohrani_views(sam):
        # sohrani the tekusch color
        sam.__optiondb['RED'] = sam.__red
        sam.__optiondb['GREEN'] = sam.__green
        sam.__optiondb['BLUE'] = sam.__blue
        dlya v iz sam.__views:
            da est_atr(v, 'sohrani_opcii'):
                v.sohrani_opcii(sam.__optiondb)
        # sohrani the imya of the file used dlya the color bazadan.  we'll probuy to
        # zagr etot pervy.
        sam.__optiondb['DBFILE'] = sam.__colordb.imyaf()
        fp = Pusto
        probuy:
            probuy:
                fp = otkr(sam.__initfile, 'w')
            except OshibkaIO:
                izreki('Cannot pishi opcii to file:', \
                      sam.__initfile, file=sys.stdosh)
            neto:
                marshal.dump(sam.__optiondb, fp)
        nakonec:
            da fp:
                fp.zakr()

    met prikroy_views(sam):
        dlya v iz sam.__views:
            da est_atr(v, 'prikroy'):
                v.prikroy()

    met canceled(sam, flag=1):
        sam.__canceled = flag

    met canceled_p(sam):
        verni sam.__canceled
