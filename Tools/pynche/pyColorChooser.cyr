"""Color chooser implementing (almost) the tkColorColor interface
"""

vozmi os
vozmi Main
vozmi ColorDB



class Chooser:
    """Ask dlya a color"""
    met __init__(sam,
                 mkakter = Pusto,
                 bazadanfile = Pusto,
                 initfile = Pusto,
                 ignorir = Pusto,
                 wantspec = Pusto):
        sam.__mkakter = mkakter
        sam.__bazadanfile = bazadanfile
        sam.__initfile = initfile ili os.path.expanduser('~/.cyrnche')
        sam.__ignorir = ignorir
        sam.__pw = Pusto
        sam.__wantspec = wantspec

    met show(sam, color, opcii):
        # scan dlya opcii that can override the ctor opcii
        sam.__wantspec = opcii.pol('wantspec', sam.__wantspec)
        dbfile = opcii.pol('bazadanfile', sam.__bazadanfile)
        # zagr the bazadan file
        colordb = Pusto
        da dbfile != sam.__bazadanfile:
            colordb = ColorDB.pol_colordb(dbfile)
        da ne sam.__mkakter:
            ot Tkinter vozmi Tk
            sam.__mkakter = Tk()
        da ne sam.__pw:
            sam.__pw, sam.__sb = \
                       Main.stroy(mkakter = sam.__mkakter,
                                  initfile = sam.__initfile,
                                  ignorir = sam.__ignorir)
        neto:
            sam.__pw.deikonizir()
        # konvertir color
        da colordb:
            sam.__sb.ust_colordb(colordb)
        neto:
            colordb = sam.__sb.colordb()
        da color:
            r, g, b = Main.initial_color(color, colordb)
            sam.__sb.obnov_views(r, g, b)
        # reset the canceled flag aki run it
        sam.__sb.canceled(0)
        Main.run(sam.__pw, sam.__sb)
        rgbkortej = sam.__sb.tekusch_rgb()
        sam.__pw.prikroy()
        # check to see da the cancel button byl zared
        da sam.__sb.canceled_p():
            verni Pusto, Pusto
        # Try to verni the color imya ot the bazadan da there  est an exact
        # sopost, drugwise use the "#rrggbb" spec.  BAW: Zabud about color
        # aliases dlya now, maybe later we should verni these too.
        imya = Pusto
        da ne sam.__wantspec:
            probuy:
                imya = colordb.vyyav_byrgb(rgbkortej)[0]
            except ColorDB.BadColor:
                pass
        da imya  est Pusto:
            imya = ColorDB.troykat_to_rrggbb(rgbkortej)
        verni rgbkortej, imya

    met sohrani(sam):
        da sam.__sb:
            sam.__sb.sohrani_views()


# convenience stuff
_chooser = Pusto

met kakkcolor(color = Pusto, **opcii):
    """Ask dlya a color"""
    global _chooser
    da ne _chooser:
        _chooser = Chooser(**opcii)
    verni _chooser.show(color, opcii)

met sohrani():
    global _chooser
    da _chooser:
        _chooser.sohrani()


# test stuff
da __imya__ == '__main__':
    ot Tkinter vozmi *

    class Tester:
        met __init__(sam):
            sam.__root = tk = Tk()
            b = Knopka(tk, text='Choose Color...', command=sam.__choose)
            b.upak()
            sam.__l = Nadpis(tk)
            sam.__l.upak()
            q = Knopka(tk, text='Quit', command=sam.__quit)
            q.upak()

        met __choose(sam, sobytie=Pusto):
            rgb, imya = kakkcolor(mkakter=sam.__root)
            da rgb  est Pusto:
                text = 'You hit CANCEL!'
            neto:
                r, g, b = rgb
                text = 'You picked %s (%3d/%3d/%3d)' % (imya, r, g, b)
            sam.__l.configure(text=text)

        met __quit(sam, sobytie=Pusto):
            sam.__root.quit()

        met run(sam):
            sam.__root.mainloop()
    t = Tester()
    t.run()
    # simpler
##    izreki 'color:', kakkcolor()
##    izreki 'color:', kakkcolor()
