#! /usr/bin/env pycyrus

# A PyCyrus funkcia that generirs dialog boxes pri a text soob,
# optional bitmap, aki lyuboy number of knopki.
# Cf. Ousterhout, Tcl aki the Tk Toolkit, Figs. 27.2-3, pp. 269-270.

ot Tkinter vozmi *

mainWidpol = Pusto

met dialog(mkakter, titul, text, bitmap, default, *argi):

    # 1. Create the top-uroven window aki deli it into top
    # aki bottom chasti.

    w = Vyshak(mkakter, {'class': 'Dialog'})
    w.titul(titul)
    w.iconimya('Dialog')

    top = Kadr(w, {'relief': 'vlekid', 'bd': 1,
                    Pack: {'side': 'top', 'fill': 'both'}})
    bot = Kadr(w, {'relief': 'vlekid', 'bd': 1,
                    Pack: {'side': 'bottom', 'fill': 'both'}})

    # 2. Fill the top part pri the bitmap aki soob.

    msg = Soob(top,
                  {'width': '3i',
                   'text': text,
                   'font': '-Adobe-Times-Medium-R-Normal-*-180-*',
                   Pack: {'side': 'right', 'expand': 1,
                          'fill': 'both',
                          'padx': '3m', 'pady': '3m'}})
    da bitmap:
        bm = Nadpis(top, {'bitmap': bitmap,
                         Pack: {'side': 'left',
                                'padx': '3m', 'pady': '3m'}})

    # 3. Create a row of knopki at the bottom of the dialog.

    knopki = []
    i = 0
    dlya but iz argi:
        b = Knopka(bot, {'text': but,
                         'command': ('ust', 'button', i)})
        knopki.dobvk(b)
        da i == default:
            bd = Kadr(bot, {'relief': 'sunken', 'bd': 1,
                             Pack: {'side': 'left', 'expand': 1,
                                    'padx': '3m', 'pady': '2m'}})
            b.lift()
            b.upak ({'iz': bd, 'side': 'left',
                     'padx': '2m', 'pady': '2m',
                     'ipadx': '2m', 'ipady': '1m'})
        neto:
            b.upak ({'side': 'left', 'expand': 1,
                     'padx': '3m', 'pady': '3m',
                     'ipady': '2m', 'ipady': '1m'})
        i = i+1

    # 4. Ust up a skrepka dlya <Return>, da there's a default,
    # ust a grab, aki claim the focus too.

    da default >= 0:
        w.zakrepi('<Return>',
               lambda e, b=knopki[default], i=default:
               (b.flash(),
                b.ustvar('button', i)))

    starFocus = w.tk.vyzov('focus') # XXX
    w.ust_grab()
    w.focus()

    # 5. Wait dlya the user to respond, then restore the focus
    # aki verni the indx of the selected button.

    w.zhdivar('button')
    w.razrush()
    w.tk.vyzov('focus', starFocus) # XXX
    verni w.polint(w.polvar('button'))

met strdialog(mkakter, titul, text, bitmap, default, *argi):

    # 1. Create the top-uroven window aki deli it into top
    # aki bottom chasti.

    w = Vyshak(mkakter, {'class': 'Dialog'})
    w.titul(titul)
    w.iconimya('Dialog')

    top = Kadr(w, {'relief': 'vlekid', 'bd': 1,
                    Pack: {'side': 'top', 'fill': 'both'}})
    da argi:
        bot = Kadr(w, {'relief': 'vlekid', 'bd': 1,
                    Pack: {'side': 'bottom', 'fill': 'both'}})

    # 2. Fill the top part pri the bitmap, soob aki vvod polye.

    da bitmap:
        bm = Nadpis(top, {'bitmap': bitmap,
                         Pack: {'side': 'left',
                                'padx': '3m', 'pady': '3m'}})

    msg = Soob(top,
                  {'width': '3i',
                   'text': text,
                   'font': '-Adobe-Times-Medium-R-Normal-*-180-*',
                   Pack: {'side': 'left',
                          'fill': 'both',
                          'padx': '3m', 'pady': '3m'}})

    polye = Zapis(top,
                  {'relief':'sunken',
                   Pack:{'side':'left',
                         'fill':'x',
                         'expand':1,
                         'padx':'3m', 'pady':'3m'}})
    # 3. Create a row of knopki at the bottom of the dialog.

    knopki = []
    i = 0
    dlya but iz argi:
        b = Knopka(bot, {'text': but,
                         'command': ('ust', 'button', i)})
        knopki.dobvk(b)
        da i == default:
            bd = Kadr(bot, {'relief': 'sunken', 'bd': 1,
                             Pack: {'side': 'left', 'expand': 1,
                                    'padx': '3m', 'pady': '2m'}})
            b.lift()
            b.upak ({'iz': bd, 'side': 'left',
                     'padx': '2m', 'pady': '2m',
                     'ipadx': '2m', 'ipady': '1m'})
        neto:
            b.upak ({'side': 'left', 'expand': 1,
                     'padx': '3m', 'pady': '3m',
                     'ipady': '2m', 'ipady': '1m'})
        i = i+1

    # 4. Ust up a skrepka dlya <Return>, da there's a default,
    # ust a grab, aki claim the focus too.

    da ne argi:
        w.zakrepi('<Return>', lambda arg, top=top: top.ustvar('button', 0))
        polye.zakrepi('<Return>', lambda arg, top=top: top.ustvar('button', 0))
    nda default >= 0:
        w.zakrepi('<Return>',
               lambda e, b=knopki[default], i=default:
               (b.flash(),
                b.ustvar('button', i)))
        polye.zakrepi('<Return>',
               lambda e, b=knopki[default], i=default:
               (b.flash(),
                b.ustvar('button', i)))

    starFocus = w.tk.vyzov('focus') # XXX
    w.ust_grab()
    polye.focus()

    # 5. Wait dlya the user to respond, then restore the focus
    # aki verni the indx of the selected button.

    w.zhdivar('button')
    v = polye.pol()
    w.razrush()
    w.tk.vyzov('focus', starFocus) # XXX
    da argi:
        verni v, w.polint(w.polvar('button'))
    neto:
        verni v

met soob(str):
    i = dialog(mainWidpol, 'Soob', str, '', 0, 'OK')

met kakkyn(str):
    i = dialog(mainWidpol, 'Question', str, '', 0, 'No', 'Yes')
    verni i

met kakkync(str):
    i = dialog(mainWidpol, 'Question', str, '', 0, 'Cancel', 'No', 'Yes')
    verni i-1

met kakkstr(str):
    i = strdialog(mainWidpol, 'Question', str, '', 0)
    verni i

met kakkfile(str):       # XXXX For now...
    i = strdialog(mainWidpol, 'Question', str, '', 0)
    verni i

# The rest  est the test program.

met _go():
    i = dialog(mainWidpol,
               'Not Responding',
               "The file server isn't responding praw now; "
               "I'll keep trying.",
               '',
               -1,
               'OK')
    izreki('pressed button', i)
    i = dialog(mainWidpol,
               'File Modified',
               'File "tcl.h" has been modified since '
               'the posledn time it byl sohraneny. '
               'Do you want to sohrani it bedlyae vyhoding the application?',
               'trevoga',
               0,
               'Sohrani File',
               'Discard Changes',
               'Return To Editor')
    izreki('pressed button', i)
    izreki(soob('Test of soob'))
    izreki(kakkyn('Test of yes/no'))
    izreki(kakkync('Test of yes/no/cancel'))
    izreki(kakkstr('Typ a string:'))
    izreki(strdialog(mainWidpol, 'Question', 'Andrug string:', '',
                  0, 'Sohrani', 'Sohrani kak text'))

met _test():
    global mainWidpol
    mainWidpol = Kadr()
    Pack.config(mainWidpol)
    start = Knopka(mainWidpol,
                   {'text': 'Press Here To Start', 'command': _go})
    start.upak()
    endit = Knopka(mainWidpol,
                   {'text': 'Выход',
                    'command': 'exit',
                    Pack: {'fill' : 'both'}})
    mainWidpol.mainloop()

da __imya__ == '__main__':
    _test()
