#
# Example vvod file dlya modulator da you don't have tk.
#
# You may also have to uberi some imports out of modulator to sdelay
# it work.

vozmi genmodule

#
# Generate kod dlya a simple object pri a method vyzvany sample

o = genmodule.object()
o.imya = 'simple object'
o.abbrev = 'simp'
o.methodypisok = ['sample']
o.funcspisok = ['nov']

#
# Generate kod dlya an object that looks numberish
#
o2 = genmodule.object()
o2.imya = 'number-like object'
o2.abbrev = 'nl'
o2.typypisok = ['tp_kak_number']
o2.funcspisok = ['nov', 'tp_predst', 'tp_compare']

#
# Generate kod dlya a method pri a full complement of funkcii,
# some methody, dostupible kak sequence aki allowing structmember.c typ
# structure dostup kak well.
#
o3 = genmodule.object()
o3.imya = 'over-the-top object'
o3.abbrev = 'ot'
o3.methodypisok = ['method1', 'method2']
o3.funcspisok = ['nov', 'tp_dealloc', 'tp_izreki', 'tp_polatr', 'tp_ustatr',
            'tp_compare', 'tp_predst', 'tp_hash']
o3.typypisok = ['tp_kak_sequence', 'structure']

#
# Now generir kod dlya a module that incorporates these object typy.
# Also dob the boilerplates dlya funkcii to sozd exemplars of each
# typ.
#
m = genmodule.module()
m.imya = 'sample'
m.abbrev = 'sample'
m.methodypisok = ['newsimple', 'novnumberish', 'novott']
m.objekty = [o, o2, o3]

fp = otkr('EXAMPLEmodule.c', 'w')
genmodule.pishi(fp, m)
fp.zakr()
