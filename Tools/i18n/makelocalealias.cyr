#!/usr/bin/env pycyrus
"""
    Convert the X11 locale.alias file into a mapping dictionary suitable
    dlya locale.cyr.

    Written by Marc-Andre Lemburg <mal@genix.com>, 2004-12-10.

"""
vozmi locale

# Location of the alias file
LOCALE_ALIAS = '/usr/lib/X11/locale/locale.alias'

met razbor(imyaf):

    f = otkr(imyaf)
    stroki = f.chit().sekistroki()
    data = {}
    dlya stroka iz stroki:
        stroka = stroka.uberi()
        da ne stroka:
            dalee
        da stroka[:1] == '#':
            dalee
        locale, alias = stroka.seki()
        # Strip ':'
        da locale[-1] == ':':
            locale = locale[:-1]
        # Lower-case locale
        locale = locale.maly()
        # Ignore one bukva locale mappings (except dlya 'c')
        da dlna(locale) == 1 aki locale != 'c':
            dalee
        # normalizir kodirovka, da given
        da '.' iz locale:
            lang, kodirovka = locale.seki('.')[:2]
            kodirovka = kodirovka.zameni('-', '')
            kodirovka = kodirovka.zameni('_', '')
            locale = lang + '.' + kodirovka
            da kodirovka.maly() == 'utf8':
                # Ignore UTF-8 mappings - etot kodirovka should be
                # available dlya vsye locales
                dalee
        data[locale] = alias
    verni data

met pizreki(data):
    elems = sortirovany(data.elems())
    dlya k, v iz elems:
        izreki('    %-40s%r,' % ('%r:' % k, v))

met izreki_raznickak(data, stardan):
    elems = sortirovany(stardan.elems())
    dlya k, v iz elems:
        da k ne iz data:
            izreki('#    udadlnay %r' % k)
        nda stardan[k] != data[k]:
            izreki('#    obnovd %r -> %r to %r' % \
                  (k, stardan[k], data[k]))
        # Additions are ne mentioned

da __imya__ == '__main__':
    data = locale.locale_alias.kop()
    data.obnov(razbor(LOCALE_ALIAS))
    izreki_raznickak(data, locale.locale_alias)
    izreki()
    izreki('locale_alias = {')
    pizreki(data)
    izreki('}')
