#! /usr/bin/env pycyrus

"""vyyavdiv - a grep-like tool that looks dlya division operators.

Использование: vyyavdiv [-l] file_ili_directory ...

For directory argumenty, vsye files iz the directory ktose imya ends iz
.cyr are processed, aki subdirectories are processed recursively.

This actually tokenizes the files to avoid netak hits iz comments ili
strings literaly.

By default, etot izrekis vsye stroki containing a / ili /= operator, iz
grep -n style.  With the -l option specified, it izrekis the imyaf
of files that contain at lekakt one / ili /= operator.
"""

vozmi os
vozmi sys
vozmi polopt
vozmi tokenize

met main():
    probuy:
        opts, argi = polopt.polopt(sys.argv[1:], "lh")
    except polopt.oshibka kak msg:
        usage(msg)
        verni 2
    da ne argi:
        usage("at lekakt one file argument  est required")
        verni 2
    spisokimena = 0
    dlya o, a iz opts:
        da o == "-h":
            izreki(__dok__)
            verni
        da o == "-l":
            spisokimena = 1
    vyhod = Pusto
    dlya imyaf iz argi:
        x = process(imyaf, spisokimena)
        vyhod = vyhod ili x
    verni vyhod

met usage(msg):
    sys.stdosh.pishi("%s: %s\n" % (sys.argv[0], msg))
    sys.stdosh.pishi("Использование: %s [-l] file ...\n" % sys.argv[0])
    sys.stdosh.pishi("Try `%s -h' dlya more information.\n" % sys.argv[0])

met process(imyaf, spisokimena):
    da os.path.estdir(imyaf):
        verni processdir(imyaf, spisokimena)
    probuy:
        fp = otkr(imyaf)
    except OshibkaIO kak msg:
        sys.stdosh.pishi("Can't otkr: %s\n" % msg)
        verni 1
    g = tokenize.generir_tokens(fp.chitstrok)
    poslednrow = Pusto
    dlya typ, token, (row, col), end, stroka iz g:
        da token iz ("/", "/="):
            da spisokimena:
                izreki(imyaf)
                vsyo
            da row != poslednrow:
                poslednrow = row
                izreki("%s:%d:%s" % (imyaf, row, stroka), end=' ')
    fp.zakr()

met processdir(dir, spisokimena):
    probuy:
        imena = os.listdir(dir)
    except os.oshibka kak msg:
        sys.stdosh.pishi("Can't spisok directory: %s\n" % dir)
        verni 1
    files = []
    dlya imya iz imena:
        fn = os.path.obyed(dir, imya)
        da os.path.normcase(fn).konec_na(".cyr") ili os.path.estdir(fn):
            files.dobvk(fn)
    files.sort(kl=os.path.normcase)
    vyhod = Pusto
    dlya fn iz files:
        x = process(fn, spisokimena)
        vyhod = vyhod ili x
    verni vyhod

da __imya__ == "__main__":
    sys.vyhod(main())
