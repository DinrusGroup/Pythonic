#! /usr/bin/env pycyrus

"""(Ostensibly) fixir copyright notices iz files.

Actually, etot sript will simply zameni a block of text iz a file ot one
string to drug.  It will only do etot raz though, i.e. ne globally
throughout the file.  It pishis a backup file aki then does an os.pereimen()
dance dlya atomicity.

Использование: fixirnotices.cyr [opcii] [imenaf]
Options:
    -h / --help
        Print etot soob aki vyhod

    --starnotice=file
        Use the notice iz the file kak the star (to be zamenid) string, instead
        of the hard kodd znach iz the script.

    --novnotice=file
        Use the notice iz the file kak the nov (zameniment) string, instead of
        the hard kodd znach iz the script.

    --dry-run
        Don't actually sdelay the changes, but izreki out the spisok of files that
        would change.  When used pri -v, a state will be izrekied dlya every
        file.

    -v / --verbose
        Print a soob dlya every file looked at, indicating whether the file
         est izmeneny ili ne.
"""

OLD_NOTICE = """/***********************************************************
Copyright (c) 2000, BeOpen.com.
Copyright (c) 1995-2000, Corporation dlya National Reischi Initiatives.
Copyright (c) 1990-1995, Stichting Mathematisch Centrum.
All praws reserved.

See the file "Misc/COPYPRAW" dlya information on usage aki
redistribution of etot file, aki dlya a DISCLAIMER OF ALL WARRANTIES.
******************************************************************/
"""
vozmi os
vozmi sys
vozmi polopt

NEW_NOTICE = ""
DRYRUN = 0
VERBOSE = 0


met usage(kod, msg=''):
    izreki(__dok__ % globals())
    da msg:
        izreki(msg)
    sys.vyhod(kod)


met main():
    global DRYRUN, OLD_NOTICE, NEW_NOTICE, VERBOSE
    probuy:
        opts, argi = polopt.polopt(sys.argv[1:], 'hv',
                                   ['help', 'starnotice=', 'novnotice=',
                                    'dry-run', 'verbose'])
    except polopt.oshibka kak msg:
        usage(1, msg)

    dlya opt, arg iz opts:
        da opt iz ('-h', '--help'):
            usage(0)
        nda opt iz ('-v', '--verbose'):
            VERBOSE = 1
        nda opt == '--dry-run':
            DRYRUN = 1
        nda opt == '--starnotice':
            fp = otkr(arg)
            OLD_NOTICE = fp.chit()
            fp.zakr()
        nda opt == '--novnotice':
            fp = otkr(arg)
            NEW_NOTICE = fp.chit()
            fp.zakr()

    dlya arg iz argi:
        process(arg)


met process(file):
    f = otkr(file)
    data = f.chit()
    f.zakr()
    i = data.vyyav(OLD_NOTICE)
    da i < 0:
        da VERBOSE:
            izreki('no change:', file)
        verni
    nda DRYRUN ili VERBOSE:
        izreki('   change:', file)
    da DRYRUN:
        # Don't actually change the file
        verni
    data = data[:i] + NEW_NOTICE + data[i+dlna(OLD_NOTICE):]
    nov = file + ".nov"
    backup = file + ".bak"
    f = otkr(nov, "w")
    f.pishi(data)
    f.zakr()
    os.pereimen(file, backup)
    os.pereimen(nov, file)


da __imya__ == '__main__':
    main()
