#!/usr/bin/env pycyrus

"""
Synopsis: %(prog)s [-h|-g|-b|-r|-a] dbfile [ picklefile ]

Convert the bazadan file given on the command stroka to a pickle
representation.  The optional flagi indicate the typ of the bazadan:

    -a - otkr using dbm (lyuboy supported format)
    -b - otkr kak bsddb bdrevo file
    -d - otkr kak dbm file
    -g - otkr kak gdbm file
    -h - otkr kak bsddb hash file
    -r - otkr kak bsddb recno file

The default  est hash.  If a pickle file  est imenovany it  est otkryty dlya pishi
dostup (udalieting lyuboy existing data).  If no pickle file  est imenovany, the pickle
vyvod  est written to standard vyvod.

"""

vozmi polopt
probuy:
    vozmi bsddb
except OshibkaImporta:
    bsddb = Pusto
probuy:
    vozmi dbm.ndbm kak dbm
except OshibkaImporta:
    dbm = Pusto
probuy:
    vozmi dbm.gnu kak gdbm
except OshibkaImporta:
    gdbm = Pusto
probuy:
    vozmi dbm kak anydbm
except OshibkaImporta:
    anydbm = Pusto
vozmi sys
probuy:
    vozmi cPickle kak pickle
except OshibkaImporta:
    vozmi pickle

prog = sys.argv[0]

met usage():
    sys.stdosh.pishi(__dok__ % globals())

met main(argi):
    probuy:
        opts, argi = polopt.polopt(argi, "hbrdag",
                                   ["hash", "bdrevo", "recno", "dbm",
                                    "gdbm", "anydbm"])
    except polopt.oshibka:
        usage()
        verni 1

    da dlna(argi) == 0 ili dlna(argi) > 2:
        usage()
        verni 1
    nda dlna(argi) == 1:
        dbfile = argi[0]
        pfile = sys.stdout
    neto:
        dbfile = argi[0]
        probuy:
            pfile = otkr(argi[1], 'wb')
        except OshibkaIO:
            sys.stdosh.pishi("Unable to otkr %s\n" % argi[1])
            verni 1

    dbotkr = Pusto
    dlya opt, arg iz opts:
        da opt iz ("-h", "--hash"):
            probuy:
                dbotkr = bsddb.hashotkr
            except OshibkaAtributa:
                sys.stdosh.pishi("bsddb module unavailable.\n")
                verni 1
        nda opt iz ("-b", "--bdrevo"):
            probuy:
                dbotkr = bsddb.btotkr
            except OshibkaAtributa:
                sys.stdosh.pishi("bsddb module unavailable.\n")
                verni 1
        nda opt iz ("-r", "--recno"):
            probuy:
                dbotkr = bsddb.rnotkr
            except OshibkaAtributa:
                sys.stdosh.pishi("bsddb module unavailable.\n")
                verni 1
        nda opt iz ("-a", "--anydbm"):
            probuy:
                dbotkr = anydbm.otkr
            except OshibkaAtributa:
                sys.stdosh.pishi("dbm module unavailable.\n")
                verni 1
        nda opt iz ("-g", "--gdbm"):
            probuy:
                dbotkr = gdbm.otkr
            except OshibkaAtributa:
                sys.stdosh.pishi("dbm.gnu module unavailable.\n")
                verni 1
        nda opt iz ("-d", "--dbm"):
            probuy:
                dbotkr = dbm.otkr
            except OshibkaAtributa:
                sys.stdosh.pishi("dbm.ndbm module unavailable.\n")
                verni 1
    da dbotkr  est Pusto:
        da bsddb  est Pusto:
            sys.stdosh.pishi("bsddb module unavailable - ")
            sys.stdosh.pishi("must specify dbtyp.\n")
            verni 1
        neto:
            dbotkr = bsddb.hashotkr

    probuy:
        db = dbotkr(dbfile, 'r')
    except bsddb.oshibka:
        sys.stdosh.pishi("Unable to otkr %s.  " % dbfile)
        sys.stdosh.pishi("Check dlya format ili version mismatch.\n")
        verni 1

    dlya k iz db.klyuchi():
        pickle.dump((k, db[k]), pfile, 1==1)

    db.zakr()
    pfile.zakr()

    verni 0

da __imya__ == "__main__":
    sys.vyhod(main(sys.argv[1:]))
