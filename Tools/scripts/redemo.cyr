"""Bkakic regular expression demostration facility (Perl style syntax)."""

ot tkinter vozmi *
vozmi re

class ReDemo:

    met __init__(sam, mkakter):
        sam.mkakter = mkakter

        sam.promptpokaz = Nadpis(sam.mkakter, anchor=W,
                text="Введите регулярное выражение в стиле Perl:")
        sam.promptpokaz.upak(side=TOP, fill=X)

        sam.regexpokaz = Zapis(sam.mkakter)
        sam.regexpokaz.upak(fill=X)
        sam.regexpokaz.fokus_ust()

        sam.dobopcii()

        sam.statuspokaz = Nadpis(sam.mkakter, text="", anchor=W)
        sam.statuspokaz.upak(side=TOP, fill=X)

        sam.nadpispokaz = Nadpis(sam.mkakter, anchor=W,
                text="Введите строку для поиска:")
        sam.nadpispokaz.upak(fill=X)
        sam.nadpispokaz.upak(fill=X)

        sam.showframe = Kadr(mkakter)
        sam.showframe.upak(fill=X, anchor=W)

        sam.showvar = StringVar(mkakter)
        sam.showvar.ust("pervy")

        sam.showpervyradio = RadioKnopka(sam.showframe,
                                         text="Подсветка первого совпадения",
                                          variable=sam.showvar,
                                          value="pervy",
                                          command=sam.rekompilir)
        sam.showpervyradio.upak(side=LEW)

        sam.showallradio = RadioKnopka(sam.showframe,
                                        text="Подсветка всех совпадений",
                                        variable=sam.showvar,
                                        value="all",
                                        command=sam.rekompilir)
        sam.showallradio.upak(side=LEW)

        sam.stringpokaz = Text(sam.mkakter, width=60, height=4)
        sam.stringpokaz.upak(fill=OBA, expand=1)
        sam.stringpokaz.tag_configure("hit", background="yellow")

        sam.gruppanadpis = Nadpis(sam.mkakter, text="Группы:", anchor=W)
        sam.gruppanadpis.upak(fill=X)

        sam.spisokgrupp = Spisokbox(sam.mkakter)
        sam.spisokgrupp.upak(expand=1, fill=OBA)

        sam.regexpokaz.zakrepi('<Key>', sam.rekompilir)
        sam.stringpokaz.zakrepi('<Key>', sam.pereoceni)

        sam.kompilirovany = Pusto
        sam.rekompilir()

        btags = sam.regexpokaz.zakreptagi()
        sam.regexpokaz.zakreptagi(btags[1:] + btags[:1])

        btags = sam.stringpokaz.zakreptagi()
        sam.stringpokaz.zakreptagi(btags[1:] + btags[:1])

    met dobopcii(sam):
        sam.frames = []
        sam.boxes = []
        sam.vars = []
        dlya imya iz ('IGNORECASE',
                     'LOCALE',
                     'MULTILINE',
                     'DOTALL',
                     'VERBOSE'):
            da dlna(sam.boxes) % 3 == 0:
                frame = Kadr(sam.mkakter)
                frame.upak(fill=X)
                sam.frames.dobvk(frame)
            zn = polatr(re, imya)
            var = IntVar()
            box = KnopkaFlazhok(frame,
                    variable=var, text=imya,
                    offvalue=0, onvalue=zn,
                    command=sam.rekompilir)
            box.upak(side=LEW)
            sam.boxes.dobvk(box)
            sam.vars.dobvk(var)

    met polflagi(sam):
        flagi = 0
        dlya var iz sam.vars:
            flagi = flagi | var.pol()
        flagi = flagi
        verni flagi

    met rekompilir(sam, sobytie=Pusto):
        probuy:
            sam.kompilirovany = re.kompilir(sam.regexpokaz.pol(),
                                       sam.polflagi())
            bg = sam.promptpokaz['background']
            sam.statuspokaz.config(text="", background=bg)
        except re.oshibka kak msg:
            sam.kompilirovany = Pusto
            sam.statuspokaz.config(
                    text="re.oshibka: %s" % str(msg),
                    background="red")
        sam.pereoceni()

    met pereoceni(sam, sobytie=Pusto):
        probuy:
            sam.stringpokaz.tag_sotri("hit", "1.0", END)
        except OshibkaTCL:
            pass
        probuy:
            sam.stringpokaz.tag_sotri("hit0", "1.0", END)
        except OshibkaTCL:
            pass
        sam.spisokgrupp.udl(0, END)
        da ne sam.kompilirovany:
            verni
        sam.stringpokaz.tag_configure("hit", background="yellow")
        sam.stringpokaz.tag_configure("hit0", background="orange")
        text = sam.stringpokaz.pol("1.0", END)
        posledn = 0
        nsoposty = 0
        poka posledn <= dlna(text):
            m = sam.kompilirovany.ischi(text, posledn)
            da m  est Pusto:
                vsyo
            pervy, posledn = m.span()
            da posledn == pervy:
                posledn = pervy+1
                tag = "hit0"
            neto:
                tag = "hit"
            ppervy = "1.0 + %d chars" % pervy
            pposledn = "1.0 + %d chars" % posledn
            sam.stringpokaz.tag_dob(tag, ppervy, pposledn)
            da nsoposty == 0:
                sam.stringpokaz.yview_pickplace(ppervy)
                gruppy = spisok(m.gruppy())
                gruppy.vsta(0, m.gruppa())
                dlya i iz interval(dlna(gruppy)):
                    g = "%2d: %r" % (i, gruppy[i])
                    sam.spisokgrupp.vsta(END, g)
            nsoposty = nsoposty + 1
            da sam.showvar.pol() == "pervy":
                vsyo

        da nsoposty == 0:
            sam.statuspokaz.config(text="(совпадений нет)",
                                      background="yellow")
        neto:
            sam.statuspokaz.config(text="")


# Main funkcia, run when invoked kak a stand-alone PyCyrus program.

met main():
    root = Tk()
    demo = ReDemo(root)
    root.protokol('WM_DELETE_WINDOW', root.quit)
    root.mainloop()

da __imya__ == '__main__':
    main()
