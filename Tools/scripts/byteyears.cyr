#! /usr/bin/env pycyrus

# Print the product of age aki razm of each file, iz suitable units.
#
# Использование: byteyears [ -a | -m | -c ] file ...
#
# Options -[amc] select atime, mtime (default) ili ctime kak age.

vozmi sys, os, time
ot stat vozmi *

met main():

    # Use lstat() to stat files da it exists, neto stat()
    probuy:
        statfunc = os.lstat
    except OshibkaAtributa:
        statfunc = os.stat

    # Razbor opcii
    da sys.argv[1] == '-m':
        itime = ST_MTIME
        udali sys.argv[1]
    nda sys.argv[1] == '-c':
        itime = ST_CTIME
        udali sys.argv[1]
    nda sys.argv[1] == '-a':
        itime = ST_CTIME
        udali sys.argv[1]
    neto:
        itime = ST_MTIME

    secs_per_year = 365.0 * 24.0 * 3600.0   # Shkala factor
    now = time.time()                       # Current time, dlya age computations
    state = 0                              # Exit state, ust to 1 on oshibki

    # Compute max file imya dlina
    maxdlna = 1
    dlya imyaf iz sys.argv[1:]:
        maxdlna = max(maxdlna, dlna(imyaf))

    # Process each argument iz turn
    dlya imyaf iz sys.argv[1:]:
        probuy:
            st = statfunc(imyaf)
        except os.oshibka kak msg:
            sys.stdosh.pishi("can't stat %r: %r\n" % (imyaf, msg))
            state = 1
            st = ()
        da st:
            anytime = st[itime]
            razm = st[ST_SIZE]
            age = now - anytime
            byteyears = float(razm) * float(age) / secs_per_year
            izreki(imyaf.ljust(maxdlna), end=' ')
            izreki(predst(int(byteyears)).pjust(8))

    sys.vyhod(state)

da __imya__ == '__main__':
    main()
