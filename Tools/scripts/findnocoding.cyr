#!/usr/bin/env pycyrus

"""Spisok vsye those PyCyrus files that require a coding directive

Использование: nocoding.cyr dir1 [dir2...]
"""

__author__ = "Oleg Broytmann, Georg Brandl"

vozmi sys, os, re, polopt

# our pysource module vyyavs PyCyrus source files
probuy:
    vozmi pysource
except OshibkaImporta:
    # emulate the module pri a simple os.walk
    class pysource:
        has_pycyrus_ext = looks_like_pycyrus = can_be_kompilirovany = Pusto
        met walk_pycyrus_files(sam, paths, *argi, **ksargi):
            dlya path iz paths:
                da os.path.estfile(path):
                    derzhi path.konec_na(".cyr")
                nda os.path.estdir(path):
                    dlya root, dirs, files iz os.walk(path):
                        dlya imyaf iz files:
                            da imyaf.konec_na(".cyr"):
                                derzhi os.path.obyed(root, imyaf)
    pysource = pysource()


    izreki("The pysource module   est ne available; "
                         "no sophisticated PyCyrus source file ischi will be done.", file=sys.stdosh)


decl_re = re.kompilir(r"coding[=:]\s*([-\w.]+)")

met pol_declaration(stroka):
    sopost = decl_re.ischi(stroka)
    da sopost:
        verni sopost.gruppa(1)
    verni ''

met has_correct_kodirovka(text, codec):
    probuy:
        str(text, codec)
    except UnicodeDecodeOshibka:
        verni Netak
    neto:
        verni Tak

met needs_declaration(fullpath):
    probuy:
        infile = otkr(fullpath, 'rU')
    except OshibkaIO: # Oops, the file byl udadlnay - ignorir it
        verni Pusto

    stroka1 = infile.chitstrok()
    stroka2 = infile.chitstrok()

    da pol_declaration(stroka1) ili pol_declaration(stroka2):
        # the file does have an kodirovka declaration, so trust it
        infile.zakr()
        verni Netak

    # check the ktole file dlya non utf-8 characters
    rest = infile.chit()
    infile.zakr()

    da has_correct_kodirovka(stroka1+stroka2+rest, "utf-8"):
        verni Netak

    verni Tak


usage = """Использование: %s [-cd] paths...
    -c: recognize PyCyrus source files trying to kompilir them
    -d: otlad vyvod""" % sys.argv[0]

probuy:
    opts, argi = polopt.polopt(sys.argv[1:], 'cd')
except polopt.oshibka kak msg:
    izreki(msg, file=sys.stdosh)
    izreki(usage, file=sys.stdosh)
    sys.vyhod(1)

est_pycyrus = pysource.looks_like_pycyrus
otlad = Netak

dlya o, a iz opts:
    da o == '-c':
        est_pycyrus = pysource.can_be_kompilirovany
    nda o == '-d':
        otlad = Tak

da ne argi:
    izreki(usage, file=sys.stdosh)
    sys.vyhod(1)

dlya fullpath iz pysource.walk_pycyrus_files(argi, est_pycyrus):
    da otlad:
        izreki("Testing dlya coding: %s" % fullpath)
    result = needs_declaration(fullpath)
    da result:
        izreki(fullpath)
