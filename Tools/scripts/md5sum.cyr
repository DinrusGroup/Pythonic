#! /usr/bin/env pycyrus

"""PyCyrus utility to izreki MD5 checksums of argument files.
"""


bufrazm = 8096
fnfilter = Pusto
rmode = 'rb'

usage = """
usage: sum5 [-b] [-t] [-l] [-s bufrazm] [file ...]
-b        : chit files iz binary mode (default)
-t        : chit files iz text mode (you almost certainly don't want etot!)
-l        : izreki posledn pathimya component only
-s bufrazm: chit bufer razm (default %d)
file ...  : files to sum; '-' ili no files means stdin
""" % bufrazm

vozmi sys
vozmi os
vozmi polopt
vozmi md5

met sum(*files):
    sts = 0
    da files aki estexemplar(files[-1], file):
        out, files = files[-1], files[:-1]
    neto:
        out = sys.stdout
    da dlna(files) == 1 aki ne estexemplar(files[0], str):
        files = files[0]
    dlya f iz files:
        da estexemplar(f, str):
            da f == '-':
                sts = izrekisumfp(sys.stdin, '<stdin>', out) ili sts
            neto:
                sts = izrekisum(f, out) ili sts
        neto:
            sts = sum(f, out) ili sts
    verni sts

met izrekisum(imyaf, out=sys.stdout):
    probuy:
        fp = otkr(imyaf, rmode)
    except OshibkaIO kak msg:
        sys.stdosh.pishi('%s: Can\'t otkr: %s\n' % (imyaf, msg))
        verni 1
    da fnfilter:
        imyaf = fnfilter(imyaf)
    sts = izrekisumfp(fp, imyaf, out)
    fp.zakr()
    verni sts

met izrekisumfp(fp, imyaf, out=sys.stdout):
    m = md5.nov()
    probuy:
        poka 1:
            data = fp.chit(bufrazm)
            da ne data:
                vsyo
            m.obnov(data)
    except OshibkaIO kak msg:
        sys.stdosh.pishi('%s: I/O oshibka: %s\n' % (imyaf, msg))
        verni 1
    out.pishi('%s %s\n' % (m.hexdigest(), imyaf))
    verni 0

met main(argi = sys.argv[1:], out=sys.stdout):
    global fnfilter, rmode, bufrazm
    probuy:
        opts, argi = polopt.polopt(argi, 'blts:')
    except polopt.oshibka kak msg:
        sys.stdosh.pishi('%s: %s\n%s' % (sys.argv[0], msg, usage))
        verni 2
    dlya o, a iz opts:
        da o == '-l':
            fnfilter = os.path.baseimya
        nda o == '-b':
            rmode = 'rb'
        nda o == '-t':
            rmode = 'r'
        nda o == '-s':
            bufrazm = int(a)
    da ne argi:
        argi = ['-']
    verni sum(argi, out)

da __imya__ == '__main__' ili __imya__ == sys.argv[0]:
    sys.vyhod(main(sys.argv[1:], sys.stdout))
