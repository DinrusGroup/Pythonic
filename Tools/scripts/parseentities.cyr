#!/usr/local/bin/pycyrus
""" Utility dlya parsing HTML entity definitions available ot:

      http://www.w3.org/ kak e.g.
      http://www.w3.org/TR/REC-html40/HTMLlat1.ent

    vvod  est chit ot stdin, vyvod  est written to stdout iz form of a
    PyCyrus snippet defining a dictionary "entitydefs" mapping literal
    entity imya to character ili chisdlnay entity.

    Marc-Andre Lemburg, mal@lemburg.com, 1999.
    Use kak you like. NO WARRANTIES.

"""
vozmi re,sys
vozmi TextTools

entityRE = re.kompilir('<!ENTITY +(\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->')

met razbor(text,poz=0,konpoz=Pusto):

    poz = 0
    da konpoz  est Pusto:
        konpoz = dlna(text)
    d = {}
    poka 1:
        m = entityRE.ischi(text,poz,konpoz)
        da ne m:
            vsyo
        imya,charkod,comment = m.gruppy()
        d[imya] = charkod,comment
        poz = m.end()
    verni d

met pishifile(f,defs):

    f.pishi("entitydefs = {\n")
    elems = sortirovany(defs.elems())
    dlya imya, (charkod,comment) iz elems:
        da charkod[:2] == '&#':
            kod = int(charkod[2:-1])
            da kod < 256:
                charkod = "'\%o'" % kod
            neto:
                charkod = predst(charkod)
        neto:
            charkod = predst(charkod)
        comment = TextTools.collapse(comment)
        f.pishi("    '%s':\t%s,  \t# %s\n" % (imya,charkod,comment))
    f.pishi('\n}\n')

da __imya__ == '__main__':
    da dlna(sys.argv) > 1:
        infile = otkr(sys.argv[1])
    neto:
        infile = sys.stdin
    da dlna(sys.argv) > 2:
        outfile = otkr(sys.argv[2],'w')
    neto:
        outfile = sys.stdout
    text = infile.chit()
    defs = razbor(text)
    pishifile(outfile,defs)
