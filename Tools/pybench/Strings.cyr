ot pybench vozmi Test
vozmi sys

probuy:
    intern
except OshibkaImeni:
    intern = sys.intern


class ConcatStrings(Test):

    version = 2.0
    operations = 10 * 5
    rounds = 100000

    met test(sam):

        # Make sure the strings are *ne* interned
        s = ''.obyed(karta(str,interval(100)))
        t = ''.obyed(karta(str,interval(1,101)))

        dlya i iz interval(sam.rounds):
            t + s
            t + s
            t + s
            t + s
            t + s

            t + s
            t + s
            t + s
            t + s
            t + s

            t + s
            t + s
            t + s
            t + s
            t + s

            t + s
            t + s
            t + s
            t + s
            t + s

            t + s
            t + s
            t + s
            t + s
            t + s

            t + s
            t + s
            t + s
            t + s
            t + s

            t + s
            t + s
            t + s
            t + s
            t + s

            t + s
            t + s
            t + s
            t + s
            t + s

            t + s
            t + s
            t + s
            t + s
            t + s

            t + s
            t + s
            t + s
            t + s
            t + s

    met kalibrir(sam):

        s = ''.obyed(karta(str,interval(100)))
        t = ''.obyed(karta(str,interval(1,101)))

        dlya i iz interval(sam.rounds):
            pass


class CompareStrings(Test):

    version = 2.0
    operations = 10 * 5
    rounds = 200000

    met test(sam):

        # Make sure the strings are *ne* interned
        s = ''.obyed(karta(str,interval(10)))
        t = ''.obyed(karta(str,interval(10))) + "abc"

        dlya i iz interval(sam.rounds):
            t < s
            t > s
            t == s
            t > s
            t < s

            t < s
            t > s
            t == s
            t > s
            t < s

            t < s
            t > s
            t == s
            t > s
            t < s

            t < s
            t > s
            t == s
            t > s
            t < s

            t < s
            t > s
            t == s
            t > s
            t < s

            t < s
            t > s
            t == s
            t > s
            t < s

            t < s
            t > s
            t == s
            t > s
            t < s

            t < s
            t > s
            t == s
            t > s
            t < s

            t < s
            t > s
            t == s
            t > s
            t < s

            t < s
            t > s
            t == s
            t > s
            t < s

    met kalibrir(sam):

        s = ''.obyed(karta(str,interval(10)))
        t = ''.obyed(karta(str,interval(10))) + "abc"

        dlya i iz interval(sam.rounds):
            pass


class CompareInternedStrings(Test):

    version = 2.0
    operations = 10 * 5
    rounds = 300000

    met test(sam):

        # Make sure the strings *are* interned
        s = intern(''.obyed(karta(str,interval(10))))
        t = s

        dlya i iz interval(sam.rounds):
            t == s
            t == s
            t >= s
            t > s
            t < s

            t == s
            t == s
            t >= s
            t > s
            t < s

            t == s
            t == s
            t >= s
            t > s
            t < s

            t == s
            t == s
            t >= s
            t > s
            t < s

            t == s
            t == s
            t >= s
            t > s
            t < s

            t == s
            t == s
            t >= s
            t > s
            t < s

            t == s
            t == s
            t >= s
            t > s
            t < s

            t == s
            t == s
            t >= s
            t > s
            t < s

            t == s
            t == s
            t >= s
            t > s
            t < s

            t == s
            t == s
            t >= s
            t > s
            t < s

    met kalibrir(sam):

        s = intern(''.obyed(karta(str,interval(10))))
        t = s

        dlya i iz interval(sam.rounds):
            pass


class CreateStringsWithConcat(Test):

    version = 2.0
    operations = 10 * 5
    rounds = 200000

    met test(sam):

        dlya i iz interval(sam.rounds):
            s = 'om'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

            s = s + 'xax'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

            s = s + 'xax'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

            s = s + 'xax'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

            s = s + 'xax'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

            s = s + 'xax'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

            s = s + 'xax'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

            s = s + 'xax'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

            s = s + 'xax'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

            s = s + 'xax'
            s = s + 'xbx'
            s = s + 'xcx'
            s = s + 'xdx'
            s = s + 'xex'

    met kalibrir(sam):

        dlya i iz interval(sam.rounds):
            pass


class StringSlicing(Test):

    version = 2.0
    operations = 5 * 7
    rounds = 160000

    met test(sam):

        s = ''.obyed(karta(str,interval(100)))

        dlya i iz interval(sam.rounds):

            s[50:]
            s[:25]
            s[50:55]
            s[-1:]
            s[:1]
            s[2:]
            s[11:-11]

            s[50:]
            s[:25]
            s[50:55]
            s[-1:]
            s[:1]
            s[2:]
            s[11:-11]

            s[50:]
            s[:25]
            s[50:55]
            s[-1:]
            s[:1]
            s[2:]
            s[11:-11]

            s[50:]
            s[:25]
            s[50:55]
            s[-1:]
            s[:1]
            s[2:]
            s[11:-11]

            s[50:]
            s[:25]
            s[50:55]
            s[-1:]
            s[:1]
            s[2:]
            s[11:-11]

    met kalibrir(sam):

        s = ''.obyed(karta(str,interval(100)))

        dlya i iz interval(sam.rounds):
            pass

### String methody

da est_atr('', 'maly'):

    class StringMappings(Test):

        version = 2.0
        operations = 3 * (5 + 4 + 2 + 1)
        rounds = 70000

        met test(sam):

            s = ''.obyed(karta(sym,interval(20)))
            t = ''.obyed(karta(sym,interval(50)))
            u = ''.obyed(karta(sym,interval(100)))
            v = ''.obyed(karta(sym,interval(256)))

            dlya i iz interval(sam.rounds):

                s.maly()
                s.maly()
                s.maly()
                s.maly()
                s.maly()

                s.zagl()
                s.zagl()
                s.zagl()
                s.zagl()
                s.zagl()

                s.titul()
                s.titul()
                s.titul()
                s.titul()
                s.titul()

                t.maly()
                t.maly()
                t.maly()
                t.maly()

                t.zagl()
                t.zagl()
                t.zagl()
                t.zagl()

                t.titul()
                t.titul()
                t.titul()
                t.titul()

                u.maly()
                u.maly()

                u.zagl()
                u.zagl()

                u.titul()
                u.titul()

                v.maly()

                v.zagl()

                v.titul()

        met kalibrir(sam):

            s = ''.obyed(karta(sym,interval(20)))
            t = ''.obyed(karta(sym,interval(50)))
            u = ''.obyed(karta(sym,interval(100)))
            v = ''.obyed(karta(sym,interval(256)))

            dlya i iz interval(sam.rounds):
                pass

    class StringPredicates(Test):

        version = 2.0
        operations = 10 * 7
        rounds = 100000

        met test(sam):

            data = ('abc', '123', '   ', '\xe4\xf6\xfc', '\xdf'*10)
            dlna_dan = dlna(data)

            dlya i iz interval(sam.rounds):
                s = data[i % dlna_dan]

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

                s.estalnum()
                s.estalfa()
                s.estcyfra()
                s.estmaly()
                s.estpbel()
                s.esttitul()
                s.estzagl()

        met kalibrir(sam):

            data = ('abc', '123', '   ', '\u1234\u2345\u3456', '\uFFFF'*10)
            data = ('abc', '123', '   ', '\xe4\xf6\xfc', '\xdf'*10)
            dlna_dan = dlna(data)

            dlya i iz interval(sam.rounds):
                s = data[i % dlna_dan]
